
RTOS_Driven_Smart_Home.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002330  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000009e  00800060  00002330  000023c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000482  008000fe  008000fe  00002462  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002462  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002494  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a0  00000000  00000000  000024d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005568  00000000  00000000  00002970  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001313  00000000  00000000  00007ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002f88  00000000  00000000  000091eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000dc8  00000000  00000000  0000c174  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000017e5  00000000  00000000  0000cf3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004727  00000000  00000000  0000e721  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000478  00000000  00000000  00012e48  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__vector_7>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 c1 0f 	jmp	0x1f82	; 0x1f82 <__vector_10>
      2c:	0c 94 9a 0f 	jmp	0x1f34	; 0x1f34 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e3       	ldi	r30, 0x30	; 48
      68:	f3 e2       	ldi	r31, 0x23	; 35
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 3f       	cpi	r26, 0xFE	; 254
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	25 e0       	ldi	r18, 0x05	; 5
      78:	ae ef       	ldi	r26, 0xFE	; 254
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 38       	cpi	r26, 0x80	; 128
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 8d 02 	call	0x51a	; 0x51a <main>
      8a:	0c 94 96 11 	jmp	0x232c	; 0x232c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LM35>:
u8 enteredPassword[4];
u8 passwordIndex = 0;

//-------------------------------------------------------------
//-------------------------------------------------------------
void LM35(void){
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	00 d0       	rcall	.+0      	; 0x98 <LM35+0x6>
      98:	00 d0       	rcall	.+0      	; 0x9a <LM35+0x8>
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
	u16 adc = 0 ;
	f32 temp = 0 ;
      9e:	19 82       	std	Y+1, r1	; 0x01
      a0:	1a 82       	std	Y+2, r1	; 0x02
      a2:	1b 82       	std	Y+3, r1	; 0x03
      a4:	1c 82       	std	Y+4, r1	; 0x04
	
	while (1)
	{
		if (xSemaphoreTake( LCD, 100 ) == HIGH && PassCorrect)
      a6:	20 e0       	ldi	r18, 0x00	; 0
      a8:	44 e6       	ldi	r20, 0x64	; 100
      aa:	50 e0       	ldi	r21, 0x00	; 0
      ac:	60 e0       	ldi	r22, 0x00	; 0
      ae:	70 e0       	ldi	r23, 0x00	; 0
      b0:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
      b4:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
      b8:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
      bc:	81 30       	cpi	r24, 0x01	; 1
      be:	e1 f5       	brne	.+120    	; 0x138 <LM35+0xa6>
      c0:	80 91 ff 00 	lds	r24, 0x00FF	; 0x8000ff <PassCorrect>
      c4:	88 23       	and	r24, r24
      c6:	c1 f1       	breq	.+112    	; 0x138 <LM35+0xa6>
		{
			adc = ADC_u16ReadChannel(ADC_0) ;
      c8:	80 e0       	ldi	r24, 0x00	; 0
      ca:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <ADC_u16ReadChannel>
			temp = (f32) adc*500/1024 ;
      ce:	bc 01       	movw	r22, r24
      d0:	80 e0       	ldi	r24, 0x00	; 0
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	0e 94 26 10 	call	0x204c	; 0x204c <__floatunsisf>
      d8:	20 e0       	ldi	r18, 0x00	; 0
      da:	30 e0       	ldi	r19, 0x00	; 0
      dc:	4a ef       	ldi	r20, 0xFA	; 250
      de:	53 e4       	ldi	r21, 0x43	; 67
      e0:	0e 94 91 10 	call	0x2122	; 0x2122 <__mulsf3>
      e4:	20 e0       	ldi	r18, 0x00	; 0
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	40 e8       	ldi	r20, 0x80	; 128
      ea:	5a e3       	ldi	r21, 0x3A	; 58
      ec:	0e 94 91 10 	call	0x2122	; 0x2122 <__mulsf3>
      f0:	69 83       	std	Y+1, r22	; 0x01
      f2:	7a 83       	std	Y+2, r23	; 0x02
      f4:	8b 83       	std	Y+3, r24	; 0x03
      f6:	9c 83       	std	Y+4, r25	; 0x04
			xQueueSend( Queue1, &temp, 100 );
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	44 e6       	ldi	r20, 0x64	; 100
      fc:	50 e0       	ldi	r21, 0x00	; 0
      fe:	be 01       	movw	r22, r28
     100:	6f 5f       	subi	r22, 0xFF	; 255
     102:	7f 4f       	sbci	r23, 0xFF	; 255
     104:	80 91 7c 05 	lds	r24, 0x057C	; 0x80057c <Queue1>
     108:	90 91 7d 05 	lds	r25, 0x057D	; 0x80057d <Queue1+0x1>
     10c:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
			
			LCD_voidGotoxy(0, 1);
     110:	61 e0       	ldi	r22, 0x01	; 1
     112:	80 e0       	ldi	r24, 0x00	; 0
     114:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
			LCD_voidSendString("TEMP ");
     118:	86 e6       	ldi	r24, 0x66	; 102
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
			
			LCD_voidGotoxy(5, 1);
     120:	61 e0       	ldi	r22, 0x01	; 1
     122:	85 e0       	ldi	r24, 0x05	; 5
     124:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
			LCD_voidSendNumber(temp);
     128:	69 81       	ldd	r22, Y+1	; 0x01
     12a:	7a 81       	ldd	r23, Y+2	; 0x02
     12c:	8b 81       	ldd	r24, Y+3	; 0x03
     12e:	9c 81       	ldd	r25, Y+4	; 0x04
     130:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__fixunssfsi>
     134:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <LCD_voidSendNumber>
		}
		xSemaphoreGive( LCD );
     138:	20 e0       	ldi	r18, 0x00	; 0
     13a:	40 e0       	ldi	r20, 0x00	; 0
     13c:	50 e0       	ldi	r21, 0x00	; 0
     13e:	60 e0       	ldi	r22, 0x00	; 0
     140:	70 e0       	ldi	r23, 0x00	; 0
     142:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     146:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     14a:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
		vTaskDelay(100);
     14e:	84 e6       	ldi	r24, 0x64	; 100
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	0e 94 9a 0b 	call	0x1734	; 0x1734 <vTaskDelay>
	}
     156:	a7 cf       	rjmp	.-178    	; 0xa6 <LM35+0x14>

00000158 <Terminal>:
}
//-------------------------------------------------------------
void Terminal(void)
{
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	1f 92       	push	r1
     15e:	cd b7       	in	r28, 0x3d	; 61
     160:	de b7       	in	r29, 0x3e	; 62
	u8 val;
	u8 passwordCorrect = 0;
     162:	19 82       	std	Y+1, r1	; 0x01

	while (1)
	{
		if (xSemaphoreTake(LCD, 100) == pdTRUE)
     164:	20 e0       	ldi	r18, 0x00	; 0
     166:	44 e6       	ldi	r20, 0x64	; 100
     168:	50 e0       	ldi	r21, 0x00	; 0
     16a:	60 e0       	ldi	r22, 0x00	; 0
     16c:	70 e0       	ldi	r23, 0x00	; 0
     16e:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     172:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     176:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
     17a:	81 30       	cpi	r24, 0x01	; 1
     17c:	71 f5       	brne	.+92     	; 0x1da <Terminal+0x82>
		{
			val = UART_u8RX();
     17e:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <UART_u8RX>
			enteredPassword[passwordIndex++] = val;
     182:	e0 91 fe 00 	lds	r30, 0x00FE	; 0x8000fe <__data_end>
     186:	91 e0       	ldi	r25, 0x01	; 1
     188:	9e 0f       	add	r25, r30
     18a:	90 93 fe 00 	sts	0x00FE, r25	; 0x8000fe <__data_end>
     18e:	f0 e0       	ldi	r31, 0x00	; 0
     190:	e8 58       	subi	r30, 0x88	; 136
     192:	fa 4f       	sbci	r31, 0xFA	; 250
     194:	80 83       	st	Z, r24

			if (passwordIndex >= 4)
     196:	94 30       	cpi	r25, 0x04	; 4
     198:	00 f1       	brcs	.+64     	; 0x1da <Terminal+0x82>
			{
				passwordIndex = 0;
     19a:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <__data_end>

				if (memcmp(enteredPassword, correctPassword, 4) == 0) passwordCorrect = 1;
     19e:	44 e0       	ldi	r20, 0x04	; 4
     1a0:	50 e0       	ldi	r21, 0x00	; 0
     1a2:	60 e6       	ldi	r22, 0x60	; 96
     1a4:	70 e0       	ldi	r23, 0x00	; 0
     1a6:	88 e7       	ldi	r24, 0x78	; 120
     1a8:	95 e0       	ldi	r25, 0x05	; 5
     1aa:	0e 94 80 11 	call	0x2300	; 0x2300 <memcmp>
     1ae:	89 2b       	or	r24, r25
     1b0:	19 f4       	brne	.+6      	; 0x1b8 <Terminal+0x60>
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	89 83       	std	Y+1, r24	; 0x01
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <Terminal+0x62>
				else passwordCorrect = 0;
     1b8:	19 82       	std	Y+1, r1	; 0x01
				
				xQueueSend(Queue2, &passwordCorrect, 100);
     1ba:	20 e0       	ldi	r18, 0x00	; 0
     1bc:	44 e6       	ldi	r20, 0x64	; 100
     1be:	50 e0       	ldi	r21, 0x00	; 0
     1c0:	be 01       	movw	r22, r28
     1c2:	6f 5f       	subi	r22, 0xFF	; 255
     1c4:	7f 4f       	sbci	r23, 0xFF	; 255
     1c6:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <Queue2>
     1ca:	90 91 77 05 	lds	r25, 0x0577	; 0x800577 <Queue2+0x1>
     1ce:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
				
				vTaskSuspend(NULL);
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	0e 94 35 0c 	call	0x186a	; 0x186a <vTaskSuspend>
			}
		}
		xSemaphoreGive(LCD);
     1da:	20 e0       	ldi	r18, 0x00	; 0
     1dc:	40 e0       	ldi	r20, 0x00	; 0
     1de:	50 e0       	ldi	r21, 0x00	; 0
     1e0:	60 e0       	ldi	r22, 0x00	; 0
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     1e8:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     1ec:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
		
	}
     1f0:	b9 cf       	rjmp	.-142    	; 0x164 <Terminal+0xc>

000001f2 <Screen>:
}

//-------------------------------------------------------------
void Screen(void)
{
     1f2:	cf 93       	push	r28
     1f4:	df 93       	push	r29
     1f6:	1f 92       	push	r1
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
	u8 result;
	
	while (1)
	{
		if (xSemaphoreTake(LCD, 100) == pdTRUE)
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	44 e6       	ldi	r20, 0x64	; 100
     200:	50 e0       	ldi	r21, 0x00	; 0
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     20a:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     20e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
     212:	81 30       	cpi	r24, 0x01	; 1
     214:	99 f7       	brne	.-26     	; 0x1fc <Screen+0xa>
		{
			
			
			if (xQueueReceive(Queue2, &result, 100) == pdTRUE)
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	44 e6       	ldi	r20, 0x64	; 100
     21a:	50 e0       	ldi	r21, 0x00	; 0
     21c:	be 01       	movw	r22, r28
     21e:	6f 5f       	subi	r22, 0xFF	; 255
     220:	7f 4f       	sbci	r23, 0xFF	; 255
     222:	80 91 76 05 	lds	r24, 0x0576	; 0x800576 <Queue2>
     226:	90 91 77 05 	lds	r25, 0x0577	; 0x800577 <Queue2+0x1>
     22a:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
     22e:	81 30       	cpi	r24, 0x01	; 1
     230:	41 f5       	brne	.+80     	; 0x282 <Screen+0x90>
			{
				if (result == 1)
     232:	89 81       	ldd	r24, Y+1	; 0x01
     234:	81 30       	cpi	r24, 0x01	; 1
     236:	81 f4       	brne	.+32     	; 0x258 <Screen+0x66>
				{
					PassCorrect = 1;
     238:	80 93 ff 00 	sts	0x00FF, r24	; 0x8000ff <PassCorrect>
					DIO_voidSetPinVal(DIO_PORTC, DIO_PIN0, HIGH);
     23c:	41 e0       	ldi	r20, 0x01	; 1
     23e:	60 e0       	ldi	r22, 0x00	; 0
     240:	82 e0       	ldi	r24, 0x02	; 2
     242:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>

					LCD_voidGotoxy(0, 0);
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	80 e0       	ldi	r24, 0x00	; 0
     24a:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
					LCD_voidSendString("WELCOME  ");
     24e:	8c e6       	ldi	r24, 0x6C	; 108
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
     256:	15 c0       	rjmp	.+42     	; 0x282 <Screen+0x90>
				}
				else
				{
					LCD_voidGotoxy(0, 0);
     258:	60 e0       	ldi	r22, 0x00	; 0
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
					LCD_voidSendString("WRONG PASSWORD!");
     260:	86 e7       	ldi	r24, 0x76	; 118
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
					LCD_voidGotoxy(0, 1);
     268:	61 e0       	ldi	r22, 0x01	; 1
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
					LCD_voidSendString("               ");
     270:	86 e8       	ldi	r24, 0x86	; 134
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>

					DIO_voidSetPinVal(DIO_PORTC, DIO_PIN1, HIGH);
     278:	41 e0       	ldi	r20, 0x01	; 1
     27a:	61 e0       	ldi	r22, 0x01	; 1
     27c:	82 e0       	ldi	r24, 0x02	; 2
     27e:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
				}
			}
			xSemaphoreGive(LCD);
     282:	20 e0       	ldi	r18, 0x00	; 0
     284:	40 e0       	ldi	r20, 0x00	; 0
     286:	50 e0       	ldi	r21, 0x00	; 0
     288:	60 e0       	ldi	r22, 0x00	; 0
     28a:	70 e0       	ldi	r23, 0x00	; 0
     28c:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     290:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     294:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
			vTaskSuspend(NULL);
     298:	80 e0       	ldi	r24, 0x00	; 0
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	0e 94 35 0c 	call	0x186a	; 0x186a <vTaskSuspend>
     2a0:	ad cf       	rjmp	.-166    	; 0x1fc <Screen+0xa>

000002a2 <LDR>:
	u16 adc = 0 ;
	u32 V = 0 ;
	
	while (1)
	{
		if (xSemaphoreTake( LCD, 100 ) == HIGH && PassCorrect)
     2a2:	20 e0       	ldi	r18, 0x00	; 0
     2a4:	44 e6       	ldi	r20, 0x64	; 100
     2a6:	50 e0       	ldi	r21, 0x00	; 0
     2a8:	60 e0       	ldi	r22, 0x00	; 0
     2aa:	70 e0       	ldi	r23, 0x00	; 0
     2ac:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     2b0:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     2b4:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
     2b8:	81 30       	cpi	r24, 0x01	; 1
     2ba:	09 f0       	breq	.+2      	; 0x2be <LDR+0x1c>
     2bc:	5a c0       	rjmp	.+180    	; 0x372 <LDR+0xd0>
     2be:	80 91 ff 00 	lds	r24, 0x00FF	; 0x8000ff <PassCorrect>
     2c2:	88 23       	and	r24, r24
     2c4:	09 f4       	brne	.+2      	; 0x2c8 <LDR+0x26>
     2c6:	55 c0       	rjmp	.+170    	; 0x372 <LDR+0xd0>
		{
			adc = ADC_u16ReadChannel(ADC_1) ;
     2c8:	81 e0       	ldi	r24, 0x01	; 1
     2ca:	0e 94 e4 0e 	call	0x1dc8	; 0x1dc8 <ADC_u16ReadChannel>
			V = (adc * 5) / 1023;
     2ce:	9c 01       	movw	r18, r24
     2d0:	22 0f       	add	r18, r18
     2d2:	33 1f       	adc	r19, r19
     2d4:	22 0f       	add	r18, r18
     2d6:	33 1f       	adc	r19, r19
     2d8:	82 0f       	add	r24, r18
     2da:	93 1f       	adc	r25, r19
     2dc:	6f ef       	ldi	r22, 0xFF	; 255
     2de:	73 e0       	ldi	r23, 0x03	; 3
     2e0:	0e 94 4a 11 	call	0x2294	; 0x2294 <__udivmodhi4>
			
			if (V > 3)
     2e4:	64 30       	cpi	r22, 0x04	; 4
     2e6:	71 05       	cpc	r23, r1
     2e8:	98 f0       	brcs	.+38     	; 0x310 <LDR+0x6e>
			{
				LCD_voidGotoxy(8, 0);
     2ea:	60 e0       	ldi	r22, 0x00	; 0
     2ec:	88 e0       	ldi	r24, 0x08	; 8
     2ee:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString("NO LAMPs");
     2f2:	86 e9       	ldi	r24, 0x96	; 150
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				DIO_voidSetPinVal(DIO_PORTC, DIO_PIN6, LOW);
     2fa:	40 e0       	ldi	r20, 0x00	; 0
     2fc:	66 e0       	ldi	r22, 0x06	; 6
     2fe:	82 e0       	ldi	r24, 0x02	; 2
     300:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
				DIO_voidSetPinVal(DIO_PORTC, DIO_PIN7, LOW);
     304:	40 e0       	ldi	r20, 0x00	; 0
     306:	67 e0       	ldi	r22, 0x07	; 7
     308:	82 e0       	ldi	r24, 0x02	; 2
     30a:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
     30e:	31 c0       	rjmp	.+98     	; 0x372 <LDR+0xd0>
			}else if(V > 1.5)
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 26 10 	call	0x204c	; 0x204c <__floatunsisf>
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	40 ec       	ldi	r20, 0xC0	; 192
     31e:	5f e3       	ldi	r21, 0x3F	; 63
     320:	0e 94 8c 10 	call	0x2118	; 0x2118 <__gesf2>
     324:	18 16       	cp	r1, r24
     326:	9c f4       	brge	.+38     	; 0x34e <LDR+0xac>
			{
				LCD_voidGotoxy(8, 0);
     328:	60 e0       	ldi	r22, 0x00	; 0
     32a:	88 e0       	ldi	r24, 0x08	; 8
     32c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString("ONE LAMP");
     330:	8f e9       	ldi	r24, 0x9F	; 159
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				DIO_voidSetPinVal(DIO_PORTC, DIO_PIN6, HIGH);
     338:	41 e0       	ldi	r20, 0x01	; 1
     33a:	66 e0       	ldi	r22, 0x06	; 6
     33c:	82 e0       	ldi	r24, 0x02	; 2
     33e:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
				DIO_voidSetPinVal(DIO_PORTC, DIO_PIN7, LOW );
     342:	40 e0       	ldi	r20, 0x00	; 0
     344:	67 e0       	ldi	r22, 0x07	; 7
     346:	82 e0       	ldi	r24, 0x02	; 2
     348:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
     34c:	12 c0       	rjmp	.+36     	; 0x372 <LDR+0xd0>
			}else
			{
				LCD_voidGotoxy(8, 0);
     34e:	60 e0       	ldi	r22, 0x00	; 0
     350:	88 e0       	ldi	r24, 0x08	; 8
     352:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString("TWO LAMP");
     356:	88 ea       	ldi	r24, 0xA8	; 168
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				DIO_voidSetPinVal(DIO_PORTC, DIO_PIN6, HIGH);
     35e:	41 e0       	ldi	r20, 0x01	; 1
     360:	66 e0       	ldi	r22, 0x06	; 6
     362:	82 e0       	ldi	r24, 0x02	; 2
     364:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
				DIO_voidSetPinVal(DIO_PORTC, DIO_PIN7, HIGH);
     368:	41 e0       	ldi	r20, 0x01	; 1
     36a:	67 e0       	ldi	r22, 0x07	; 7
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
			}
		}
		xSemaphoreGive( LCD );
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	40 e0       	ldi	r20, 0x00	; 0
     376:	50 e0       	ldi	r21, 0x00	; 0
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     380:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     384:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
		vTaskDelay(100);
     388:	84 e6       	ldi	r24, 0x64	; 100
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	0e 94 9a 0b 	call	0x1734	; 0x1734 <vTaskDelay>
	}
     390:	88 cf       	rjmp	.-240    	; 0x2a2 <LDR>

00000392 <FAN>:
	}
}

//-------------------------------------------------------------
void FAN(void)
{
     392:	cf 93       	push	r28
     394:	df 93       	push	r29
     396:	00 d0       	rcall	.+0      	; 0x398 <FAN+0x6>
     398:	00 d0       	rcall	.+0      	; 0x39a <FAN+0x8>
     39a:	cd b7       	in	r28, 0x3d	; 61
     39c:	de b7       	in	r29, 0x3e	; 62
	f32 T = 0;
     39e:	19 82       	std	Y+1, r1	; 0x01
     3a0:	1a 82       	std	Y+2, r1	; 0x02
     3a2:	1b 82       	std	Y+3, r1	; 0x03
     3a4:	1c 82       	std	Y+4, r1	; 0x04
	
	while (1)
	{
		if (xSemaphoreTake( LCD, 100 ) == HIGH && PassCorrect)
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	44 e6       	ldi	r20, 0x64	; 100
     3aa:	50 e0       	ldi	r21, 0x00	; 0
     3ac:	60 e0       	ldi	r22, 0x00	; 0
     3ae:	70 e0       	ldi	r23, 0x00	; 0
     3b0:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     3b4:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     3b8:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
     3bc:	81 30       	cpi	r24, 0x01	; 1
     3be:	09 f0       	breq	.+2      	; 0x3c2 <FAN+0x30>
     3c0:	9c c0       	rjmp	.+312    	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
     3c2:	80 91 ff 00 	lds	r24, 0x00FF	; 0x8000ff <PassCorrect>
     3c6:	88 23       	and	r24, r24
     3c8:	09 f4       	brne	.+2      	; 0x3cc <FAN+0x3a>
     3ca:	97 c0       	rjmp	.+302    	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
		{
			xQueueReceive( Queue1, &T, 100 );
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	44 e6       	ldi	r20, 0x64	; 100
     3d0:	50 e0       	ldi	r21, 0x00	; 0
     3d2:	be 01       	movw	r22, r28
     3d4:	6f 5f       	subi	r22, 0xFF	; 255
     3d6:	7f 4f       	sbci	r23, 0xFF	; 255
     3d8:	80 91 7c 05 	lds	r24, 0x057C	; 0x80057c <Queue1>
     3dc:	90 91 7d 05 	lds	r25, 0x057D	; 0x80057d <Queue1+0x1>
     3e0:	0e 94 a6 07 	call	0xf4c	; 0xf4c <xQueueGenericReceive>
			
			if (T>35)
     3e4:	c9 80       	ldd	r12, Y+1	; 0x01
     3e6:	da 80       	ldd	r13, Y+2	; 0x02
     3e8:	eb 80       	ldd	r14, Y+3	; 0x03
     3ea:	fc 80       	ldd	r15, Y+4	; 0x04
     3ec:	20 e0       	ldi	r18, 0x00	; 0
     3ee:	30 e0       	ldi	r19, 0x00	; 0
     3f0:	4c e0       	ldi	r20, 0x0C	; 12
     3f2:	52 e4       	ldi	r21, 0x42	; 66
     3f4:	c7 01       	movw	r24, r14
     3f6:	b6 01       	movw	r22, r12
     3f8:	0e 94 8c 10 	call	0x2118	; 0x2118 <__gesf2>
     3fc:	18 16       	cp	r1, r24
     3fe:	d4 f4       	brge	.+52     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
			{
				TIMER0_voidFastPWM(100) ;
     400:	84 e6       	ldi	r24, 0x64	; 100
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <TIMER0_voidFastPWM>
				
				LCD_voidGotoxy(7, 1);
     408:	61 e0       	ldi	r22, 0x01	; 1
     40a:	87 e0       	ldi	r24, 0x07	; 7
     40c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString(" FAN ");
     410:	81 eb       	ldi	r24, 0xB1	; 177
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				LCD_voidGotoxy(12, 1);
     418:	61 e0       	ldi	r22, 0x01	; 1
     41a:	8c e0       	ldi	r24, 0x0C	; 12
     41c:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendNumber(100);
     420:	64 e6       	ldi	r22, 0x64	; 100
     422:	70 e0       	ldi	r23, 0x00	; 0
     424:	80 e0       	ldi	r24, 0x00	; 0
     426:	90 e0       	ldi	r25, 0x00	; 0
     428:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <LCD_voidSendNumber>
				LCD_voidSendData('%');
     42c:	85 e2       	ldi	r24, 0x25	; 37
     42e:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <LCD_voidSendData>
     432:	63 c0       	rjmp	.+198    	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
			}
			else if(T>30)
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e0       	ldi	r19, 0x00	; 0
     438:	40 ef       	ldi	r20, 0xF0	; 240
     43a:	51 e4       	ldi	r21, 0x41	; 65
     43c:	c7 01       	movw	r24, r14
     43e:	b6 01       	movw	r22, r12
     440:	0e 94 8c 10 	call	0x2118	; 0x2118 <__gesf2>
     444:	18 16       	cp	r1, r24
     446:	dc f4       	brge	.+54     	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
			{
				TIMER0_voidFastPWM(70)  ;
     448:	86 e4       	ldi	r24, 0x46	; 70
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <TIMER0_voidFastPWM>
				
				LCD_voidGotoxy(7, 1);
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	87 e0       	ldi	r24, 0x07	; 7
     454:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString(" FAN ");
     458:	81 eb       	ldi	r24, 0xB1	; 177
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				LCD_voidGotoxy(12, 1);
     460:	61 e0       	ldi	r22, 0x01	; 1
     462:	8c e0       	ldi	r24, 0x0C	; 12
     464:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendNumber(70);
     468:	66 e4       	ldi	r22, 0x46	; 70
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	80 e0       	ldi	r24, 0x00	; 0
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <LCD_voidSendNumber>
				LCD_voidSendString("% ");
     474:	87 eb       	ldi	r24, 0xB7	; 183
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
     47c:	3e c0       	rjmp	.+124    	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
			}
			else if(T>25)
     47e:	20 e0       	ldi	r18, 0x00	; 0
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	48 ec       	ldi	r20, 0xC8	; 200
     484:	51 e4       	ldi	r21, 0x41	; 65
     486:	c7 01       	movw	r24, r14
     488:	b6 01       	movw	r22, r12
     48a:	0e 94 8c 10 	call	0x2118	; 0x2118 <__gesf2>
     48e:	18 16       	cp	r1, r24
     490:	dc f4       	brge	.+54     	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
			{
				TIMER0_voidFastPWM(30)  ;
     492:	8e e1       	ldi	r24, 0x1E	; 30
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <TIMER0_voidFastPWM>
				
				LCD_voidGotoxy(7, 1);
     49a:	61 e0       	ldi	r22, 0x01	; 1
     49c:	87 e0       	ldi	r24, 0x07	; 7
     49e:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString(" FAN ");
     4a2:	81 eb       	ldi	r24, 0xB1	; 177
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				LCD_voidGotoxy(12, 1);
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	8c e0       	ldi	r24, 0x0C	; 12
     4ae:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendNumber(30);
     4b2:	6e e1       	ldi	r22, 0x1E	; 30
     4b4:	70 e0       	ldi	r23, 0x00	; 0
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <LCD_voidSendNumber>
				LCD_voidSendString("% ");
     4be:	87 eb       	ldi	r24, 0xB7	; 183
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
     4c6:	19 c0       	rjmp	.+50     	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
			}
			else
			{
				TIMER0_voidFastPWM(0)   ;
     4c8:	80 e0       	ldi	r24, 0x00	; 0
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <TIMER0_voidFastPWM>
				
				LCD_voidGotoxy(7, 1);
     4d0:	61 e0       	ldi	r22, 0x01	; 1
     4d2:	87 e0       	ldi	r24, 0x07	; 7
     4d4:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendString(" FAN ");
     4d8:	81 eb       	ldi	r24, 0xB1	; 177
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
				
				LCD_voidGotoxy(12, 1);
     4e0:	61 e0       	ldi	r22, 0x01	; 1
     4e2:	8c e0       	ldi	r24, 0x0C	; 12
     4e4:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
				LCD_voidSendNumber(0);
     4e8:	60 e0       	ldi	r22, 0x00	; 0
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	cb 01       	movw	r24, r22
     4ee:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <LCD_voidSendNumber>
				LCD_voidSendString("%  ");
     4f2:	8a eb       	ldi	r24, 0xBA	; 186
     4f4:	90 e0       	ldi	r25, 0x00	; 0
     4f6:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
			}
		}
		xSemaphoreGive( LCD );
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	40 e0       	ldi	r20, 0x00	; 0
     4fe:	50 e0       	ldi	r21, 0x00	; 0
     500:	60 e0       	ldi	r22, 0x00	; 0
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	80 91 7e 05 	lds	r24, 0x057E	; 0x80057e <LCD>
     508:	90 91 7f 05 	lds	r25, 0x057F	; 0x80057f <LCD+0x1>
     50c:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
		vTaskDelay(100);
     510:	84 e6       	ldi	r24, 0x64	; 100
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	0e 94 9a 0b 	call	0x1734	; 0x1734 <vTaskDelay>
	}
     518:	46 cf       	rjmp	.-372    	; 0x3a6 <FAN+0x14>

0000051a <main>:
}

//-------------------------------------------------------------
//-------------------------------------------------------------
int main(void)
{
     51a:	ef 92       	push	r14
     51c:	ff 92       	push	r15
     51e:	0f 93       	push	r16
	//Directions 
	DIO_voidSetPortDir(DIO_PORTA, 0xF0); // 4->7 output 0b11110000
     520:	60 ef       	ldi	r22, 0xF0	; 240
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPortDir>
	DIO_voidSetPortDir(DIO_PORTB, 0xFF); // all out
     528:	6f ef       	ldi	r22, 0xFF	; 255
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPortDir>
	DIO_voidSetPortDir(DIO_PORTC, 0xFF); // all out
     530:	6f ef       	ldi	r22, 0xFF	; 255
     532:	82 e0       	ldi	r24, 0x02	; 2
     534:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPortDir>
	DIO_voidSetPortDir(DIO_PORTD, 0xF0); //4->7 output 0b11110000
     538:	60 ef       	ldi	r22, 0xF0	; 240
     53a:	83 e0       	ldi	r24, 0x03	; 3
     53c:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <DIO_voidSetPortDir>
	
	//Create Tasks
	xTaskCreate(LM35	, "LM35"    , 100, NULL, 5, NULL);
     540:	e1 2c       	mov	r14, r1
     542:	f1 2c       	mov	r15, r1
     544:	05 e0       	ldi	r16, 0x05	; 5
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	44 e6       	ldi	r20, 0x64	; 100
     54c:	50 e0       	ldi	r21, 0x00	; 0
     54e:	6e eb       	ldi	r22, 0xBE	; 190
     550:	70 e0       	ldi	r23, 0x00	; 0
     552:	89 e4       	ldi	r24, 0x49	; 73
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <xTaskCreate>
	xTaskCreate(Screen	, "Screen"  , 100, NULL, 6, NULL);
     55a:	06 e0       	ldi	r16, 0x06	; 6
     55c:	20 e0       	ldi	r18, 0x00	; 0
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	44 e6       	ldi	r20, 0x64	; 100
     562:	50 e0       	ldi	r21, 0x00	; 0
     564:	63 ec       	ldi	r22, 0xC3	; 195
     566:	70 e0       	ldi	r23, 0x00	; 0
     568:	89 ef       	ldi	r24, 0xF9	; 249
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <xTaskCreate>
	xTaskCreate(Terminal, "Terminal", 100, NULL, 7, NULL);
     570:	07 e0       	ldi	r16, 0x07	; 7
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	44 e6       	ldi	r20, 0x64	; 100
     578:	50 e0       	ldi	r21, 0x00	; 0
     57a:	6a ec       	ldi	r22, 0xCA	; 202
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	8c ea       	ldi	r24, 0xAC	; 172
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <xTaskCreate>
	xTaskCreate(FAN		, "FAN"		, 100, NULL, 4, NULL);
     586:	04 e0       	ldi	r16, 0x04	; 4
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e0       	ldi	r19, 0x00	; 0
     58c:	44 e6       	ldi	r20, 0x64	; 100
     58e:	50 e0       	ldi	r21, 0x00	; 0
     590:	63 ed       	ldi	r22, 0xD3	; 211
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	89 ec       	ldi	r24, 0xC9	; 201
     596:	91 e0       	ldi	r25, 0x01	; 1
     598:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <xTaskCreate>
	xTaskCreate(LDR		, "LDR"		, 100, NULL, 3, NULL);
     59c:	03 e0       	ldi	r16, 0x03	; 3
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	44 e6       	ldi	r20, 0x64	; 100
     5a4:	50 e0       	ldi	r21, 0x00	; 0
     5a6:	67 ed       	ldi	r22, 0xD7	; 215
     5a8:	70 e0       	ldi	r23, 0x00	; 0
     5aa:	81 e5       	ldi	r24, 0x51	; 81
     5ac:	91 e0       	ldi	r25, 0x01	; 1
     5ae:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <xTaskCreate>
	
	//Initialization of Peripherals
	//GI_voidEnable();
	UART_voidInit();
     5b2:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <UART_voidInit>
	LCD_voidInit();
     5b6:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <LCD_voidInit>
	ADC_voidInit();
     5ba:	0e 94 d4 0e 	call	0x1da8	; 0x1da8 <ADC_voidInit>
	
	// Create Semaphore
	LCD = xSemaphoreCreateBinary();
     5be:	43 e0       	ldi	r20, 0x03	; 3
     5c0:	60 e0       	ldi	r22, 0x00	; 0
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xQueueGenericCreate>
     5c8:	90 93 7f 05 	sts	0x057F, r25	; 0x80057f <LCD+0x1>
     5cc:	80 93 7e 05 	sts	0x057E, r24	; 0x80057e <LCD>
	xSemaphoreGive(LCD);
     5d0:	20 e0       	ldi	r18, 0x00	; 0
     5d2:	40 e0       	ldi	r20, 0x00	; 0
     5d4:	50 e0       	ldi	r21, 0x00	; 0
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	0e 94 14 07 	call	0xe28	; 0xe28 <xQueueGenericSend>
	
	// Create Queues
	Queue1 = xQueueCreate( 1, sizeof( f32 ) ); 
     5de:	40 e0       	ldi	r20, 0x00	; 0
     5e0:	64 e0       	ldi	r22, 0x04	; 4
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xQueueGenericCreate>
     5e8:	90 93 7d 05 	sts	0x057D, r25	; 0x80057d <Queue1+0x1>
     5ec:	80 93 7c 05 	sts	0x057C, r24	; 0x80057c <Queue1>
	Queue2 = xQueueCreate( 1, sizeof( u8  ) );
     5f0:	40 e0       	ldi	r20, 0x00	; 0
     5f2:	61 e0       	ldi	r22, 0x01	; 1
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <xQueueGenericCreate>
     5fa:	90 93 77 05 	sts	0x0577, r25	; 0x800577 <Queue2+0x1>
     5fe:	80 93 76 05 	sts	0x0576, r24	; 0x800576 <Queue2>
	
	// Start Code
	LCD_voidGotoxy(0, 0);
     602:	60 e0       	ldi	r22, 0x00	; 0
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
	LCD_voidSendString("SAMO 3LEEEKO");
     60a:	8b ed       	ldi	r24, 0xDB	; 219
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
	
	LCD_voidGotoxy(0, 1);
     612:	61 e0       	ldi	r22, 0x01	; 1
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <LCD_voidGotoxy>
	LCD_voidSendString("ENTER PASSWORD!");
     61a:	88 ee       	ldi	r24, 0xE8	; 232
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <LCD_voidSendString>
	
	// Start Scheduler
	vTaskStartScheduler();
     622:	0e 94 3e 0a 	call	0x147c	; 0x147c <vTaskStartScheduler>
}
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	0f 91       	pop	r16
     62c:	ff 90       	pop	r15
     62e:	ef 90       	pop	r14
     630:	08 95       	ret

00000632 <prvHeapInit>:
     632:	e5 e0       	ldi	r30, 0x05	; 5
     634:	f1 e0       	ldi	r31, 0x01	; 1
     636:	8a e0       	ldi	r24, 0x0A	; 10
     638:	91 e0       	ldi	r25, 0x01	; 1
     63a:	91 83       	std	Z+1, r25	; 0x01
     63c:	80 83       	st	Z, r24
     63e:	13 82       	std	Z+3, r1	; 0x03
     640:	12 82       	std	Z+2, r1	; 0x02
     642:	e1 e0       	ldi	r30, 0x01	; 1
     644:	f1 e0       	ldi	r31, 0x01	; 1
     646:	87 ee       	ldi	r24, 0xE7	; 231
     648:	93 e0       	ldi	r25, 0x03	; 3
     64a:	93 83       	std	Z+3, r25	; 0x03
     64c:	82 83       	std	Z+2, r24	; 0x02
     64e:	11 82       	std	Z+1, r1	; 0x01
     650:	10 82       	st	Z, r1
     652:	a9 e0       	ldi	r26, 0x09	; 9
     654:	b1 e0       	ldi	r27, 0x01	; 1
     656:	14 96       	adiw	r26, 0x04	; 4
     658:	9c 93       	st	X, r25
     65a:	8e 93       	st	-X, r24
     65c:	13 97       	sbiw	r26, 0x03	; 3
     65e:	12 96       	adiw	r26, 0x02	; 2
     660:	fc 93       	st	X, r31
     662:	ee 93       	st	-X, r30
     664:	11 97       	sbiw	r26, 0x01	; 1
     666:	08 95       	ret

00000668 <pvPortMalloc>:
     668:	0f 93       	push	r16
     66a:	1f 93       	push	r17
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
     670:	ec 01       	movw	r28, r24
     672:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskSuspendAll>
     676:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <xHeapHasBeenInitialised.2079>
     67a:	81 11       	cpse	r24, r1
     67c:	05 c0       	rjmp	.+10     	; 0x688 <pvPortMalloc+0x20>
     67e:	0e 94 19 03 	call	0x632	; 0x632 <prvHeapInit>
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <xHeapHasBeenInitialised.2079>
     688:	20 97       	sbiw	r28, 0x00	; 0
     68a:	09 f0       	breq	.+2      	; 0x68e <pvPortMalloc+0x26>
     68c:	24 96       	adiw	r28, 0x04	; 4
     68e:	ce 01       	movw	r24, r28
     690:	01 97       	sbiw	r24, 0x01	; 1
     692:	86 3e       	cpi	r24, 0xE6	; 230
     694:	93 40       	sbci	r25, 0x03	; 3
     696:	08 f0       	brcs	.+2      	; 0x69a <pvPortMalloc+0x32>
     698:	56 c0       	rjmp	.+172    	; 0x746 <pvPortMalloc+0xde>
     69a:	e0 91 05 01 	lds	r30, 0x0105	; 0x800105 <xStart>
     69e:	f0 91 06 01 	lds	r31, 0x0106	; 0x800106 <xStart+0x1>
     6a2:	a5 e0       	ldi	r26, 0x05	; 5
     6a4:	b1 e0       	ldi	r27, 0x01	; 1
     6a6:	02 c0       	rjmp	.+4      	; 0x6ac <pvPortMalloc+0x44>
     6a8:	df 01       	movw	r26, r30
     6aa:	fc 01       	movw	r30, r24
     6ac:	82 81       	ldd	r24, Z+2	; 0x02
     6ae:	93 81       	ldd	r25, Z+3	; 0x03
     6b0:	8c 17       	cp	r24, r28
     6b2:	9d 07       	cpc	r25, r29
     6b4:	20 f4       	brcc	.+8      	; 0x6be <pvPortMalloc+0x56>
     6b6:	80 81       	ld	r24, Z
     6b8:	91 81       	ldd	r25, Z+1	; 0x01
     6ba:	00 97       	sbiw	r24, 0x00	; 0
     6bc:	a9 f7       	brne	.-22     	; 0x6a8 <pvPortMalloc+0x40>
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	e1 30       	cpi	r30, 0x01	; 1
     6c2:	f8 07       	cpc	r31, r24
     6c4:	09 f4       	brne	.+2      	; 0x6c8 <pvPortMalloc+0x60>
     6c6:	42 c0       	rjmp	.+132    	; 0x74c <pvPortMalloc+0xe4>
     6c8:	0d 91       	ld	r16, X+
     6ca:	1c 91       	ld	r17, X
     6cc:	11 97       	sbiw	r26, 0x01	; 1
     6ce:	0c 5f       	subi	r16, 0xFC	; 252
     6d0:	1f 4f       	sbci	r17, 0xFF	; 255
     6d2:	80 81       	ld	r24, Z
     6d4:	91 81       	ldd	r25, Z+1	; 0x01
     6d6:	8d 93       	st	X+, r24
     6d8:	9c 93       	st	X, r25
     6da:	82 81       	ldd	r24, Z+2	; 0x02
     6dc:	93 81       	ldd	r25, Z+3	; 0x03
     6de:	8c 1b       	sub	r24, r28
     6e0:	9d 0b       	sbc	r25, r29
     6e2:	89 30       	cpi	r24, 0x09	; 9
     6e4:	91 05       	cpc	r25, r1
     6e6:	10 f1       	brcs	.+68     	; 0x72c <pvPortMalloc+0xc4>
     6e8:	af 01       	movw	r20, r30
     6ea:	4c 0f       	add	r20, r28
     6ec:	5d 1f       	adc	r21, r29
     6ee:	da 01       	movw	r26, r20
     6f0:	13 96       	adiw	r26, 0x03	; 3
     6f2:	9c 93       	st	X, r25
     6f4:	8e 93       	st	-X, r24
     6f6:	12 97       	sbiw	r26, 0x02	; 2
     6f8:	d3 83       	std	Z+3, r29	; 0x03
     6fa:	c2 83       	std	Z+2, r28	; 0x02
     6fc:	12 96       	adiw	r26, 0x02	; 2
     6fe:	2d 91       	ld	r18, X+
     700:	3c 91       	ld	r19, X
     702:	13 97       	sbiw	r26, 0x03	; 3
     704:	65 e0       	ldi	r22, 0x05	; 5
     706:	71 e0       	ldi	r23, 0x01	; 1
     708:	01 c0       	rjmp	.+2      	; 0x70c <pvPortMalloc+0xa4>
     70a:	bd 01       	movw	r22, r26
     70c:	eb 01       	movw	r28, r22
     70e:	a8 81       	ld	r26, Y
     710:	b9 81       	ldd	r27, Y+1	; 0x01
     712:	12 96       	adiw	r26, 0x02	; 2
     714:	8d 91       	ld	r24, X+
     716:	9c 91       	ld	r25, X
     718:	13 97       	sbiw	r26, 0x03	; 3
     71a:	82 17       	cp	r24, r18
     71c:	93 07       	cpc	r25, r19
     71e:	a8 f3       	brcs	.-22     	; 0x70a <pvPortMalloc+0xa2>
     720:	ea 01       	movw	r28, r20
     722:	b9 83       	std	Y+1, r27	; 0x01
     724:	a8 83       	st	Y, r26
     726:	db 01       	movw	r26, r22
     728:	4d 93       	st	X+, r20
     72a:	5c 93       	st	X, r21
     72c:	22 81       	ldd	r18, Z+2	; 0x02
     72e:	33 81       	ldd	r19, Z+3	; 0x03
     730:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <xFreeBytesRemaining>
     734:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <xFreeBytesRemaining+0x1>
     738:	82 1b       	sub	r24, r18
     73a:	93 0b       	sbc	r25, r19
     73c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <xFreeBytesRemaining+0x1>
     740:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <xFreeBytesRemaining>
     744:	05 c0       	rjmp	.+10     	; 0x750 <pvPortMalloc+0xe8>
     746:	00 e0       	ldi	r16, 0x00	; 0
     748:	10 e0       	ldi	r17, 0x00	; 0
     74a:	02 c0       	rjmp	.+4      	; 0x750 <pvPortMalloc+0xe8>
     74c:	00 e0       	ldi	r16, 0x00	; 0
     74e:	10 e0       	ldi	r17, 0x00	; 0
     750:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
     754:	c8 01       	movw	r24, r16
     756:	df 91       	pop	r29
     758:	cf 91       	pop	r28
     75a:	1f 91       	pop	r17
     75c:	0f 91       	pop	r16
     75e:	08 95       	ret

00000760 <vPortFree>:
     760:	0f 93       	push	r16
     762:	1f 93       	push	r17
     764:	cf 93       	push	r28
     766:	df 93       	push	r29
     768:	00 97       	sbiw	r24, 0x00	; 0
     76a:	41 f1       	breq	.+80     	; 0x7bc <vPortFree+0x5c>
     76c:	ec 01       	movw	r28, r24
     76e:	8c 01       	movw	r16, r24
     770:	04 50       	subi	r16, 0x04	; 4
     772:	11 09       	sbc	r17, r1
     774:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskSuspendAll>
     778:	f8 01       	movw	r30, r16
     77a:	42 81       	ldd	r20, Z+2	; 0x02
     77c:	53 81       	ldd	r21, Z+3	; 0x03
     77e:	a5 e0       	ldi	r26, 0x05	; 5
     780:	b1 e0       	ldi	r27, 0x01	; 1
     782:	01 c0       	rjmp	.+2      	; 0x786 <vPortFree+0x26>
     784:	df 01       	movw	r26, r30
     786:	ed 91       	ld	r30, X+
     788:	fc 91       	ld	r31, X
     78a:	11 97       	sbiw	r26, 0x01	; 1
     78c:	22 81       	ldd	r18, Z+2	; 0x02
     78e:	33 81       	ldd	r19, Z+3	; 0x03
     790:	24 17       	cp	r18, r20
     792:	35 07       	cpc	r19, r21
     794:	b8 f3       	brcs	.-18     	; 0x784 <vPortFree+0x24>
     796:	24 97       	sbiw	r28, 0x04	; 4
     798:	f9 83       	std	Y+1, r31	; 0x01
     79a:	e8 83       	st	Y, r30
     79c:	0d 93       	st	X+, r16
     79e:	1c 93       	st	X, r17
     7a0:	8a 81       	ldd	r24, Y+2	; 0x02
     7a2:	9b 81       	ldd	r25, Y+3	; 0x03
     7a4:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <xFreeBytesRemaining>
     7a8:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <xFreeBytesRemaining+0x1>
     7ac:	82 0f       	add	r24, r18
     7ae:	93 1f       	adc	r25, r19
     7b0:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <xFreeBytesRemaining+0x1>
     7b4:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <xFreeBytesRemaining>
     7b8:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
     7bc:	df 91       	pop	r29
     7be:	cf 91       	pop	r28
     7c0:	1f 91       	pop	r17
     7c2:	0f 91       	pop	r16
     7c4:	08 95       	ret

000007c6 <vListInitialise>:
     7c6:	fc 01       	movw	r30, r24
     7c8:	03 96       	adiw	r24, 0x03	; 3
     7ca:	92 83       	std	Z+2, r25	; 0x02
     7cc:	81 83       	std	Z+1, r24	; 0x01
     7ce:	2f ef       	ldi	r18, 0xFF	; 255
     7d0:	3f ef       	ldi	r19, 0xFF	; 255
     7d2:	34 83       	std	Z+4, r19	; 0x04
     7d4:	23 83       	std	Z+3, r18	; 0x03
     7d6:	96 83       	std	Z+6, r25	; 0x06
     7d8:	85 83       	std	Z+5, r24	; 0x05
     7da:	90 87       	std	Z+8, r25	; 0x08
     7dc:	87 83       	std	Z+7, r24	; 0x07
     7de:	10 82       	st	Z, r1
     7e0:	08 95       	ret

000007e2 <vListInitialiseItem>:
     7e2:	fc 01       	movw	r30, r24
     7e4:	11 86       	std	Z+9, r1	; 0x09
     7e6:	10 86       	std	Z+8, r1	; 0x08
     7e8:	08 95       	ret

000007ea <vListInsertEnd>:
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	9c 01       	movw	r18, r24
     7f0:	fb 01       	movw	r30, r22
     7f2:	dc 01       	movw	r26, r24
     7f4:	11 96       	adiw	r26, 0x01	; 1
     7f6:	cd 91       	ld	r28, X+
     7f8:	dc 91       	ld	r29, X
     7fa:	12 97       	sbiw	r26, 0x02	; 2
     7fc:	d3 83       	std	Z+3, r29	; 0x03
     7fe:	c2 83       	std	Z+2, r28	; 0x02
     800:	8c 81       	ldd	r24, Y+4	; 0x04
     802:	9d 81       	ldd	r25, Y+5	; 0x05
     804:	95 83       	std	Z+5, r25	; 0x05
     806:	84 83       	std	Z+4, r24	; 0x04
     808:	8c 81       	ldd	r24, Y+4	; 0x04
     80a:	9d 81       	ldd	r25, Y+5	; 0x05
     80c:	dc 01       	movw	r26, r24
     80e:	13 96       	adiw	r26, 0x03	; 3
     810:	7c 93       	st	X, r23
     812:	6e 93       	st	-X, r22
     814:	12 97       	sbiw	r26, 0x02	; 2
     816:	7d 83       	std	Y+5, r23	; 0x05
     818:	6c 83       	std	Y+4, r22	; 0x04
     81a:	31 87       	std	Z+9, r19	; 0x09
     81c:	20 87       	std	Z+8, r18	; 0x08
     81e:	f9 01       	movw	r30, r18
     820:	80 81       	ld	r24, Z
     822:	8f 5f       	subi	r24, 0xFF	; 255
     824:	80 83       	st	Z, r24
     826:	df 91       	pop	r29
     828:	cf 91       	pop	r28
     82a:	08 95       	ret

0000082c <vListInsert>:
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	eb 01       	movw	r28, r22
     832:	48 81       	ld	r20, Y
     834:	59 81       	ldd	r21, Y+1	; 0x01
     836:	4f 3f       	cpi	r20, 0xFF	; 255
     838:	2f ef       	ldi	r18, 0xFF	; 255
     83a:	52 07       	cpc	r21, r18
     83c:	21 f4       	brne	.+8      	; 0x846 <vListInsert+0x1a>
     83e:	fc 01       	movw	r30, r24
     840:	a7 81       	ldd	r26, Z+7	; 0x07
     842:	b0 85       	ldd	r27, Z+8	; 0x08
     844:	0d c0       	rjmp	.+26     	; 0x860 <__stack+0x1>
     846:	dc 01       	movw	r26, r24
     848:	13 96       	adiw	r26, 0x03	; 3
     84a:	01 c0       	rjmp	.+2      	; 0x84e <vListInsert+0x22>
     84c:	df 01       	movw	r26, r30
     84e:	12 96       	adiw	r26, 0x02	; 2
     850:	ed 91       	ld	r30, X+
     852:	fc 91       	ld	r31, X
     854:	13 97       	sbiw	r26, 0x03	; 3
     856:	20 81       	ld	r18, Z
     858:	31 81       	ldd	r19, Z+1	; 0x01
     85a:	42 17       	cp	r20, r18
     85c:	53 07       	cpc	r21, r19
     85e:	b0 f7       	brcc	.-20     	; 0x84c <vListInsert+0x20>
     860:	12 96       	adiw	r26, 0x02	; 2
     862:	ed 91       	ld	r30, X+
     864:	fc 91       	ld	r31, X
     866:	13 97       	sbiw	r26, 0x03	; 3
     868:	fb 83       	std	Y+3, r31	; 0x03
     86a:	ea 83       	std	Y+2, r30	; 0x02
     86c:	d5 83       	std	Z+5, r29	; 0x05
     86e:	c4 83       	std	Z+4, r28	; 0x04
     870:	bd 83       	std	Y+5, r27	; 0x05
     872:	ac 83       	std	Y+4, r26	; 0x04
     874:	13 96       	adiw	r26, 0x03	; 3
     876:	dc 93       	st	X, r29
     878:	ce 93       	st	-X, r28
     87a:	12 97       	sbiw	r26, 0x02	; 2
     87c:	99 87       	std	Y+9, r25	; 0x09
     87e:	88 87       	std	Y+8, r24	; 0x08
     880:	fc 01       	movw	r30, r24
     882:	20 81       	ld	r18, Z
     884:	2f 5f       	subi	r18, 0xFF	; 255
     886:	20 83       	st	Z, r18
     888:	df 91       	pop	r29
     88a:	cf 91       	pop	r28
     88c:	08 95       	ret

0000088e <uxListRemove>:
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	fc 01       	movw	r30, r24
     894:	a0 85       	ldd	r26, Z+8	; 0x08
     896:	b1 85       	ldd	r27, Z+9	; 0x09
     898:	c2 81       	ldd	r28, Z+2	; 0x02
     89a:	d3 81       	ldd	r29, Z+3	; 0x03
     89c:	84 81       	ldd	r24, Z+4	; 0x04
     89e:	95 81       	ldd	r25, Z+5	; 0x05
     8a0:	9d 83       	std	Y+5, r25	; 0x05
     8a2:	8c 83       	std	Y+4, r24	; 0x04
     8a4:	c4 81       	ldd	r28, Z+4	; 0x04
     8a6:	d5 81       	ldd	r29, Z+5	; 0x05
     8a8:	82 81       	ldd	r24, Z+2	; 0x02
     8aa:	93 81       	ldd	r25, Z+3	; 0x03
     8ac:	9b 83       	std	Y+3, r25	; 0x03
     8ae:	8a 83       	std	Y+2, r24	; 0x02
     8b0:	11 96       	adiw	r26, 0x01	; 1
     8b2:	8d 91       	ld	r24, X+
     8b4:	9c 91       	ld	r25, X
     8b6:	12 97       	sbiw	r26, 0x02	; 2
     8b8:	e8 17       	cp	r30, r24
     8ba:	f9 07       	cpc	r31, r25
     8bc:	31 f4       	brne	.+12     	; 0x8ca <uxListRemove+0x3c>
     8be:	84 81       	ldd	r24, Z+4	; 0x04
     8c0:	95 81       	ldd	r25, Z+5	; 0x05
     8c2:	12 96       	adiw	r26, 0x02	; 2
     8c4:	9c 93       	st	X, r25
     8c6:	8e 93       	st	-X, r24
     8c8:	11 97       	sbiw	r26, 0x01	; 1
     8ca:	11 86       	std	Z+9, r1	; 0x09
     8cc:	10 86       	std	Z+8, r1	; 0x08
     8ce:	8c 91       	ld	r24, X
     8d0:	81 50       	subi	r24, 0x01	; 1
     8d2:	8c 93       	st	X, r24
     8d4:	df 91       	pop	r29
     8d6:	cf 91       	pop	r28
     8d8:	08 95       	ret

000008da <prvSetupTimerInterrupt>:
     8da:	1b bc       	out	0x2b, r1	; 43
     8dc:	89 ef       	ldi	r24, 0xF9	; 249
     8de:	8a bd       	out	0x2a, r24	; 42
     8e0:	8b e0       	ldi	r24, 0x0B	; 11
     8e2:	8e bd       	out	0x2e, r24	; 46
     8e4:	89 b7       	in	r24, 0x39	; 57
     8e6:	80 61       	ori	r24, 0x10	; 16
     8e8:	89 bf       	out	0x39, r24	; 57
     8ea:	08 95       	ret

000008ec <pxPortInitialiseStack>:
     8ec:	31 e1       	ldi	r19, 0x11	; 17
     8ee:	fc 01       	movw	r30, r24
     8f0:	30 83       	st	Z, r19
     8f2:	31 97       	sbiw	r30, 0x01	; 1
     8f4:	22 e2       	ldi	r18, 0x22	; 34
     8f6:	20 83       	st	Z, r18
     8f8:	31 97       	sbiw	r30, 0x01	; 1
     8fa:	a3 e3       	ldi	r26, 0x33	; 51
     8fc:	a0 83       	st	Z, r26
     8fe:	31 97       	sbiw	r30, 0x01	; 1
     900:	60 83       	st	Z, r22
     902:	31 97       	sbiw	r30, 0x01	; 1
     904:	70 83       	st	Z, r23
     906:	31 97       	sbiw	r30, 0x01	; 1
     908:	10 82       	st	Z, r1
     90a:	31 97       	sbiw	r30, 0x01	; 1
     90c:	60 e8       	ldi	r22, 0x80	; 128
     90e:	60 83       	st	Z, r22
     910:	31 97       	sbiw	r30, 0x01	; 1
     912:	10 82       	st	Z, r1
     914:	31 97       	sbiw	r30, 0x01	; 1
     916:	62 e0       	ldi	r22, 0x02	; 2
     918:	60 83       	st	Z, r22
     91a:	31 97       	sbiw	r30, 0x01	; 1
     91c:	63 e0       	ldi	r22, 0x03	; 3
     91e:	60 83       	st	Z, r22
     920:	31 97       	sbiw	r30, 0x01	; 1
     922:	64 e0       	ldi	r22, 0x04	; 4
     924:	60 83       	st	Z, r22
     926:	31 97       	sbiw	r30, 0x01	; 1
     928:	65 e0       	ldi	r22, 0x05	; 5
     92a:	60 83       	st	Z, r22
     92c:	31 97       	sbiw	r30, 0x01	; 1
     92e:	66 e0       	ldi	r22, 0x06	; 6
     930:	60 83       	st	Z, r22
     932:	31 97       	sbiw	r30, 0x01	; 1
     934:	67 e0       	ldi	r22, 0x07	; 7
     936:	60 83       	st	Z, r22
     938:	31 97       	sbiw	r30, 0x01	; 1
     93a:	68 e0       	ldi	r22, 0x08	; 8
     93c:	60 83       	st	Z, r22
     93e:	31 97       	sbiw	r30, 0x01	; 1
     940:	69 e0       	ldi	r22, 0x09	; 9
     942:	60 83       	st	Z, r22
     944:	31 97       	sbiw	r30, 0x01	; 1
     946:	60 e1       	ldi	r22, 0x10	; 16
     948:	60 83       	st	Z, r22
     94a:	31 97       	sbiw	r30, 0x01	; 1
     94c:	30 83       	st	Z, r19
     94e:	31 97       	sbiw	r30, 0x01	; 1
     950:	32 e1       	ldi	r19, 0x12	; 18
     952:	30 83       	st	Z, r19
     954:	31 97       	sbiw	r30, 0x01	; 1
     956:	33 e1       	ldi	r19, 0x13	; 19
     958:	30 83       	st	Z, r19
     95a:	31 97       	sbiw	r30, 0x01	; 1
     95c:	34 e1       	ldi	r19, 0x14	; 20
     95e:	30 83       	st	Z, r19
     960:	31 97       	sbiw	r30, 0x01	; 1
     962:	35 e1       	ldi	r19, 0x15	; 21
     964:	30 83       	st	Z, r19
     966:	31 97       	sbiw	r30, 0x01	; 1
     968:	36 e1       	ldi	r19, 0x16	; 22
     96a:	30 83       	st	Z, r19
     96c:	31 97       	sbiw	r30, 0x01	; 1
     96e:	37 e1       	ldi	r19, 0x17	; 23
     970:	30 83       	st	Z, r19
     972:	31 97       	sbiw	r30, 0x01	; 1
     974:	38 e1       	ldi	r19, 0x18	; 24
     976:	30 83       	st	Z, r19
     978:	31 97       	sbiw	r30, 0x01	; 1
     97a:	39 e1       	ldi	r19, 0x19	; 25
     97c:	30 83       	st	Z, r19
     97e:	31 97       	sbiw	r30, 0x01	; 1
     980:	30 e2       	ldi	r19, 0x20	; 32
     982:	30 83       	st	Z, r19
     984:	31 97       	sbiw	r30, 0x01	; 1
     986:	31 e2       	ldi	r19, 0x21	; 33
     988:	30 83       	st	Z, r19
     98a:	31 97       	sbiw	r30, 0x01	; 1
     98c:	20 83       	st	Z, r18
     98e:	31 97       	sbiw	r30, 0x01	; 1
     990:	23 e2       	ldi	r18, 0x23	; 35
     992:	20 83       	st	Z, r18
     994:	31 97       	sbiw	r30, 0x01	; 1
     996:	40 83       	st	Z, r20
     998:	31 97       	sbiw	r30, 0x01	; 1
     99a:	50 83       	st	Z, r21
     99c:	31 97       	sbiw	r30, 0x01	; 1
     99e:	26 e2       	ldi	r18, 0x26	; 38
     9a0:	20 83       	st	Z, r18
     9a2:	31 97       	sbiw	r30, 0x01	; 1
     9a4:	27 e2       	ldi	r18, 0x27	; 39
     9a6:	20 83       	st	Z, r18
     9a8:	31 97       	sbiw	r30, 0x01	; 1
     9aa:	28 e2       	ldi	r18, 0x28	; 40
     9ac:	20 83       	st	Z, r18
     9ae:	31 97       	sbiw	r30, 0x01	; 1
     9b0:	29 e2       	ldi	r18, 0x29	; 41
     9b2:	20 83       	st	Z, r18
     9b4:	31 97       	sbiw	r30, 0x01	; 1
     9b6:	20 e3       	ldi	r18, 0x30	; 48
     9b8:	20 83       	st	Z, r18
     9ba:	31 97       	sbiw	r30, 0x01	; 1
     9bc:	21 e3       	ldi	r18, 0x31	; 49
     9be:	20 83       	st	Z, r18
     9c0:	86 97       	sbiw	r24, 0x26	; 38
     9c2:	08 95       	ret

000009c4 <xPortStartScheduler>:
     9c4:	0e 94 6d 04 	call	0x8da	; 0x8da <prvSetupTimerInterrupt>
     9c8:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
     9cc:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
     9d0:	cd 91       	ld	r28, X+
     9d2:	cd bf       	out	0x3d, r28	; 61
     9d4:	dd 91       	ld	r29, X+
     9d6:	de bf       	out	0x3e, r29	; 62
     9d8:	ff 91       	pop	r31
     9da:	ef 91       	pop	r30
     9dc:	df 91       	pop	r29
     9de:	cf 91       	pop	r28
     9e0:	bf 91       	pop	r27
     9e2:	af 91       	pop	r26
     9e4:	9f 91       	pop	r25
     9e6:	8f 91       	pop	r24
     9e8:	7f 91       	pop	r23
     9ea:	6f 91       	pop	r22
     9ec:	5f 91       	pop	r21
     9ee:	4f 91       	pop	r20
     9f0:	3f 91       	pop	r19
     9f2:	2f 91       	pop	r18
     9f4:	1f 91       	pop	r17
     9f6:	0f 91       	pop	r16
     9f8:	ff 90       	pop	r15
     9fa:	ef 90       	pop	r14
     9fc:	df 90       	pop	r13
     9fe:	cf 90       	pop	r12
     a00:	bf 90       	pop	r11
     a02:	af 90       	pop	r10
     a04:	9f 90       	pop	r9
     a06:	8f 90       	pop	r8
     a08:	7f 90       	pop	r7
     a0a:	6f 90       	pop	r6
     a0c:	5f 90       	pop	r5
     a0e:	4f 90       	pop	r4
     a10:	3f 90       	pop	r3
     a12:	2f 90       	pop	r2
     a14:	1f 90       	pop	r1
     a16:	0f 90       	pop	r0
     a18:	0f be       	out	0x3f, r0	; 63
     a1a:	0f 90       	pop	r0
     a1c:	08 95       	ret
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	08 95       	ret

00000a22 <vPortYield>:
     a22:	0f 92       	push	r0
     a24:	0f b6       	in	r0, 0x3f	; 63
     a26:	f8 94       	cli
     a28:	0f 92       	push	r0
     a2a:	1f 92       	push	r1
     a2c:	11 24       	eor	r1, r1
     a2e:	2f 92       	push	r2
     a30:	3f 92       	push	r3
     a32:	4f 92       	push	r4
     a34:	5f 92       	push	r5
     a36:	6f 92       	push	r6
     a38:	7f 92       	push	r7
     a3a:	8f 92       	push	r8
     a3c:	9f 92       	push	r9
     a3e:	af 92       	push	r10
     a40:	bf 92       	push	r11
     a42:	cf 92       	push	r12
     a44:	df 92       	push	r13
     a46:	ef 92       	push	r14
     a48:	ff 92       	push	r15
     a4a:	0f 93       	push	r16
     a4c:	1f 93       	push	r17
     a4e:	2f 93       	push	r18
     a50:	3f 93       	push	r19
     a52:	4f 93       	push	r20
     a54:	5f 93       	push	r21
     a56:	6f 93       	push	r22
     a58:	7f 93       	push	r23
     a5a:	8f 93       	push	r24
     a5c:	9f 93       	push	r25
     a5e:	af 93       	push	r26
     a60:	bf 93       	push	r27
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	ef 93       	push	r30
     a68:	ff 93       	push	r31
     a6a:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
     a6e:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
     a72:	0d b6       	in	r0, 0x3d	; 61
     a74:	0d 92       	st	X+, r0
     a76:	0e b6       	in	r0, 0x3e	; 62
     a78:	0d 92       	st	X+, r0
     a7a:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <vTaskSwitchContext>
     a7e:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
     a82:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
     a86:	cd 91       	ld	r28, X+
     a88:	cd bf       	out	0x3d, r28	; 61
     a8a:	dd 91       	ld	r29, X+
     a8c:	de bf       	out	0x3e, r29	; 62
     a8e:	ff 91       	pop	r31
     a90:	ef 91       	pop	r30
     a92:	df 91       	pop	r29
     a94:	cf 91       	pop	r28
     a96:	bf 91       	pop	r27
     a98:	af 91       	pop	r26
     a9a:	9f 91       	pop	r25
     a9c:	8f 91       	pop	r24
     a9e:	7f 91       	pop	r23
     aa0:	6f 91       	pop	r22
     aa2:	5f 91       	pop	r21
     aa4:	4f 91       	pop	r20
     aa6:	3f 91       	pop	r19
     aa8:	2f 91       	pop	r18
     aaa:	1f 91       	pop	r17
     aac:	0f 91       	pop	r16
     aae:	ff 90       	pop	r15
     ab0:	ef 90       	pop	r14
     ab2:	df 90       	pop	r13
     ab4:	cf 90       	pop	r12
     ab6:	bf 90       	pop	r11
     ab8:	af 90       	pop	r10
     aba:	9f 90       	pop	r9
     abc:	8f 90       	pop	r8
     abe:	7f 90       	pop	r7
     ac0:	6f 90       	pop	r6
     ac2:	5f 90       	pop	r5
     ac4:	4f 90       	pop	r4
     ac6:	3f 90       	pop	r3
     ac8:	2f 90       	pop	r2
     aca:	1f 90       	pop	r1
     acc:	0f 90       	pop	r0
     ace:	0f be       	out	0x3f, r0	; 63
     ad0:	0f 90       	pop	r0
     ad2:	08 95       	ret

00000ad4 <vPortYieldFromTick>:
     ad4:	0f 92       	push	r0
     ad6:	0f b6       	in	r0, 0x3f	; 63
     ad8:	f8 94       	cli
     ada:	0f 92       	push	r0
     adc:	1f 92       	push	r1
     ade:	11 24       	eor	r1, r1
     ae0:	2f 92       	push	r2
     ae2:	3f 92       	push	r3
     ae4:	4f 92       	push	r4
     ae6:	5f 92       	push	r5
     ae8:	6f 92       	push	r6
     aea:	7f 92       	push	r7
     aec:	8f 92       	push	r8
     aee:	9f 92       	push	r9
     af0:	af 92       	push	r10
     af2:	bf 92       	push	r11
     af4:	cf 92       	push	r12
     af6:	df 92       	push	r13
     af8:	ef 92       	push	r14
     afa:	ff 92       	push	r15
     afc:	0f 93       	push	r16
     afe:	1f 93       	push	r17
     b00:	2f 93       	push	r18
     b02:	3f 93       	push	r19
     b04:	4f 93       	push	r20
     b06:	5f 93       	push	r21
     b08:	6f 93       	push	r22
     b0a:	7f 93       	push	r23
     b0c:	8f 93       	push	r24
     b0e:	9f 93       	push	r25
     b10:	af 93       	push	r26
     b12:	bf 93       	push	r27
     b14:	cf 93       	push	r28
     b16:	df 93       	push	r29
     b18:	ef 93       	push	r30
     b1a:	ff 93       	push	r31
     b1c:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
     b20:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
     b24:	0d b6       	in	r0, 0x3d	; 61
     b26:	0d 92       	st	X+, r0
     b28:	0e b6       	in	r0, 0x3e	; 62
     b2a:	0d 92       	st	X+, r0
     b2c:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <xTaskIncrementTick>
     b30:	81 11       	cpse	r24, r1
     b32:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <vTaskSwitchContext>
     b36:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
     b3a:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
     b3e:	cd 91       	ld	r28, X+
     b40:	cd bf       	out	0x3d, r28	; 61
     b42:	dd 91       	ld	r29, X+
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	ff 91       	pop	r31
     b48:	ef 91       	pop	r30
     b4a:	df 91       	pop	r29
     b4c:	cf 91       	pop	r28
     b4e:	bf 91       	pop	r27
     b50:	af 91       	pop	r26
     b52:	9f 91       	pop	r25
     b54:	8f 91       	pop	r24
     b56:	7f 91       	pop	r23
     b58:	6f 91       	pop	r22
     b5a:	5f 91       	pop	r21
     b5c:	4f 91       	pop	r20
     b5e:	3f 91       	pop	r19
     b60:	2f 91       	pop	r18
     b62:	1f 91       	pop	r17
     b64:	0f 91       	pop	r16
     b66:	ff 90       	pop	r15
     b68:	ef 90       	pop	r14
     b6a:	df 90       	pop	r13
     b6c:	cf 90       	pop	r12
     b6e:	bf 90       	pop	r11
     b70:	af 90       	pop	r10
     b72:	9f 90       	pop	r9
     b74:	8f 90       	pop	r8
     b76:	7f 90       	pop	r7
     b78:	6f 90       	pop	r6
     b7a:	5f 90       	pop	r5
     b7c:	4f 90       	pop	r4
     b7e:	3f 90       	pop	r3
     b80:	2f 90       	pop	r2
     b82:	1f 90       	pop	r1
     b84:	0f 90       	pop	r0
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	0f 90       	pop	r0
     b8a:	08 95       	ret

00000b8c <__vector_7>:
     b8c:	0e 94 6a 05 	call	0xad4	; 0xad4 <vPortYieldFromTick>
     b90:	18 95       	reti

00000b92 <prvIsQueueEmpty>:
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	0f 92       	push	r0
     b98:	fc 01       	movw	r30, r24
     b9a:	82 8d       	ldd	r24, Z+26	; 0x1a
     b9c:	81 11       	cpse	r24, r1
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <prvIsQueueEmpty+0x12>
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <prvIsQueueEmpty+0x14>
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	0f 90       	pop	r0
     ba8:	0f be       	out	0x3f, r0	; 63
     baa:	08 95       	ret

00000bac <prvIsQueueFull>:
     bac:	0f b6       	in	r0, 0x3f	; 63
     bae:	f8 94       	cli
     bb0:	0f 92       	push	r0
     bb2:	fc 01       	movw	r30, r24
     bb4:	22 8d       	ldd	r18, Z+26	; 0x1a
     bb6:	83 8d       	ldd	r24, Z+27	; 0x1b
     bb8:	28 13       	cpse	r18, r24
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <prvIsQueueFull+0x14>
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <prvIsQueueFull+0x16>
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	0f 90       	pop	r0
     bc4:	0f be       	out	0x3f, r0	; 63
     bc6:	08 95       	ret

00000bc8 <prvCopyDataToQueue>:
     bc8:	0f 93       	push	r16
     bca:	1f 93       	push	r17
     bcc:	cf 93       	push	r28
     bce:	df 93       	push	r29
     bd0:	ec 01       	movw	r28, r24
     bd2:	04 2f       	mov	r16, r20
     bd4:	1a 8d       	ldd	r17, Y+26	; 0x1a
     bd6:	4c 8d       	ldd	r20, Y+28	; 0x1c
     bd8:	41 11       	cpse	r20, r1
     bda:	0c c0       	rjmp	.+24     	; 0xbf4 <prvCopyDataToQueue+0x2c>
     bdc:	88 81       	ld	r24, Y
     bde:	99 81       	ldd	r25, Y+1	; 0x01
     be0:	89 2b       	or	r24, r25
     be2:	09 f0       	breq	.+2      	; 0xbe6 <prvCopyDataToQueue+0x1e>
     be4:	42 c0       	rjmp	.+132    	; 0xc6a <prvCopyDataToQueue+0xa2>
     be6:	8a 81       	ldd	r24, Y+2	; 0x02
     be8:	9b 81       	ldd	r25, Y+3	; 0x03
     bea:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <xTaskPriorityDisinherit>
     bee:	1b 82       	std	Y+3, r1	; 0x03
     bf0:	1a 82       	std	Y+2, r1	; 0x02
     bf2:	42 c0       	rjmp	.+132    	; 0xc78 <prvCopyDataToQueue+0xb0>
     bf4:	01 11       	cpse	r16, r1
     bf6:	17 c0       	rjmp	.+46     	; 0xc26 <prvCopyDataToQueue+0x5e>
     bf8:	50 e0       	ldi	r21, 0x00	; 0
     bfa:	8c 81       	ldd	r24, Y+4	; 0x04
     bfc:	9d 81       	ldd	r25, Y+5	; 0x05
     bfe:	0e 94 8d 11 	call	0x231a	; 0x231a <memcpy>
     c02:	2c 8d       	ldd	r18, Y+28	; 0x1c
     c04:	8c 81       	ldd	r24, Y+4	; 0x04
     c06:	9d 81       	ldd	r25, Y+5	; 0x05
     c08:	82 0f       	add	r24, r18
     c0a:	91 1d       	adc	r25, r1
     c0c:	9d 83       	std	Y+5, r25	; 0x05
     c0e:	8c 83       	std	Y+4, r24	; 0x04
     c10:	2a 81       	ldd	r18, Y+2	; 0x02
     c12:	3b 81       	ldd	r19, Y+3	; 0x03
     c14:	82 17       	cp	r24, r18
     c16:	93 07       	cpc	r25, r19
     c18:	50 f1       	brcs	.+84     	; 0xc6e <prvCopyDataToQueue+0xa6>
     c1a:	88 81       	ld	r24, Y
     c1c:	99 81       	ldd	r25, Y+1	; 0x01
     c1e:	9d 83       	std	Y+5, r25	; 0x05
     c20:	8c 83       	std	Y+4, r24	; 0x04
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	29 c0       	rjmp	.+82     	; 0xc78 <prvCopyDataToQueue+0xb0>
     c26:	50 e0       	ldi	r21, 0x00	; 0
     c28:	8e 81       	ldd	r24, Y+6	; 0x06
     c2a:	9f 81       	ldd	r25, Y+7	; 0x07
     c2c:	0e 94 8d 11 	call	0x231a	; 0x231a <memcpy>
     c30:	8c 8d       	ldd	r24, Y+28	; 0x1c
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	91 95       	neg	r25
     c36:	81 95       	neg	r24
     c38:	91 09       	sbc	r25, r1
     c3a:	2e 81       	ldd	r18, Y+6	; 0x06
     c3c:	3f 81       	ldd	r19, Y+7	; 0x07
     c3e:	28 0f       	add	r18, r24
     c40:	39 1f       	adc	r19, r25
     c42:	3f 83       	std	Y+7, r19	; 0x07
     c44:	2e 83       	std	Y+6, r18	; 0x06
     c46:	48 81       	ld	r20, Y
     c48:	59 81       	ldd	r21, Y+1	; 0x01
     c4a:	24 17       	cp	r18, r20
     c4c:	35 07       	cpc	r19, r21
     c4e:	30 f4       	brcc	.+12     	; 0xc5c <prvCopyDataToQueue+0x94>
     c50:	2a 81       	ldd	r18, Y+2	; 0x02
     c52:	3b 81       	ldd	r19, Y+3	; 0x03
     c54:	82 0f       	add	r24, r18
     c56:	93 1f       	adc	r25, r19
     c58:	9f 83       	std	Y+7, r25	; 0x07
     c5a:	8e 83       	std	Y+6, r24	; 0x06
     c5c:	02 30       	cpi	r16, 0x02	; 2
     c5e:	49 f4       	brne	.+18     	; 0xc72 <prvCopyDataToQueue+0xaa>
     c60:	11 23       	and	r17, r17
     c62:	49 f0       	breq	.+18     	; 0xc76 <prvCopyDataToQueue+0xae>
     c64:	11 50       	subi	r17, 0x01	; 1
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	07 c0       	rjmp	.+14     	; 0xc78 <prvCopyDataToQueue+0xb0>
     c6a:	80 e0       	ldi	r24, 0x00	; 0
     c6c:	05 c0       	rjmp	.+10     	; 0xc78 <prvCopyDataToQueue+0xb0>
     c6e:	80 e0       	ldi	r24, 0x00	; 0
     c70:	03 c0       	rjmp	.+6      	; 0xc78 <prvCopyDataToQueue+0xb0>
     c72:	80 e0       	ldi	r24, 0x00	; 0
     c74:	01 c0       	rjmp	.+2      	; 0xc78 <prvCopyDataToQueue+0xb0>
     c76:	80 e0       	ldi	r24, 0x00	; 0
     c78:	1f 5f       	subi	r17, 0xFF	; 255
     c7a:	1a 8f       	std	Y+26, r17	; 0x1a
     c7c:	df 91       	pop	r29
     c7e:	cf 91       	pop	r28
     c80:	1f 91       	pop	r17
     c82:	0f 91       	pop	r16
     c84:	08 95       	ret

00000c86 <prvCopyDataFromQueue>:
     c86:	fc 01       	movw	r30, r24
     c88:	44 8d       	ldd	r20, Z+28	; 0x1c
     c8a:	44 23       	and	r20, r20
     c8c:	a9 f0       	breq	.+42     	; 0xcb8 <prvCopyDataFromQueue+0x32>
     c8e:	50 e0       	ldi	r21, 0x00	; 0
     c90:	26 81       	ldd	r18, Z+6	; 0x06
     c92:	37 81       	ldd	r19, Z+7	; 0x07
     c94:	24 0f       	add	r18, r20
     c96:	35 1f       	adc	r19, r21
     c98:	37 83       	std	Z+7, r19	; 0x07
     c9a:	26 83       	std	Z+6, r18	; 0x06
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	93 81       	ldd	r25, Z+3	; 0x03
     ca0:	28 17       	cp	r18, r24
     ca2:	39 07       	cpc	r19, r25
     ca4:	20 f0       	brcs	.+8      	; 0xcae <prvCopyDataFromQueue+0x28>
     ca6:	80 81       	ld	r24, Z
     ca8:	91 81       	ldd	r25, Z+1	; 0x01
     caa:	97 83       	std	Z+7, r25	; 0x07
     cac:	86 83       	std	Z+6, r24	; 0x06
     cae:	cb 01       	movw	r24, r22
     cb0:	66 81       	ldd	r22, Z+6	; 0x06
     cb2:	77 81       	ldd	r23, Z+7	; 0x07
     cb4:	0e 94 8d 11 	call	0x231a	; 0x231a <memcpy>
     cb8:	08 95       	ret

00000cba <prvUnlockQueue>:
     cba:	1f 93       	push	r17
     cbc:	cf 93       	push	r28
     cbe:	df 93       	push	r29
     cc0:	ec 01       	movw	r28, r24
     cc2:	0f b6       	in	r0, 0x3f	; 63
     cc4:	f8 94       	cli
     cc6:	0f 92       	push	r0
     cc8:	1e 8d       	ldd	r17, Y+30	; 0x1e
     cca:	0b c0       	rjmp	.+22     	; 0xce2 <prvUnlockQueue+0x28>
     ccc:	89 89       	ldd	r24, Y+17	; 0x11
     cce:	88 23       	and	r24, r24
     cd0:	51 f0       	breq	.+20     	; 0xce6 <prvUnlockQueue+0x2c>
     cd2:	ce 01       	movw	r24, r28
     cd4:	41 96       	adiw	r24, 0x11	; 17
     cd6:	0e 94 95 0c 	call	0x192a	; 0x192a <xTaskRemoveFromEventList>
     cda:	81 11       	cpse	r24, r1
     cdc:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <vTaskMissedYield>
     ce0:	11 50       	subi	r17, 0x01	; 1
     ce2:	11 16       	cp	r1, r17
     ce4:	9c f3       	brlt	.-26     	; 0xccc <prvUnlockQueue+0x12>
     ce6:	8f ef       	ldi	r24, 0xFF	; 255
     ce8:	8e 8f       	std	Y+30, r24	; 0x1e
     cea:	0f 90       	pop	r0
     cec:	0f be       	out	0x3f, r0	; 63
     cee:	0f b6       	in	r0, 0x3f	; 63
     cf0:	f8 94       	cli
     cf2:	0f 92       	push	r0
     cf4:	1d 8d       	ldd	r17, Y+29	; 0x1d
     cf6:	0b c0       	rjmp	.+22     	; 0xd0e <prvUnlockQueue+0x54>
     cf8:	88 85       	ldd	r24, Y+8	; 0x08
     cfa:	88 23       	and	r24, r24
     cfc:	51 f0       	breq	.+20     	; 0xd12 <prvUnlockQueue+0x58>
     cfe:	ce 01       	movw	r24, r28
     d00:	08 96       	adiw	r24, 0x08	; 8
     d02:	0e 94 95 0c 	call	0x192a	; 0x192a <xTaskRemoveFromEventList>
     d06:	81 11       	cpse	r24, r1
     d08:	0e 94 21 0d 	call	0x1a42	; 0x1a42 <vTaskMissedYield>
     d0c:	11 50       	subi	r17, 0x01	; 1
     d0e:	11 16       	cp	r1, r17
     d10:	9c f3       	brlt	.-26     	; 0xcf8 <prvUnlockQueue+0x3e>
     d12:	8f ef       	ldi	r24, 0xFF	; 255
     d14:	8d 8f       	std	Y+29, r24	; 0x1d
     d16:	0f 90       	pop	r0
     d18:	0f be       	out	0x3f, r0	; 63
     d1a:	df 91       	pop	r29
     d1c:	cf 91       	pop	r28
     d1e:	1f 91       	pop	r17
     d20:	08 95       	ret

00000d22 <xQueueGenericReset>:
     d22:	cf 93       	push	r28
     d24:	df 93       	push	r29
     d26:	ec 01       	movw	r28, r24
     d28:	0f b6       	in	r0, 0x3f	; 63
     d2a:	f8 94       	cli
     d2c:	0f 92       	push	r0
     d2e:	e8 81       	ld	r30, Y
     d30:	f9 81       	ldd	r31, Y+1	; 0x01
     d32:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	2c 8d       	ldd	r18, Y+28	; 0x1c
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	82 9f       	mul	r24, r18
     d3c:	a0 01       	movw	r20, r0
     d3e:	83 9f       	mul	r24, r19
     d40:	50 0d       	add	r21, r0
     d42:	92 9f       	mul	r25, r18
     d44:	50 0d       	add	r21, r0
     d46:	11 24       	eor	r1, r1
     d48:	4e 0f       	add	r20, r30
     d4a:	5f 1f       	adc	r21, r31
     d4c:	5b 83       	std	Y+3, r21	; 0x03
     d4e:	4a 83       	std	Y+2, r20	; 0x02
     d50:	1a 8e       	std	Y+26, r1	; 0x1a
     d52:	fd 83       	std	Y+5, r31	; 0x05
     d54:	ec 83       	std	Y+4, r30	; 0x04
     d56:	01 97       	sbiw	r24, 0x01	; 1
     d58:	28 9f       	mul	r18, r24
     d5a:	a0 01       	movw	r20, r0
     d5c:	29 9f       	mul	r18, r25
     d5e:	50 0d       	add	r21, r0
     d60:	38 9f       	mul	r19, r24
     d62:	50 0d       	add	r21, r0
     d64:	11 24       	eor	r1, r1
     d66:	cf 01       	movw	r24, r30
     d68:	84 0f       	add	r24, r20
     d6a:	95 1f       	adc	r25, r21
     d6c:	9f 83       	std	Y+7, r25	; 0x07
     d6e:	8e 83       	std	Y+6, r24	; 0x06
     d70:	8f ef       	ldi	r24, 0xFF	; 255
     d72:	8d 8f       	std	Y+29, r24	; 0x1d
     d74:	8e 8f       	std	Y+30, r24	; 0x1e
     d76:	61 11       	cpse	r22, r1
     d78:	0c c0       	rjmp	.+24     	; 0xd92 <xQueueGenericReset+0x70>
     d7a:	88 85       	ldd	r24, Y+8	; 0x08
     d7c:	88 23       	and	r24, r24
     d7e:	89 f0       	breq	.+34     	; 0xda2 <xQueueGenericReset+0x80>
     d80:	ce 01       	movw	r24, r28
     d82:	08 96       	adiw	r24, 0x08	; 8
     d84:	0e 94 95 0c 	call	0x192a	; 0x192a <xTaskRemoveFromEventList>
     d88:	88 23       	and	r24, r24
     d8a:	59 f0       	breq	.+22     	; 0xda2 <xQueueGenericReset+0x80>
     d8c:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
     d90:	08 c0       	rjmp	.+16     	; 0xda2 <xQueueGenericReset+0x80>
     d92:	ce 01       	movw	r24, r28
     d94:	08 96       	adiw	r24, 0x08	; 8
     d96:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
     d9a:	ce 01       	movw	r24, r28
     d9c:	41 96       	adiw	r24, 0x11	; 17
     d9e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
     da2:	0f 90       	pop	r0
     da4:	0f be       	out	0x3f, r0	; 63
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	df 91       	pop	r29
     daa:	cf 91       	pop	r28
     dac:	08 95       	ret

00000dae <prvInitialiseNewQueue>:
     dae:	0f 93       	push	r16
     db0:	1f 93       	push	r17
     db2:	f8 01       	movw	r30, r16
     db4:	61 11       	cpse	r22, r1
     db6:	03 c0       	rjmp	.+6      	; 0xdbe <prvInitialiseNewQueue+0x10>
     db8:	11 83       	std	Z+1, r17	; 0x01
     dba:	00 83       	st	Z, r16
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <prvInitialiseNewQueue+0x14>
     dbe:	51 83       	std	Z+1, r21	; 0x01
     dc0:	40 83       	st	Z, r20
     dc2:	83 8f       	std	Z+27, r24	; 0x1b
     dc4:	64 8f       	std	Z+28, r22	; 0x1c
     dc6:	61 e0       	ldi	r22, 0x01	; 1
     dc8:	cf 01       	movw	r24, r30
     dca:	0e 94 91 06 	call	0xd22	; 0xd22 <xQueueGenericReset>
     dce:	1f 91       	pop	r17
     dd0:	0f 91       	pop	r16
     dd2:	08 95       	ret

00000dd4 <xQueueGenericCreate>:
     dd4:	df 92       	push	r13
     dd6:	ef 92       	push	r14
     dd8:	ff 92       	push	r15
     dda:	0f 93       	push	r16
     ddc:	1f 93       	push	r17
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	e8 2e       	mov	r14, r24
     de4:	f6 2e       	mov	r15, r22
     de6:	d4 2e       	mov	r13, r20
     de8:	66 23       	and	r22, r22
     dea:	21 f0       	breq	.+8      	; 0xdf4 <xQueueGenericCreate+0x20>
     dec:	86 9f       	mul	r24, r22
     dee:	c0 01       	movw	r24, r0
     df0:	11 24       	eor	r1, r1
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <xQueueGenericCreate+0x24>
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	4f 96       	adiw	r24, 0x1f	; 31
     dfa:	0e 94 34 03 	call	0x668	; 0x668 <pvPortMalloc>
     dfe:	ec 01       	movw	r28, r24
     e00:	00 97       	sbiw	r24, 0x00	; 0
     e02:	49 f0       	breq	.+18     	; 0xe16 <xQueueGenericCreate+0x42>
     e04:	8c 01       	movw	r16, r24
     e06:	2d 2d       	mov	r18, r13
     e08:	ac 01       	movw	r20, r24
     e0a:	41 5e       	subi	r20, 0xE1	; 225
     e0c:	5f 4f       	sbci	r21, 0xFF	; 255
     e0e:	6f 2d       	mov	r22, r15
     e10:	8e 2d       	mov	r24, r14
     e12:	0e 94 d7 06 	call	0xdae	; 0xdae <prvInitialiseNewQueue>
     e16:	ce 01       	movw	r24, r28
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	ff 90       	pop	r15
     e22:	ef 90       	pop	r14
     e24:	df 90       	pop	r13
     e26:	08 95       	ret

00000e28 <xQueueGenericSend>:
     e28:	cf 92       	push	r12
     e2a:	df 92       	push	r13
     e2c:	ef 92       	push	r14
     e2e:	ff 92       	push	r15
     e30:	0f 93       	push	r16
     e32:	1f 93       	push	r17
     e34:	cf 93       	push	r28
     e36:	df 93       	push	r29
     e38:	00 d0       	rcall	.+0      	; 0xe3a <xQueueGenericSend+0x12>
     e3a:	00 d0       	rcall	.+0      	; 0xe3c <xQueueGenericSend+0x14>
     e3c:	1f 92       	push	r1
     e3e:	cd b7       	in	r28, 0x3d	; 61
     e40:	de b7       	in	r29, 0x3e	; 62
     e42:	8c 01       	movw	r16, r24
     e44:	7b 01       	movw	r14, r22
     e46:	5d 83       	std	Y+5, r21	; 0x05
     e48:	4c 83       	std	Y+4, r20	; 0x04
     e4a:	c2 2e       	mov	r12, r18
     e4c:	d1 2c       	mov	r13, r1
     e4e:	0f b6       	in	r0, 0x3f	; 63
     e50:	f8 94       	cli
     e52:	0f 92       	push	r0
     e54:	f8 01       	movw	r30, r16
     e56:	92 8d       	ldd	r25, Z+26	; 0x1a
     e58:	83 8d       	ldd	r24, Z+27	; 0x1b
     e5a:	98 17       	cp	r25, r24
     e5c:	18 f0       	brcs	.+6      	; 0xe64 <xQueueGenericSend+0x3c>
     e5e:	f2 e0       	ldi	r31, 0x02	; 2
     e60:	cf 12       	cpse	r12, r31
     e62:	19 c0       	rjmp	.+50     	; 0xe96 <xQueueGenericSend+0x6e>
     e64:	4c 2d       	mov	r20, r12
     e66:	b7 01       	movw	r22, r14
     e68:	c8 01       	movw	r24, r16
     e6a:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <prvCopyDataToQueue>
     e6e:	f8 01       	movw	r30, r16
     e70:	91 89       	ldd	r25, Z+17	; 0x11
     e72:	99 23       	and	r25, r25
     e74:	49 f0       	breq	.+18     	; 0xe88 <xQueueGenericSend+0x60>
     e76:	c8 01       	movw	r24, r16
     e78:	41 96       	adiw	r24, 0x11	; 17
     e7a:	0e 94 95 0c 	call	0x192a	; 0x192a <xTaskRemoveFromEventList>
     e7e:	88 23       	and	r24, r24
     e80:	31 f0       	breq	.+12     	; 0xe8e <xQueueGenericSend+0x66>
     e82:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <xQueueGenericSend+0x66>
     e88:	81 11       	cpse	r24, r1
     e8a:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
     e8e:	0f 90       	pop	r0
     e90:	0f be       	out	0x3f, r0	; 63
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	4d c0       	rjmp	.+154    	; 0xf30 <xQueueGenericSend+0x108>
     e96:	8c 81       	ldd	r24, Y+4	; 0x04
     e98:	9d 81       	ldd	r25, Y+5	; 0x05
     e9a:	89 2b       	or	r24, r25
     e9c:	21 f4       	brne	.+8      	; 0xea6 <xQueueGenericSend+0x7e>
     e9e:	0f 90       	pop	r0
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	45 c0       	rjmp	.+138    	; 0xf30 <xQueueGenericSend+0x108>
     ea6:	d1 10       	cpse	r13, r1
     ea8:	06 c0       	rjmp	.+12     	; 0xeb6 <xQueueGenericSend+0x8e>
     eaa:	ce 01       	movw	r24, r28
     eac:	01 96       	adiw	r24, 0x01	; 1
     eae:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <vTaskSetTimeOutState>
     eb2:	dd 24       	eor	r13, r13
     eb4:	d3 94       	inc	r13
     eb6:	0f 90       	pop	r0
     eb8:	0f be       	out	0x3f, r0	; 63
     eba:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskSuspendAll>
     ebe:	0f b6       	in	r0, 0x3f	; 63
     ec0:	f8 94       	cli
     ec2:	0f 92       	push	r0
     ec4:	f8 01       	movw	r30, r16
     ec6:	85 8d       	ldd	r24, Z+29	; 0x1d
     ec8:	8f 3f       	cpi	r24, 0xFF	; 255
     eca:	09 f4       	brne	.+2      	; 0xece <xQueueGenericSend+0xa6>
     ecc:	15 8e       	std	Z+29, r1	; 0x1d
     ece:	f8 01       	movw	r30, r16
     ed0:	86 8d       	ldd	r24, Z+30	; 0x1e
     ed2:	8f 3f       	cpi	r24, 0xFF	; 255
     ed4:	09 f4       	brne	.+2      	; 0xed8 <xQueueGenericSend+0xb0>
     ed6:	16 8e       	std	Z+30, r1	; 0x1e
     ed8:	0f 90       	pop	r0
     eda:	0f be       	out	0x3f, r0	; 63
     edc:	be 01       	movw	r22, r28
     ede:	6c 5f       	subi	r22, 0xFC	; 252
     ee0:	7f 4f       	sbci	r23, 0xFF	; 255
     ee2:	ce 01       	movw	r24, r28
     ee4:	01 96       	adiw	r24, 0x01	; 1
     ee6:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <xTaskCheckForTimeOut>
     eea:	81 11       	cpse	r24, r1
     eec:	1b c0       	rjmp	.+54     	; 0xf24 <xQueueGenericSend+0xfc>
     eee:	c8 01       	movw	r24, r16
     ef0:	0e 94 d6 05 	call	0xbac	; 0xbac <prvIsQueueFull>
     ef4:	88 23       	and	r24, r24
     ef6:	81 f0       	breq	.+32     	; 0xf18 <xQueueGenericSend+0xf0>
     ef8:	6c 81       	ldd	r22, Y+4	; 0x04
     efa:	7d 81       	ldd	r23, Y+5	; 0x05
     efc:	c8 01       	movw	r24, r16
     efe:	08 96       	adiw	r24, 0x08	; 8
     f00:	0e 94 83 0c 	call	0x1906	; 0x1906 <vTaskPlaceOnEventList>
     f04:	c8 01       	movw	r24, r16
     f06:	0e 94 5d 06 	call	0xcba	; 0xcba <prvUnlockQueue>
     f0a:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
     f0e:	81 11       	cpse	r24, r1
     f10:	9e cf       	rjmp	.-196    	; 0xe4e <xQueueGenericSend+0x26>
     f12:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
     f16:	9b cf       	rjmp	.-202    	; 0xe4e <xQueueGenericSend+0x26>
     f18:	c8 01       	movw	r24, r16
     f1a:	0e 94 5d 06 	call	0xcba	; 0xcba <prvUnlockQueue>
     f1e:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
     f22:	95 cf       	rjmp	.-214    	; 0xe4e <xQueueGenericSend+0x26>
     f24:	c8 01       	movw	r24, r16
     f26:	0e 94 5d 06 	call	0xcba	; 0xcba <prvUnlockQueue>
     f2a:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
     f2e:	80 e0       	ldi	r24, 0x00	; 0
     f30:	0f 90       	pop	r0
     f32:	0f 90       	pop	r0
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0f 91       	pop	r16
     f42:	ff 90       	pop	r15
     f44:	ef 90       	pop	r14
     f46:	df 90       	pop	r13
     f48:	cf 90       	pop	r12
     f4a:	08 95       	ret

00000f4c <xQueueGenericReceive>:
     f4c:	8f 92       	push	r8
     f4e:	9f 92       	push	r9
     f50:	bf 92       	push	r11
     f52:	cf 92       	push	r12
     f54:	df 92       	push	r13
     f56:	ef 92       	push	r14
     f58:	ff 92       	push	r15
     f5a:	0f 93       	push	r16
     f5c:	1f 93       	push	r17
     f5e:	cf 93       	push	r28
     f60:	df 93       	push	r29
     f62:	00 d0       	rcall	.+0      	; 0xf64 <xQueueGenericReceive+0x18>
     f64:	00 d0       	rcall	.+0      	; 0xf66 <xQueueGenericReceive+0x1a>
     f66:	1f 92       	push	r1
     f68:	cd b7       	in	r28, 0x3d	; 61
     f6a:	de b7       	in	r29, 0x3e	; 62
     f6c:	8c 01       	movw	r16, r24
     f6e:	6b 01       	movw	r12, r22
     f70:	5d 83       	std	Y+5, r21	; 0x05
     f72:	4c 83       	std	Y+4, r20	; 0x04
     f74:	b2 2e       	mov	r11, r18
     f76:	e1 2c       	mov	r14, r1
     f78:	0f b6       	in	r0, 0x3f	; 63
     f7a:	f8 94       	cli
     f7c:	0f 92       	push	r0
     f7e:	f8 01       	movw	r30, r16
     f80:	f2 8c       	ldd	r15, Z+26	; 0x1a
     f82:	ff 20       	and	r15, r15
     f84:	91 f1       	breq	.+100    	; 0xfea <xQueueGenericReceive+0x9e>
     f86:	86 80       	ldd	r8, Z+6	; 0x06
     f88:	97 80       	ldd	r9, Z+7	; 0x07
     f8a:	b6 01       	movw	r22, r12
     f8c:	c8 01       	movw	r24, r16
     f8e:	0e 94 43 06 	call	0xc86	; 0xc86 <prvCopyDataFromQueue>
     f92:	b1 10       	cpse	r11, r1
     f94:	19 c0       	rjmp	.+50     	; 0xfc8 <xQueueGenericReceive+0x7c>
     f96:	fa 94       	dec	r15
     f98:	f8 01       	movw	r30, r16
     f9a:	f2 8e       	std	Z+26, r15	; 0x1a
     f9c:	80 81       	ld	r24, Z
     f9e:	91 81       	ldd	r25, Z+1	; 0x01
     fa0:	89 2b       	or	r24, r25
     fa2:	29 f4       	brne	.+10     	; 0xfae <xQueueGenericReceive+0x62>
     fa4:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <pvTaskIncrementMutexHeldCount>
     fa8:	f8 01       	movw	r30, r16
     faa:	93 83       	std	Z+3, r25	; 0x03
     fac:	82 83       	std	Z+2, r24	; 0x02
     fae:	f8 01       	movw	r30, r16
     fb0:	80 85       	ldd	r24, Z+8	; 0x08
     fb2:	88 23       	and	r24, r24
     fb4:	b1 f0       	breq	.+44     	; 0xfe2 <xQueueGenericReceive+0x96>
     fb6:	c8 01       	movw	r24, r16
     fb8:	08 96       	adiw	r24, 0x08	; 8
     fba:	0e 94 95 0c 	call	0x192a	; 0x192a <xTaskRemoveFromEventList>
     fbe:	88 23       	and	r24, r24
     fc0:	81 f0       	breq	.+32     	; 0xfe2 <xQueueGenericReceive+0x96>
     fc2:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
     fc6:	0d c0       	rjmp	.+26     	; 0xfe2 <xQueueGenericReceive+0x96>
     fc8:	f8 01       	movw	r30, r16
     fca:	97 82       	std	Z+7, r9	; 0x07
     fcc:	86 82       	std	Z+6, r8	; 0x06
     fce:	81 89       	ldd	r24, Z+17	; 0x11
     fd0:	88 23       	and	r24, r24
     fd2:	39 f0       	breq	.+14     	; 0xfe2 <xQueueGenericReceive+0x96>
     fd4:	c8 01       	movw	r24, r16
     fd6:	41 96       	adiw	r24, 0x11	; 17
     fd8:	0e 94 95 0c 	call	0x192a	; 0x192a <xTaskRemoveFromEventList>
     fdc:	81 11       	cpse	r24, r1
     fde:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
     fe2:	0f 90       	pop	r0
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	81 e0       	ldi	r24, 0x01	; 1
     fe8:	61 c0       	rjmp	.+194    	; 0x10ac <xQueueGenericReceive+0x160>
     fea:	8c 81       	ldd	r24, Y+4	; 0x04
     fec:	9d 81       	ldd	r25, Y+5	; 0x05
     fee:	89 2b       	or	r24, r25
     ff0:	21 f4       	brne	.+8      	; 0xffa <xQueueGenericReceive+0xae>
     ff2:	0f 90       	pop	r0
     ff4:	0f be       	out	0x3f, r0	; 63
     ff6:	80 e0       	ldi	r24, 0x00	; 0
     ff8:	59 c0       	rjmp	.+178    	; 0x10ac <xQueueGenericReceive+0x160>
     ffa:	e1 10       	cpse	r14, r1
     ffc:	06 c0       	rjmp	.+12     	; 0x100a <xQueueGenericReceive+0xbe>
     ffe:	ce 01       	movw	r24, r28
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <vTaskSetTimeOutState>
    1006:	ee 24       	eor	r14, r14
    1008:	e3 94       	inc	r14
    100a:	0f 90       	pop	r0
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskSuspendAll>
    1012:	0f b6       	in	r0, 0x3f	; 63
    1014:	f8 94       	cli
    1016:	0f 92       	push	r0
    1018:	f8 01       	movw	r30, r16
    101a:	85 8d       	ldd	r24, Z+29	; 0x1d
    101c:	8f 3f       	cpi	r24, 0xFF	; 255
    101e:	09 f4       	brne	.+2      	; 0x1022 <xQueueGenericReceive+0xd6>
    1020:	15 8e       	std	Z+29, r1	; 0x1d
    1022:	f8 01       	movw	r30, r16
    1024:	86 8d       	ldd	r24, Z+30	; 0x1e
    1026:	8f 3f       	cpi	r24, 0xFF	; 255
    1028:	09 f4       	brne	.+2      	; 0x102c <xQueueGenericReceive+0xe0>
    102a:	16 8e       	std	Z+30, r1	; 0x1e
    102c:	0f 90       	pop	r0
    102e:	0f be       	out	0x3f, r0	; 63
    1030:	be 01       	movw	r22, r28
    1032:	6c 5f       	subi	r22, 0xFC	; 252
    1034:	7f 4f       	sbci	r23, 0xFF	; 255
    1036:	ce 01       	movw	r24, r28
    1038:	01 96       	adiw	r24, 0x01	; 1
    103a:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <xTaskCheckForTimeOut>
    103e:	81 11       	cpse	r24, r1
    1040:	29 c0       	rjmp	.+82     	; 0x1094 <xQueueGenericReceive+0x148>
    1042:	c8 01       	movw	r24, r16
    1044:	0e 94 c9 05 	call	0xb92	; 0xb92 <prvIsQueueEmpty>
    1048:	88 23       	and	r24, r24
    104a:	f1 f0       	breq	.+60     	; 0x1088 <xQueueGenericReceive+0x13c>
    104c:	f8 01       	movw	r30, r16
    104e:	80 81       	ld	r24, Z
    1050:	91 81       	ldd	r25, Z+1	; 0x01
    1052:	89 2b       	or	r24, r25
    1054:	49 f4       	brne	.+18     	; 0x1068 <xQueueGenericReceive+0x11c>
    1056:	0f b6       	in	r0, 0x3f	; 63
    1058:	f8 94       	cli
    105a:	0f 92       	push	r0
    105c:	82 81       	ldd	r24, Z+2	; 0x02
    105e:	93 81       	ldd	r25, Z+3	; 0x03
    1060:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <vTaskPriorityInherit>
    1064:	0f 90       	pop	r0
    1066:	0f be       	out	0x3f, r0	; 63
    1068:	6c 81       	ldd	r22, Y+4	; 0x04
    106a:	7d 81       	ldd	r23, Y+5	; 0x05
    106c:	c8 01       	movw	r24, r16
    106e:	41 96       	adiw	r24, 0x11	; 17
    1070:	0e 94 83 0c 	call	0x1906	; 0x1906 <vTaskPlaceOnEventList>
    1074:	c8 01       	movw	r24, r16
    1076:	0e 94 5d 06 	call	0xcba	; 0xcba <prvUnlockQueue>
    107a:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
    107e:	81 11       	cpse	r24, r1
    1080:	7b cf       	rjmp	.-266    	; 0xf78 <xQueueGenericReceive+0x2c>
    1082:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
    1086:	78 cf       	rjmp	.-272    	; 0xf78 <xQueueGenericReceive+0x2c>
    1088:	c8 01       	movw	r24, r16
    108a:	0e 94 5d 06 	call	0xcba	; 0xcba <prvUnlockQueue>
    108e:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
    1092:	72 cf       	rjmp	.-284    	; 0xf78 <xQueueGenericReceive+0x2c>
    1094:	c8 01       	movw	r24, r16
    1096:	0e 94 5d 06 	call	0xcba	; 0xcba <prvUnlockQueue>
    109a:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
    109e:	c8 01       	movw	r24, r16
    10a0:	0e 94 c9 05 	call	0xb92	; 0xb92 <prvIsQueueEmpty>
    10a4:	88 23       	and	r24, r24
    10a6:	09 f4       	brne	.+2      	; 0x10aa <xQueueGenericReceive+0x15e>
    10a8:	67 cf       	rjmp	.-306    	; 0xf78 <xQueueGenericReceive+0x2c>
    10aa:	80 e0       	ldi	r24, 0x00	; 0
    10ac:	0f 90       	pop	r0
    10ae:	0f 90       	pop	r0
    10b0:	0f 90       	pop	r0
    10b2:	0f 90       	pop	r0
    10b4:	0f 90       	pop	r0
    10b6:	df 91       	pop	r29
    10b8:	cf 91       	pop	r28
    10ba:	1f 91       	pop	r17
    10bc:	0f 91       	pop	r16
    10be:	ff 90       	pop	r15
    10c0:	ef 90       	pop	r14
    10c2:	df 90       	pop	r13
    10c4:	cf 90       	pop	r12
    10c6:	bf 90       	pop	r11
    10c8:	9f 90       	pop	r9
    10ca:	8f 90       	pop	r8
    10cc:	08 95       	ret

000010ce <prvResetNextTaskUnblockTime>:
    10ce:	e0 91 1d 05 	lds	r30, 0x051D	; 0x80051d <pxDelayedTaskList>
    10d2:	f0 91 1e 05 	lds	r31, 0x051E	; 0x80051e <pxDelayedTaskList+0x1>
    10d6:	80 81       	ld	r24, Z
    10d8:	81 11       	cpse	r24, r1
    10da:	07 c0       	rjmp	.+14     	; 0x10ea <prvResetNextTaskUnblockTime+0x1c>
    10dc:	8f ef       	ldi	r24, 0xFF	; 255
    10de:	9f ef       	ldi	r25, 0xFF	; 255
    10e0:	90 93 f5 04 	sts	0x04F5, r25	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    10e4:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <xNextTaskUnblockTime>
    10e8:	08 95       	ret
    10ea:	e0 91 1d 05 	lds	r30, 0x051D	; 0x80051d <pxDelayedTaskList>
    10ee:	f0 91 1e 05 	lds	r31, 0x051E	; 0x80051e <pxDelayedTaskList+0x1>
    10f2:	05 80       	ldd	r0, Z+5	; 0x05
    10f4:	f6 81       	ldd	r31, Z+6	; 0x06
    10f6:	e0 2d       	mov	r30, r0
    10f8:	06 80       	ldd	r0, Z+6	; 0x06
    10fa:	f7 81       	ldd	r31, Z+7	; 0x07
    10fc:	e0 2d       	mov	r30, r0
    10fe:	82 81       	ldd	r24, Z+2	; 0x02
    1100:	93 81       	ldd	r25, Z+3	; 0x03
    1102:	90 93 f5 04 	sts	0x04F5, r25	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    1106:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <xNextTaskUnblockTime>
    110a:	08 95       	ret

0000110c <prvDeleteTCB>:
    110c:	cf 93       	push	r28
    110e:	df 93       	push	r29
    1110:	ec 01       	movw	r28, r24
    1112:	8f 89       	ldd	r24, Y+23	; 0x17
    1114:	98 8d       	ldd	r25, Y+24	; 0x18
    1116:	0e 94 b0 03 	call	0x760	; 0x760 <vPortFree>
    111a:	ce 01       	movw	r24, r28
    111c:	0e 94 b0 03 	call	0x760	; 0x760 <vPortFree>
    1120:	df 91       	pop	r29
    1122:	cf 91       	pop	r28
    1124:	08 95       	ret

00001126 <prvInitialiseNewTask>:
    1126:	6f 92       	push	r6
    1128:	7f 92       	push	r7
    112a:	8f 92       	push	r8
    112c:	9f 92       	push	r9
    112e:	af 92       	push	r10
    1130:	bf 92       	push	r11
    1132:	cf 92       	push	r12
    1134:	df 92       	push	r13
    1136:	ef 92       	push	r14
    1138:	0f 93       	push	r16
    113a:	1f 93       	push	r17
    113c:	cf 93       	push	r28
    113e:	df 93       	push	r29
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
    1144:	4c 01       	movw	r8, r24
    1146:	f5 01       	movw	r30, r10
    1148:	87 89       	ldd	r24, Z+23	; 0x17
    114a:	90 8d       	ldd	r25, Z+24	; 0x18
    114c:	21 50       	subi	r18, 0x01	; 1
    114e:	31 09       	sbc	r19, r1
    1150:	3c 01       	movw	r6, r24
    1152:	62 0e       	add	r6, r18
    1154:	73 1e       	adc	r7, r19
    1156:	20 e0       	ldi	r18, 0x00	; 0
    1158:	0f c0       	rjmp	.+30     	; 0x1178 <prvInitialiseNewTask+0x52>
    115a:	82 2f       	mov	r24, r18
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	fb 01       	movw	r30, r22
    1160:	e8 0f       	add	r30, r24
    1162:	f9 1f       	adc	r31, r25
    1164:	30 81       	ld	r19, Z
    1166:	d5 01       	movw	r26, r10
    1168:	a8 0f       	add	r26, r24
    116a:	b9 1f       	adc	r27, r25
    116c:	59 96       	adiw	r26, 0x19	; 25
    116e:	3c 93       	st	X, r19
    1170:	80 81       	ld	r24, Z
    1172:	88 23       	and	r24, r24
    1174:	19 f0       	breq	.+6      	; 0x117c <prvInitialiseNewTask+0x56>
    1176:	2f 5f       	subi	r18, 0xFF	; 255
    1178:	28 30       	cpi	r18, 0x08	; 8
    117a:	78 f3       	brcs	.-34     	; 0x115a <prvInitialiseNewTask+0x34>
    117c:	f5 01       	movw	r30, r10
    117e:	10 a2       	std	Z+32, r1	; 0x20
    1180:	f6 e0       	ldi	r31, 0x06	; 6
    1182:	fe 15       	cp	r31, r14
    1184:	20 f4       	brcc	.+8      	; 0x118e <prvInitialiseNewTask+0x68>
    1186:	0f 2e       	mov	r0, r31
    1188:	f6 e0       	ldi	r31, 0x06	; 6
    118a:	ef 2e       	mov	r14, r31
    118c:	f0 2d       	mov	r31, r0
    118e:	f5 01       	movw	r30, r10
    1190:	e6 8a       	std	Z+22, r14	; 0x16
    1192:	e1 a2       	std	Z+33, r14	; 0x21
    1194:	12 a2       	std	Z+34, r1	; 0x22
    1196:	c5 01       	movw	r24, r10
    1198:	02 96       	adiw	r24, 0x02	; 2
    119a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <vListInitialiseItem>
    119e:	c5 01       	movw	r24, r10
    11a0:	0c 96       	adiw	r24, 0x0c	; 12
    11a2:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <vListInitialiseItem>
    11a6:	f5 01       	movw	r30, r10
    11a8:	b1 86       	std	Z+9, r11	; 0x09
    11aa:	a0 86       	std	Z+8, r10	; 0x08
    11ac:	87 e0       	ldi	r24, 0x07	; 7
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	8e 19       	sub	r24, r14
    11b2:	91 09       	sbc	r25, r1
    11b4:	95 87       	std	Z+13, r25	; 0x0d
    11b6:	84 87       	std	Z+12, r24	; 0x0c
    11b8:	b3 8a       	std	Z+19, r11	; 0x13
    11ba:	a2 8a       	std	Z+18, r10	; 0x12
    11bc:	13 a2       	std	Z+35, r1	; 0x23
    11be:	14 a2       	std	Z+36, r1	; 0x24
    11c0:	15 a2       	std	Z+37, r1	; 0x25
    11c2:	16 a2       	std	Z+38, r1	; 0x26
    11c4:	17 a2       	std	Z+39, r1	; 0x27
    11c6:	a8 01       	movw	r20, r16
    11c8:	b4 01       	movw	r22, r8
    11ca:	c3 01       	movw	r24, r6
    11cc:	0e 94 76 04 	call	0x8ec	; 0x8ec <pxPortInitialiseStack>
    11d0:	f5 01       	movw	r30, r10
    11d2:	91 83       	std	Z+1, r25	; 0x01
    11d4:	80 83       	st	Z, r24
    11d6:	c1 14       	cp	r12, r1
    11d8:	d1 04       	cpc	r13, r1
    11da:	19 f0       	breq	.+6      	; 0x11e2 <prvInitialiseNewTask+0xbc>
    11dc:	f6 01       	movw	r30, r12
    11de:	b1 82       	std	Z+1, r11	; 0x01
    11e0:	a0 82       	st	Z, r10
    11e2:	df 91       	pop	r29
    11e4:	cf 91       	pop	r28
    11e6:	1f 91       	pop	r17
    11e8:	0f 91       	pop	r16
    11ea:	ef 90       	pop	r14
    11ec:	df 90       	pop	r13
    11ee:	cf 90       	pop	r12
    11f0:	bf 90       	pop	r11
    11f2:	af 90       	pop	r10
    11f4:	9f 90       	pop	r9
    11f6:	8f 90       	pop	r8
    11f8:	7f 90       	pop	r7
    11fa:	6f 90       	pop	r6
    11fc:	08 95       	ret

000011fe <prvInitialiseTaskLists>:
    11fe:	cf 93       	push	r28
    1200:	c0 e0       	ldi	r28, 0x00	; 0
    1202:	10 c0       	rjmp	.+32     	; 0x1224 <prvInitialiseTaskLists+0x26>
    1204:	8c 2f       	mov	r24, r28
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	9c 01       	movw	r18, r24
    120a:	22 0f       	add	r18, r18
    120c:	33 1f       	adc	r19, r19
    120e:	22 0f       	add	r18, r18
    1210:	33 1f       	adc	r19, r19
    1212:	22 0f       	add	r18, r18
    1214:	33 1f       	adc	r19, r19
    1216:	82 0f       	add	r24, r18
    1218:	93 1f       	adc	r25, r19
    121a:	8f 5c       	subi	r24, 0xCF	; 207
    121c:	9a 4f       	sbci	r25, 0xFA	; 250
    121e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
    1222:	cf 5f       	subi	r28, 0xFF	; 255
    1224:	c7 30       	cpi	r28, 0x07	; 7
    1226:	70 f3       	brcs	.-36     	; 0x1204 <prvInitialiseTaskLists+0x6>
    1228:	88 e2       	ldi	r24, 0x28	; 40
    122a:	95 e0       	ldi	r25, 0x05	; 5
    122c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
    1230:	8f e1       	ldi	r24, 0x1F	; 31
    1232:	95 e0       	ldi	r25, 0x05	; 5
    1234:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
    1238:	82 e1       	ldi	r24, 0x12	; 18
    123a:	95 e0       	ldi	r25, 0x05	; 5
    123c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
    1240:	89 e0       	ldi	r24, 0x09	; 9
    1242:	95 e0       	ldi	r25, 0x05	; 5
    1244:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
    1248:	8f ef       	ldi	r24, 0xFF	; 255
    124a:	94 e0       	ldi	r25, 0x04	; 4
    124c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <vListInitialise>
    1250:	88 e2       	ldi	r24, 0x28	; 40
    1252:	95 e0       	ldi	r25, 0x05	; 5
    1254:	90 93 1e 05 	sts	0x051E, r25	; 0x80051e <pxDelayedTaskList+0x1>
    1258:	80 93 1d 05 	sts	0x051D, r24	; 0x80051d <pxDelayedTaskList>
    125c:	8f e1       	ldi	r24, 0x1F	; 31
    125e:	95 e0       	ldi	r25, 0x05	; 5
    1260:	90 93 1c 05 	sts	0x051C, r25	; 0x80051c <pxOverflowDelayedTaskList+0x1>
    1264:	80 93 1b 05 	sts	0x051B, r24	; 0x80051b <pxOverflowDelayedTaskList>
    1268:	cf 91       	pop	r28
    126a:	08 95       	ret

0000126c <prvAddNewTaskToReadyList>:
    126c:	cf 93       	push	r28
    126e:	df 93       	push	r29
    1270:	ec 01       	movw	r28, r24
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	f8 94       	cli
    1276:	0f 92       	push	r0
    1278:	80 91 fe 04 	lds	r24, 0x04FE	; 0x8004fe <uxCurrentNumberOfTasks>
    127c:	8f 5f       	subi	r24, 0xFF	; 255
    127e:	80 93 fe 04 	sts	0x04FE, r24	; 0x8004fe <uxCurrentNumberOfTasks>
    1282:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <pxCurrentTCB>
    1286:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    128a:	89 2b       	or	r24, r25
    128c:	59 f4       	brne	.+22     	; 0x12a4 <prvAddNewTaskToReadyList+0x38>
    128e:	d0 93 71 05 	sts	0x0571, r29	; 0x800571 <pxCurrentTCB+0x1>
    1292:	c0 93 70 05 	sts	0x0570, r28	; 0x800570 <pxCurrentTCB>
    1296:	80 91 fe 04 	lds	r24, 0x04FE	; 0x8004fe <uxCurrentNumberOfTasks>
    129a:	81 30       	cpi	r24, 0x01	; 1
    129c:	99 f4       	brne	.+38     	; 0x12c4 <prvAddNewTaskToReadyList+0x58>
    129e:	0e 94 ff 08 	call	0x11fe	; 0x11fe <prvInitialiseTaskLists>
    12a2:	10 c0       	rjmp	.+32     	; 0x12c4 <prvAddNewTaskToReadyList+0x58>
    12a4:	80 91 fa 04 	lds	r24, 0x04FA	; 0x8004fa <xSchedulerRunning>
    12a8:	81 11       	cpse	r24, r1
    12aa:	0c c0       	rjmp	.+24     	; 0x12c4 <prvAddNewTaskToReadyList+0x58>
    12ac:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    12b0:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    12b4:	96 89       	ldd	r25, Z+22	; 0x16
    12b6:	8e 89       	ldd	r24, Y+22	; 0x16
    12b8:	89 17       	cp	r24, r25
    12ba:	20 f0       	brcs	.+8      	; 0x12c4 <prvAddNewTaskToReadyList+0x58>
    12bc:	d0 93 71 05 	sts	0x0571, r29	; 0x800571 <pxCurrentTCB+0x1>
    12c0:	c0 93 70 05 	sts	0x0570, r28	; 0x800570 <pxCurrentTCB>
    12c4:	80 91 f6 04 	lds	r24, 0x04F6	; 0x8004f6 <uxTaskNumber>
    12c8:	8f 5f       	subi	r24, 0xFF	; 255
    12ca:	80 93 f6 04 	sts	0x04F6, r24	; 0x8004f6 <uxTaskNumber>
    12ce:	8e 89       	ldd	r24, Y+22	; 0x16
    12d0:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    12d4:	98 17       	cp	r25, r24
    12d6:	10 f4       	brcc	.+4      	; 0x12dc <prvAddNewTaskToReadyList+0x70>
    12d8:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <uxTopReadyPriority>
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	9c 01       	movw	r18, r24
    12e0:	22 0f       	add	r18, r18
    12e2:	33 1f       	adc	r19, r19
    12e4:	22 0f       	add	r18, r18
    12e6:	33 1f       	adc	r19, r19
    12e8:	22 0f       	add	r18, r18
    12ea:	33 1f       	adc	r19, r19
    12ec:	82 0f       	add	r24, r18
    12ee:	93 1f       	adc	r25, r19
    12f0:	be 01       	movw	r22, r28
    12f2:	6e 5f       	subi	r22, 0xFE	; 254
    12f4:	7f 4f       	sbci	r23, 0xFF	; 255
    12f6:	8f 5c       	subi	r24, 0xCF	; 207
    12f8:	9a 4f       	sbci	r25, 0xFA	; 250
    12fa:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    12fe:	0f 90       	pop	r0
    1300:	0f be       	out	0x3f, r0	; 63
    1302:	80 91 fa 04 	lds	r24, 0x04FA	; 0x8004fa <xSchedulerRunning>
    1306:	88 23       	and	r24, r24
    1308:	51 f0       	breq	.+20     	; 0x131e <prvAddNewTaskToReadyList+0xb2>
    130a:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    130e:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1312:	96 89       	ldd	r25, Z+22	; 0x16
    1314:	8e 89       	ldd	r24, Y+22	; 0x16
    1316:	98 17       	cp	r25, r24
    1318:	10 f4       	brcc	.+4      	; 0x131e <prvAddNewTaskToReadyList+0xb2>
    131a:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
    131e:	df 91       	pop	r29
    1320:	cf 91       	pop	r28
    1322:	08 95       	ret

00001324 <prvAddCurrentTaskToDelayedList>:
    1324:	ff 92       	push	r15
    1326:	0f 93       	push	r16
    1328:	1f 93       	push	r17
    132a:	cf 93       	push	r28
    132c:	df 93       	push	r29
    132e:	ec 01       	movw	r28, r24
    1330:	f6 2e       	mov	r15, r22
    1332:	00 91 fc 04 	lds	r16, 0x04FC	; 0x8004fc <xTickCount>
    1336:	10 91 fd 04 	lds	r17, 0x04FD	; 0x8004fd <xTickCount+0x1>
    133a:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <pxCurrentTCB>
    133e:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1342:	02 96       	adiw	r24, 0x02	; 2
    1344:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    1348:	cf 3f       	cpi	r28, 0xFF	; 255
    134a:	8f ef       	ldi	r24, 0xFF	; 255
    134c:	d8 07       	cpc	r29, r24
    134e:	69 f4       	brne	.+26     	; 0x136a <prvAddCurrentTaskToDelayedList+0x46>
    1350:	ff 20       	and	r15, r15
    1352:	59 f0       	breq	.+22     	; 0x136a <prvAddCurrentTaskToDelayedList+0x46>
    1354:	60 91 70 05 	lds	r22, 0x0570	; 0x800570 <pxCurrentTCB>
    1358:	70 91 71 05 	lds	r23, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    135c:	6e 5f       	subi	r22, 0xFE	; 254
    135e:	7f 4f       	sbci	r23, 0xFF	; 255
    1360:	8f ef       	ldi	r24, 0xFF	; 255
    1362:	94 e0       	ldi	r25, 0x04	; 4
    1364:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    1368:	2f c0       	rjmp	.+94     	; 0x13c8 <prvAddCurrentTaskToDelayedList+0xa4>
    136a:	c0 0f       	add	r28, r16
    136c:	d1 1f       	adc	r29, r17
    136e:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    1372:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1376:	d3 83       	std	Z+3, r29	; 0x03
    1378:	c2 83       	std	Z+2, r28	; 0x02
    137a:	c0 17       	cp	r28, r16
    137c:	d1 07       	cpc	r29, r17
    137e:	68 f4       	brcc	.+26     	; 0x139a <prvAddCurrentTaskToDelayedList+0x76>
    1380:	60 91 70 05 	lds	r22, 0x0570	; 0x800570 <pxCurrentTCB>
    1384:	70 91 71 05 	lds	r23, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1388:	80 91 1b 05 	lds	r24, 0x051B	; 0x80051b <pxOverflowDelayedTaskList>
    138c:	90 91 1c 05 	lds	r25, 0x051C	; 0x80051c <pxOverflowDelayedTaskList+0x1>
    1390:	6e 5f       	subi	r22, 0xFE	; 254
    1392:	7f 4f       	sbci	r23, 0xFF	; 255
    1394:	0e 94 16 04 	call	0x82c	; 0x82c <vListInsert>
    1398:	17 c0       	rjmp	.+46     	; 0x13c8 <prvAddCurrentTaskToDelayedList+0xa4>
    139a:	60 91 70 05 	lds	r22, 0x0570	; 0x800570 <pxCurrentTCB>
    139e:	70 91 71 05 	lds	r23, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    13a2:	80 91 1d 05 	lds	r24, 0x051D	; 0x80051d <pxDelayedTaskList>
    13a6:	90 91 1e 05 	lds	r25, 0x051E	; 0x80051e <pxDelayedTaskList+0x1>
    13aa:	6e 5f       	subi	r22, 0xFE	; 254
    13ac:	7f 4f       	sbci	r23, 0xFF	; 255
    13ae:	0e 94 16 04 	call	0x82c	; 0x82c <vListInsert>
    13b2:	80 91 f4 04 	lds	r24, 0x04F4	; 0x8004f4 <xNextTaskUnblockTime>
    13b6:	90 91 f5 04 	lds	r25, 0x04F5	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    13ba:	c8 17       	cp	r28, r24
    13bc:	d9 07       	cpc	r29, r25
    13be:	20 f4       	brcc	.+8      	; 0x13c8 <prvAddCurrentTaskToDelayedList+0xa4>
    13c0:	d0 93 f5 04 	sts	0x04F5, r29	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    13c4:	c0 93 f4 04 	sts	0x04F4, r28	; 0x8004f4 <xNextTaskUnblockTime>
    13c8:	df 91       	pop	r29
    13ca:	cf 91       	pop	r28
    13cc:	1f 91       	pop	r17
    13ce:	0f 91       	pop	r16
    13d0:	ff 90       	pop	r15
    13d2:	08 95       	ret

000013d4 <xTaskCreate>:
    13d4:	2f 92       	push	r2
    13d6:	3f 92       	push	r3
    13d8:	4f 92       	push	r4
    13da:	5f 92       	push	r5
    13dc:	6f 92       	push	r6
    13de:	7f 92       	push	r7
    13e0:	8f 92       	push	r8
    13e2:	9f 92       	push	r9
    13e4:	af 92       	push	r10
    13e6:	bf 92       	push	r11
    13e8:	cf 92       	push	r12
    13ea:	df 92       	push	r13
    13ec:	ef 92       	push	r14
    13ee:	ff 92       	push	r15
    13f0:	0f 93       	push	r16
    13f2:	1f 93       	push	r17
    13f4:	cf 93       	push	r28
    13f6:	df 93       	push	r29
    13f8:	3c 01       	movw	r6, r24
    13fa:	1b 01       	movw	r2, r22
    13fc:	5a 01       	movw	r10, r20
    13fe:	29 01       	movw	r4, r18
    1400:	ca 01       	movw	r24, r20
    1402:	0e 94 34 03 	call	0x668	; 0x668 <pvPortMalloc>
    1406:	6c 01       	movw	r12, r24
    1408:	89 2b       	or	r24, r25
    140a:	71 f0       	breq	.+28     	; 0x1428 <xTaskCreate+0x54>
    140c:	88 e2       	ldi	r24, 0x28	; 40
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	0e 94 34 03 	call	0x668	; 0x668 <pvPortMalloc>
    1414:	ec 01       	movw	r28, r24
    1416:	89 2b       	or	r24, r25
    1418:	19 f0       	breq	.+6      	; 0x1420 <xTaskCreate+0x4c>
    141a:	d8 8e       	std	Y+24, r13	; 0x18
    141c:	cf 8a       	std	Y+23, r12	; 0x17
    141e:	06 c0       	rjmp	.+12     	; 0x142c <xTaskCreate+0x58>
    1420:	c6 01       	movw	r24, r12
    1422:	0e 94 b0 03 	call	0x760	; 0x760 <vPortFree>
    1426:	02 c0       	rjmp	.+4      	; 0x142c <xTaskCreate+0x58>
    1428:	c0 e0       	ldi	r28, 0x00	; 0
    142a:	d0 e0       	ldi	r29, 0x00	; 0
    142c:	20 97       	sbiw	r28, 0x00	; 0
    142e:	91 f0       	breq	.+36     	; 0x1454 <xTaskCreate+0x80>
    1430:	95 01       	movw	r18, r10
    1432:	40 e0       	ldi	r20, 0x00	; 0
    1434:	50 e0       	ldi	r21, 0x00	; 0
    1436:	81 2c       	mov	r8, r1
    1438:	91 2c       	mov	r9, r1
    143a:	5e 01       	movw	r10, r28
    143c:	67 01       	movw	r12, r14
    143e:	e0 2e       	mov	r14, r16
    1440:	82 01       	movw	r16, r4
    1442:	b1 01       	movw	r22, r2
    1444:	c3 01       	movw	r24, r6
    1446:	0e 94 93 08 	call	0x1126	; 0x1126 <prvInitialiseNewTask>
    144a:	ce 01       	movw	r24, r28
    144c:	0e 94 36 09 	call	0x126c	; 0x126c <prvAddNewTaskToReadyList>
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	01 c0       	rjmp	.+2      	; 0x1456 <xTaskCreate+0x82>
    1454:	8f ef       	ldi	r24, 0xFF	; 255
    1456:	df 91       	pop	r29
    1458:	cf 91       	pop	r28
    145a:	1f 91       	pop	r17
    145c:	0f 91       	pop	r16
    145e:	ff 90       	pop	r15
    1460:	ef 90       	pop	r14
    1462:	df 90       	pop	r13
    1464:	cf 90       	pop	r12
    1466:	bf 90       	pop	r11
    1468:	af 90       	pop	r10
    146a:	9f 90       	pop	r9
    146c:	8f 90       	pop	r8
    146e:	7f 90       	pop	r7
    1470:	6f 90       	pop	r6
    1472:	5f 90       	pop	r5
    1474:	4f 90       	pop	r4
    1476:	3f 90       	pop	r3
    1478:	2f 90       	pop	r2
    147a:	08 95       	ret

0000147c <vTaskStartScheduler>:
    147c:	ef 92       	push	r14
    147e:	ff 92       	push	r15
    1480:	0f 93       	push	r16
    1482:	0f 2e       	mov	r0, r31
    1484:	f2 ef       	ldi	r31, 0xF2	; 242
    1486:	ef 2e       	mov	r14, r31
    1488:	f4 e0       	ldi	r31, 0x04	; 4
    148a:	ff 2e       	mov	r15, r31
    148c:	f0 2d       	mov	r31, r0
    148e:	00 e0       	ldi	r16, 0x00	; 0
    1490:	20 e0       	ldi	r18, 0x00	; 0
    1492:	30 e0       	ldi	r19, 0x00	; 0
    1494:	40 e5       	ldi	r20, 0x50	; 80
    1496:	50 e0       	ldi	r21, 0x00	; 0
    1498:	68 ef       	ldi	r22, 0xF8	; 248
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	8e ed       	ldi	r24, 0xDE	; 222
    149e:	9b e0       	ldi	r25, 0x0B	; 11
    14a0:	0e 94 ea 09 	call	0x13d4	; 0x13d4 <xTaskCreate>
    14a4:	81 30       	cpi	r24, 0x01	; 1
    14a6:	81 f4       	brne	.+32     	; 0x14c8 <vTaskStartScheduler+0x4c>
    14a8:	f8 94       	cli
    14aa:	8f ef       	ldi	r24, 0xFF	; 255
    14ac:	9f ef       	ldi	r25, 0xFF	; 255
    14ae:	90 93 f5 04 	sts	0x04F5, r25	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    14b2:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <xNextTaskUnblockTime>
    14b6:	81 e0       	ldi	r24, 0x01	; 1
    14b8:	80 93 fa 04 	sts	0x04FA, r24	; 0x8004fa <xSchedulerRunning>
    14bc:	10 92 fd 04 	sts	0x04FD, r1	; 0x8004fd <xTickCount+0x1>
    14c0:	10 92 fc 04 	sts	0x04FC, r1	; 0x8004fc <xTickCount>
    14c4:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <xPortStartScheduler>
    14c8:	0f 91       	pop	r16
    14ca:	ff 90       	pop	r15
    14cc:	ef 90       	pop	r14
    14ce:	08 95       	ret

000014d0 <vTaskSuspendAll>:
    14d0:	80 91 f1 04 	lds	r24, 0x04F1	; 0x8004f1 <uxSchedulerSuspended>
    14d4:	8f 5f       	subi	r24, 0xFF	; 255
    14d6:	80 93 f1 04 	sts	0x04F1, r24	; 0x8004f1 <uxSchedulerSuspended>
    14da:	08 95       	ret

000014dc <xTaskIncrementTick>:
    14dc:	df 92       	push	r13
    14de:	ef 92       	push	r14
    14e0:	ff 92       	push	r15
    14e2:	0f 93       	push	r16
    14e4:	1f 93       	push	r17
    14e6:	cf 93       	push	r28
    14e8:	df 93       	push	r29
    14ea:	80 91 f1 04 	lds	r24, 0x04F1	; 0x8004f1 <uxSchedulerSuspended>
    14ee:	81 11       	cpse	r24, r1
    14f0:	97 c0       	rjmp	.+302    	; 0x1620 <xTaskIncrementTick+0x144>
    14f2:	e0 90 fc 04 	lds	r14, 0x04FC	; 0x8004fc <xTickCount>
    14f6:	f0 90 fd 04 	lds	r15, 0x04FD	; 0x8004fd <xTickCount+0x1>
    14fa:	8f ef       	ldi	r24, 0xFF	; 255
    14fc:	e8 1a       	sub	r14, r24
    14fe:	f8 0a       	sbc	r15, r24
    1500:	f0 92 fd 04 	sts	0x04FD, r15	; 0x8004fd <xTickCount+0x1>
    1504:	e0 92 fc 04 	sts	0x04FC, r14	; 0x8004fc <xTickCount>
    1508:	e1 14       	cp	r14, r1
    150a:	f1 04       	cpc	r15, r1
    150c:	b9 f4       	brne	.+46     	; 0x153c <xTaskIncrementTick+0x60>
    150e:	80 91 1d 05 	lds	r24, 0x051D	; 0x80051d <pxDelayedTaskList>
    1512:	90 91 1e 05 	lds	r25, 0x051E	; 0x80051e <pxDelayedTaskList+0x1>
    1516:	20 91 1b 05 	lds	r18, 0x051B	; 0x80051b <pxOverflowDelayedTaskList>
    151a:	30 91 1c 05 	lds	r19, 0x051C	; 0x80051c <pxOverflowDelayedTaskList+0x1>
    151e:	30 93 1e 05 	sts	0x051E, r19	; 0x80051e <pxDelayedTaskList+0x1>
    1522:	20 93 1d 05 	sts	0x051D, r18	; 0x80051d <pxDelayedTaskList>
    1526:	90 93 1c 05 	sts	0x051C, r25	; 0x80051c <pxOverflowDelayedTaskList+0x1>
    152a:	80 93 1b 05 	sts	0x051B, r24	; 0x80051b <pxOverflowDelayedTaskList>
    152e:	80 91 f7 04 	lds	r24, 0x04F7	; 0x8004f7 <xNumOfOverflows>
    1532:	8f 5f       	subi	r24, 0xFF	; 255
    1534:	80 93 f7 04 	sts	0x04F7, r24	; 0x8004f7 <xNumOfOverflows>
    1538:	0e 94 67 08 	call	0x10ce	; 0x10ce <prvResetNextTaskUnblockTime>
    153c:	80 91 f4 04 	lds	r24, 0x04F4	; 0x8004f4 <xNextTaskUnblockTime>
    1540:	90 91 f5 04 	lds	r25, 0x04F5	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    1544:	e8 16       	cp	r14, r24
    1546:	f9 06       	cpc	r15, r25
    1548:	28 f4       	brcc	.+10     	; 0x1554 <xTaskIncrementTick+0x78>
    154a:	d1 2c       	mov	r13, r1
    154c:	53 c0       	rjmp	.+166    	; 0x15f4 <xTaskIncrementTick+0x118>
    154e:	dd 24       	eor	r13, r13
    1550:	d3 94       	inc	r13
    1552:	01 c0       	rjmp	.+2      	; 0x1556 <xTaskIncrementTick+0x7a>
    1554:	d1 2c       	mov	r13, r1
    1556:	e0 91 1d 05 	lds	r30, 0x051D	; 0x80051d <pxDelayedTaskList>
    155a:	f0 91 1e 05 	lds	r31, 0x051E	; 0x80051e <pxDelayedTaskList+0x1>
    155e:	80 81       	ld	r24, Z
    1560:	81 11       	cpse	r24, r1
    1562:	07 c0       	rjmp	.+14     	; 0x1572 <xTaskIncrementTick+0x96>
    1564:	8f ef       	ldi	r24, 0xFF	; 255
    1566:	9f ef       	ldi	r25, 0xFF	; 255
    1568:	90 93 f5 04 	sts	0x04F5, r25	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    156c:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <xNextTaskUnblockTime>
    1570:	41 c0       	rjmp	.+130    	; 0x15f4 <xTaskIncrementTick+0x118>
    1572:	e0 91 1d 05 	lds	r30, 0x051D	; 0x80051d <pxDelayedTaskList>
    1576:	f0 91 1e 05 	lds	r31, 0x051E	; 0x80051e <pxDelayedTaskList+0x1>
    157a:	05 80       	ldd	r0, Z+5	; 0x05
    157c:	f6 81       	ldd	r31, Z+6	; 0x06
    157e:	e0 2d       	mov	r30, r0
    1580:	c6 81       	ldd	r28, Z+6	; 0x06
    1582:	d7 81       	ldd	r29, Z+7	; 0x07
    1584:	8a 81       	ldd	r24, Y+2	; 0x02
    1586:	9b 81       	ldd	r25, Y+3	; 0x03
    1588:	e8 16       	cp	r14, r24
    158a:	f9 06       	cpc	r15, r25
    158c:	28 f4       	brcc	.+10     	; 0x1598 <xTaskIncrementTick+0xbc>
    158e:	90 93 f5 04 	sts	0x04F5, r25	; 0x8004f5 <xNextTaskUnblockTime+0x1>
    1592:	80 93 f4 04 	sts	0x04F4, r24	; 0x8004f4 <xNextTaskUnblockTime>
    1596:	2e c0       	rjmp	.+92     	; 0x15f4 <xTaskIncrementTick+0x118>
    1598:	8e 01       	movw	r16, r28
    159a:	0e 5f       	subi	r16, 0xFE	; 254
    159c:	1f 4f       	sbci	r17, 0xFF	; 255
    159e:	c8 01       	movw	r24, r16
    15a0:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    15a4:	8c 89       	ldd	r24, Y+20	; 0x14
    15a6:	9d 89       	ldd	r25, Y+21	; 0x15
    15a8:	89 2b       	or	r24, r25
    15aa:	21 f0       	breq	.+8      	; 0x15b4 <xTaskIncrementTick+0xd8>
    15ac:	ce 01       	movw	r24, r28
    15ae:	0c 96       	adiw	r24, 0x0c	; 12
    15b0:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    15b4:	8e 89       	ldd	r24, Y+22	; 0x16
    15b6:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    15ba:	98 17       	cp	r25, r24
    15bc:	10 f4       	brcc	.+4      	; 0x15c2 <xTaskIncrementTick+0xe6>
    15be:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <uxTopReadyPriority>
    15c2:	90 e0       	ldi	r25, 0x00	; 0
    15c4:	9c 01       	movw	r18, r24
    15c6:	22 0f       	add	r18, r18
    15c8:	33 1f       	adc	r19, r19
    15ca:	22 0f       	add	r18, r18
    15cc:	33 1f       	adc	r19, r19
    15ce:	22 0f       	add	r18, r18
    15d0:	33 1f       	adc	r19, r19
    15d2:	82 0f       	add	r24, r18
    15d4:	93 1f       	adc	r25, r19
    15d6:	b8 01       	movw	r22, r16
    15d8:	8f 5c       	subi	r24, 0xCF	; 207
    15da:	9a 4f       	sbci	r25, 0xFA	; 250
    15dc:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    15e0:	9e 89       	ldd	r25, Y+22	; 0x16
    15e2:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    15e6:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    15ea:	86 89       	ldd	r24, Z+22	; 0x16
    15ec:	98 17       	cp	r25, r24
    15ee:	08 f0       	brcs	.+2      	; 0x15f2 <xTaskIncrementTick+0x116>
    15f0:	ae cf       	rjmp	.-164    	; 0x154e <xTaskIncrementTick+0x72>
    15f2:	b1 cf       	rjmp	.-158    	; 0x1556 <xTaskIncrementTick+0x7a>
    15f4:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    15f8:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    15fc:	86 89       	ldd	r24, Z+22	; 0x16
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	fc 01       	movw	r30, r24
    1602:	ee 0f       	add	r30, r30
    1604:	ff 1f       	adc	r31, r31
    1606:	ee 0f       	add	r30, r30
    1608:	ff 1f       	adc	r31, r31
    160a:	ee 0f       	add	r30, r30
    160c:	ff 1f       	adc	r31, r31
    160e:	8e 0f       	add	r24, r30
    1610:	9f 1f       	adc	r25, r31
    1612:	fc 01       	movw	r30, r24
    1614:	ef 5c       	subi	r30, 0xCF	; 207
    1616:	fa 4f       	sbci	r31, 0xFA	; 250
    1618:	80 81       	ld	r24, Z
    161a:	82 30       	cpi	r24, 0x02	; 2
    161c:	40 f4       	brcc	.+16     	; 0x162e <xTaskIncrementTick+0x152>
    161e:	09 c0       	rjmp	.+18     	; 0x1632 <xTaskIncrementTick+0x156>
    1620:	80 91 f9 04 	lds	r24, 0x04F9	; 0x8004f9 <uxPendedTicks>
    1624:	8f 5f       	subi	r24, 0xFF	; 255
    1626:	80 93 f9 04 	sts	0x04F9, r24	; 0x8004f9 <uxPendedTicks>
    162a:	d1 2c       	mov	r13, r1
    162c:	02 c0       	rjmp	.+4      	; 0x1632 <xTaskIncrementTick+0x156>
    162e:	dd 24       	eor	r13, r13
    1630:	d3 94       	inc	r13
    1632:	80 91 f8 04 	lds	r24, 0x04F8	; 0x8004f8 <xYieldPending>
    1636:	88 23       	and	r24, r24
    1638:	11 f0       	breq	.+4      	; 0x163e <xTaskIncrementTick+0x162>
    163a:	dd 24       	eor	r13, r13
    163c:	d3 94       	inc	r13
    163e:	8d 2d       	mov	r24, r13
    1640:	df 91       	pop	r29
    1642:	cf 91       	pop	r28
    1644:	1f 91       	pop	r17
    1646:	0f 91       	pop	r16
    1648:	ff 90       	pop	r15
    164a:	ef 90       	pop	r14
    164c:	df 90       	pop	r13
    164e:	08 95       	ret

00001650 <xTaskResumeAll>:
    1650:	0f 93       	push	r16
    1652:	1f 93       	push	r17
    1654:	cf 93       	push	r28
    1656:	df 93       	push	r29
    1658:	0f b6       	in	r0, 0x3f	; 63
    165a:	f8 94       	cli
    165c:	0f 92       	push	r0
    165e:	80 91 f1 04 	lds	r24, 0x04F1	; 0x8004f1 <uxSchedulerSuspended>
    1662:	81 50       	subi	r24, 0x01	; 1
    1664:	80 93 f1 04 	sts	0x04F1, r24	; 0x8004f1 <uxSchedulerSuspended>
    1668:	80 91 f1 04 	lds	r24, 0x04F1	; 0x8004f1 <uxSchedulerSuspended>
    166c:	81 11       	cpse	r24, r1
    166e:	58 c0       	rjmp	.+176    	; 0x1720 <xTaskResumeAll+0xd0>
    1670:	80 91 fe 04 	lds	r24, 0x04FE	; 0x8004fe <uxCurrentNumberOfTasks>
    1674:	81 11       	cpse	r24, r1
    1676:	33 c0       	rjmp	.+102    	; 0x16de <xTaskResumeAll+0x8e>
    1678:	56 c0       	rjmp	.+172    	; 0x1726 <xTaskResumeAll+0xd6>
    167a:	e0 91 17 05 	lds	r30, 0x0517	; 0x800517 <xPendingReadyList+0x5>
    167e:	f0 91 18 05 	lds	r31, 0x0518	; 0x800518 <xPendingReadyList+0x6>
    1682:	c6 81       	ldd	r28, Z+6	; 0x06
    1684:	d7 81       	ldd	r29, Z+7	; 0x07
    1686:	ce 01       	movw	r24, r28
    1688:	0c 96       	adiw	r24, 0x0c	; 12
    168a:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    168e:	8e 01       	movw	r16, r28
    1690:	0e 5f       	subi	r16, 0xFE	; 254
    1692:	1f 4f       	sbci	r17, 0xFF	; 255
    1694:	c8 01       	movw	r24, r16
    1696:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    169a:	8e 89       	ldd	r24, Y+22	; 0x16
    169c:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    16a0:	98 17       	cp	r25, r24
    16a2:	10 f4       	brcc	.+4      	; 0x16a8 <xTaskResumeAll+0x58>
    16a4:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <uxTopReadyPriority>
    16a8:	90 e0       	ldi	r25, 0x00	; 0
    16aa:	9c 01       	movw	r18, r24
    16ac:	22 0f       	add	r18, r18
    16ae:	33 1f       	adc	r19, r19
    16b0:	22 0f       	add	r18, r18
    16b2:	33 1f       	adc	r19, r19
    16b4:	22 0f       	add	r18, r18
    16b6:	33 1f       	adc	r19, r19
    16b8:	82 0f       	add	r24, r18
    16ba:	93 1f       	adc	r25, r19
    16bc:	b8 01       	movw	r22, r16
    16be:	8f 5c       	subi	r24, 0xCF	; 207
    16c0:	9a 4f       	sbci	r25, 0xFA	; 250
    16c2:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    16c6:	9e 89       	ldd	r25, Y+22	; 0x16
    16c8:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    16cc:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    16d0:	86 89       	ldd	r24, Z+22	; 0x16
    16d2:	98 17       	cp	r25, r24
    16d4:	30 f0       	brcs	.+12     	; 0x16e2 <xTaskResumeAll+0x92>
    16d6:	81 e0       	ldi	r24, 0x01	; 1
    16d8:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <xYieldPending>
    16dc:	02 c0       	rjmp	.+4      	; 0x16e2 <xTaskResumeAll+0x92>
    16de:	c0 e0       	ldi	r28, 0x00	; 0
    16e0:	d0 e0       	ldi	r29, 0x00	; 0
    16e2:	80 91 12 05 	lds	r24, 0x0512	; 0x800512 <xPendingReadyList>
    16e6:	81 11       	cpse	r24, r1
    16e8:	c8 cf       	rjmp	.-112    	; 0x167a <xTaskResumeAll+0x2a>
    16ea:	cd 2b       	or	r28, r29
    16ec:	11 f0       	breq	.+4      	; 0x16f2 <xTaskResumeAll+0xa2>
    16ee:	0e 94 67 08 	call	0x10ce	; 0x10ce <prvResetNextTaskUnblockTime>
    16f2:	c0 91 f9 04 	lds	r28, 0x04F9	; 0x8004f9 <uxPendedTicks>
    16f6:	cc 23       	and	r28, r28
    16f8:	59 f0       	breq	.+22     	; 0x1710 <xTaskResumeAll+0xc0>
    16fa:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <xTaskIncrementTick>
    16fe:	88 23       	and	r24, r24
    1700:	19 f0       	breq	.+6      	; 0x1708 <xTaskResumeAll+0xb8>
    1702:	81 e0       	ldi	r24, 0x01	; 1
    1704:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <xYieldPending>
    1708:	c1 50       	subi	r28, 0x01	; 1
    170a:	b9 f7       	brne	.-18     	; 0x16fa <xTaskResumeAll+0xaa>
    170c:	10 92 f9 04 	sts	0x04F9, r1	; 0x8004f9 <uxPendedTicks>
    1710:	80 91 f8 04 	lds	r24, 0x04F8	; 0x8004f8 <xYieldPending>
    1714:	88 23       	and	r24, r24
    1716:	31 f0       	breq	.+12     	; 0x1724 <xTaskResumeAll+0xd4>
    1718:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
    171c:	81 e0       	ldi	r24, 0x01	; 1
    171e:	03 c0       	rjmp	.+6      	; 0x1726 <xTaskResumeAll+0xd6>
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	01 c0       	rjmp	.+2      	; 0x1726 <xTaskResumeAll+0xd6>
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	0f 90       	pop	r0
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	df 91       	pop	r29
    172c:	cf 91       	pop	r28
    172e:	1f 91       	pop	r17
    1730:	0f 91       	pop	r16
    1732:	08 95       	ret

00001734 <vTaskDelay>:
    1734:	cf 93       	push	r28
    1736:	df 93       	push	r29
    1738:	ec 01       	movw	r28, r24
    173a:	89 2b       	or	r24, r25
    173c:	49 f0       	breq	.+18     	; 0x1750 <vTaskDelay+0x1c>
    173e:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskSuspendAll>
    1742:	60 e0       	ldi	r22, 0x00	; 0
    1744:	ce 01       	movw	r24, r28
    1746:	0e 94 92 09 	call	0x1324	; 0x1324 <prvAddCurrentTaskToDelayedList>
    174a:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
    174e:	01 c0       	rjmp	.+2      	; 0x1752 <vTaskDelay+0x1e>
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	81 11       	cpse	r24, r1
    1754:	02 c0       	rjmp	.+4      	; 0x175a <vTaskDelay+0x26>
    1756:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
    175a:	df 91       	pop	r29
    175c:	cf 91       	pop	r28
    175e:	08 95       	ret

00001760 <prvCheckTasksWaitingTermination>:
    1760:	cf 93       	push	r28
    1762:	df 93       	push	r29
    1764:	24 c0       	rjmp	.+72     	; 0x17ae <prvCheckTasksWaitingTermination+0x4e>
    1766:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <vTaskSuspendAll>
    176a:	c0 91 09 05 	lds	r28, 0x0509	; 0x800509 <xTasksWaitingTermination>
    176e:	0e 94 28 0b 	call	0x1650	; 0x1650 <xTaskResumeAll>
    1772:	cc 23       	and	r28, r28
    1774:	e1 f0       	breq	.+56     	; 0x17ae <prvCheckTasksWaitingTermination+0x4e>
    1776:	0f b6       	in	r0, 0x3f	; 63
    1778:	f8 94       	cli
    177a:	0f 92       	push	r0
    177c:	e0 91 0e 05 	lds	r30, 0x050E	; 0x80050e <xTasksWaitingTermination+0x5>
    1780:	f0 91 0f 05 	lds	r31, 0x050F	; 0x80050f <xTasksWaitingTermination+0x6>
    1784:	c6 81       	ldd	r28, Z+6	; 0x06
    1786:	d7 81       	ldd	r29, Z+7	; 0x07
    1788:	ce 01       	movw	r24, r28
    178a:	02 96       	adiw	r24, 0x02	; 2
    178c:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    1790:	80 91 fe 04 	lds	r24, 0x04FE	; 0x8004fe <uxCurrentNumberOfTasks>
    1794:	81 50       	subi	r24, 0x01	; 1
    1796:	80 93 fe 04 	sts	0x04FE, r24	; 0x8004fe <uxCurrentNumberOfTasks>
    179a:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <uxDeletedTasksWaitingCleanUp>
    179e:	81 50       	subi	r24, 0x01	; 1
    17a0:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <uxDeletedTasksWaitingCleanUp>
    17a4:	0f 90       	pop	r0
    17a6:	0f be       	out	0x3f, r0	; 63
    17a8:	ce 01       	movw	r24, r28
    17aa:	0e 94 86 08 	call	0x110c	; 0x110c <prvDeleteTCB>
    17ae:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <uxDeletedTasksWaitingCleanUp>
    17b2:	81 11       	cpse	r24, r1
    17b4:	d8 cf       	rjmp	.-80     	; 0x1766 <prvCheckTasksWaitingTermination+0x6>
    17b6:	df 91       	pop	r29
    17b8:	cf 91       	pop	r28
    17ba:	08 95       	ret

000017bc <prvIdleTask>:
    17bc:	0e 94 b0 0b 	call	0x1760	; 0x1760 <prvCheckTasksWaitingTermination>
    17c0:	fd cf       	rjmp	.-6      	; 0x17bc <prvIdleTask>

000017c2 <vTaskSwitchContext>:
    17c2:	80 91 f1 04 	lds	r24, 0x04F1	; 0x8004f1 <uxSchedulerSuspended>
    17c6:	88 23       	and	r24, r24
    17c8:	21 f0       	breq	.+8      	; 0x17d2 <vTaskSwitchContext+0x10>
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <xYieldPending>
    17d0:	08 95       	ret
    17d2:	10 92 f8 04 	sts	0x04F8, r1	; 0x8004f8 <xYieldPending>
    17d6:	20 91 fb 04 	lds	r18, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    17da:	01 c0       	rjmp	.+2      	; 0x17de <vTaskSwitchContext+0x1c>
    17dc:	21 50       	subi	r18, 0x01	; 1
    17de:	82 2f       	mov	r24, r18
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	fc 01       	movw	r30, r24
    17e4:	ee 0f       	add	r30, r30
    17e6:	ff 1f       	adc	r31, r31
    17e8:	ee 0f       	add	r30, r30
    17ea:	ff 1f       	adc	r31, r31
    17ec:	ee 0f       	add	r30, r30
    17ee:	ff 1f       	adc	r31, r31
    17f0:	e8 0f       	add	r30, r24
    17f2:	f9 1f       	adc	r31, r25
    17f4:	ef 5c       	subi	r30, 0xCF	; 207
    17f6:	fa 4f       	sbci	r31, 0xFA	; 250
    17f8:	30 81       	ld	r19, Z
    17fa:	33 23       	and	r19, r19
    17fc:	79 f3       	breq	.-34     	; 0x17dc <vTaskSwitchContext+0x1a>
    17fe:	ac 01       	movw	r20, r24
    1800:	44 0f       	add	r20, r20
    1802:	55 1f       	adc	r21, r21
    1804:	44 0f       	add	r20, r20
    1806:	55 1f       	adc	r21, r21
    1808:	44 0f       	add	r20, r20
    180a:	55 1f       	adc	r21, r21
    180c:	48 0f       	add	r20, r24
    180e:	59 1f       	adc	r21, r25
    1810:	df 01       	movw	r26, r30
    1812:	01 80       	ldd	r0, Z+1	; 0x01
    1814:	f2 81       	ldd	r31, Z+2	; 0x02
    1816:	e0 2d       	mov	r30, r0
    1818:	02 80       	ldd	r0, Z+2	; 0x02
    181a:	f3 81       	ldd	r31, Z+3	; 0x03
    181c:	e0 2d       	mov	r30, r0
    181e:	12 96       	adiw	r26, 0x02	; 2
    1820:	fc 93       	st	X, r31
    1822:	ee 93       	st	-X, r30
    1824:	11 97       	sbiw	r26, 0x01	; 1
    1826:	4c 5c       	subi	r20, 0xCC	; 204
    1828:	5a 4f       	sbci	r21, 0xFA	; 250
    182a:	e4 17       	cp	r30, r20
    182c:	f5 07       	cpc	r31, r21
    182e:	29 f4       	brne	.+10     	; 0x183a <vTaskSwitchContext+0x78>
    1830:	42 81       	ldd	r20, Z+2	; 0x02
    1832:	53 81       	ldd	r21, Z+3	; 0x03
    1834:	fd 01       	movw	r30, r26
    1836:	52 83       	std	Z+2, r21	; 0x02
    1838:	41 83       	std	Z+1, r20	; 0x01
    183a:	fc 01       	movw	r30, r24
    183c:	ee 0f       	add	r30, r30
    183e:	ff 1f       	adc	r31, r31
    1840:	ee 0f       	add	r30, r30
    1842:	ff 1f       	adc	r31, r31
    1844:	ee 0f       	add	r30, r30
    1846:	ff 1f       	adc	r31, r31
    1848:	8e 0f       	add	r24, r30
    184a:	9f 1f       	adc	r25, r31
    184c:	fc 01       	movw	r30, r24
    184e:	ef 5c       	subi	r30, 0xCF	; 207
    1850:	fa 4f       	sbci	r31, 0xFA	; 250
    1852:	01 80       	ldd	r0, Z+1	; 0x01
    1854:	f2 81       	ldd	r31, Z+2	; 0x02
    1856:	e0 2d       	mov	r30, r0
    1858:	86 81       	ldd	r24, Z+6	; 0x06
    185a:	97 81       	ldd	r25, Z+7	; 0x07
    185c:	90 93 71 05 	sts	0x0571, r25	; 0x800571 <pxCurrentTCB+0x1>
    1860:	80 93 70 05 	sts	0x0570, r24	; 0x800570 <pxCurrentTCB>
    1864:	20 93 fb 04 	sts	0x04FB, r18	; 0x8004fb <uxTopReadyPriority>
    1868:	08 95       	ret

0000186a <vTaskSuspend>:
    186a:	0f 93       	push	r16
    186c:	1f 93       	push	r17
    186e:	cf 93       	push	r28
    1870:	df 93       	push	r29
    1872:	ec 01       	movw	r28, r24
    1874:	0f b6       	in	r0, 0x3f	; 63
    1876:	f8 94       	cli
    1878:	0f 92       	push	r0
    187a:	89 2b       	or	r24, r25
    187c:	21 f4       	brne	.+8      	; 0x1886 <vTaskSuspend+0x1c>
    187e:	c0 91 70 05 	lds	r28, 0x0570	; 0x800570 <pxCurrentTCB>
    1882:	d0 91 71 05 	lds	r29, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1886:	8e 01       	movw	r16, r28
    1888:	0e 5f       	subi	r16, 0xFE	; 254
    188a:	1f 4f       	sbci	r17, 0xFF	; 255
    188c:	c8 01       	movw	r24, r16
    188e:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    1892:	8c 89       	ldd	r24, Y+20	; 0x14
    1894:	9d 89       	ldd	r25, Y+21	; 0x15
    1896:	89 2b       	or	r24, r25
    1898:	21 f0       	breq	.+8      	; 0x18a2 <vTaskSuspend+0x38>
    189a:	ce 01       	movw	r24, r28
    189c:	0c 96       	adiw	r24, 0x0c	; 12
    189e:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    18a2:	b8 01       	movw	r22, r16
    18a4:	8f ef       	ldi	r24, 0xFF	; 255
    18a6:	94 e0       	ldi	r25, 0x04	; 4
    18a8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    18ac:	0f 90       	pop	r0
    18ae:	0f be       	out	0x3f, r0	; 63
    18b0:	80 91 fa 04 	lds	r24, 0x04FA	; 0x8004fa <xSchedulerRunning>
    18b4:	88 23       	and	r24, r24
    18b6:	39 f0       	breq	.+14     	; 0x18c6 <vTaskSuspend+0x5c>
    18b8:	0f b6       	in	r0, 0x3f	; 63
    18ba:	f8 94       	cli
    18bc:	0f 92       	push	r0
    18be:	0e 94 67 08 	call	0x10ce	; 0x10ce <prvResetNextTaskUnblockTime>
    18c2:	0f 90       	pop	r0
    18c4:	0f be       	out	0x3f, r0	; 63
    18c6:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <pxCurrentTCB>
    18ca:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    18ce:	c8 17       	cp	r28, r24
    18d0:	d9 07       	cpc	r29, r25
    18d2:	a1 f4       	brne	.+40     	; 0x18fc <vTaskSuspend+0x92>
    18d4:	80 91 fa 04 	lds	r24, 0x04FA	; 0x8004fa <xSchedulerRunning>
    18d8:	88 23       	and	r24, r24
    18da:	19 f0       	breq	.+6      	; 0x18e2 <vTaskSuspend+0x78>
    18dc:	0e 94 11 05 	call	0xa22	; 0xa22 <vPortYield>
    18e0:	0d c0       	rjmp	.+26     	; 0x18fc <vTaskSuspend+0x92>
    18e2:	90 91 ff 04 	lds	r25, 0x04FF	; 0x8004ff <xSuspendedTaskList>
    18e6:	80 91 fe 04 	lds	r24, 0x04FE	; 0x8004fe <uxCurrentNumberOfTasks>
    18ea:	98 13       	cpse	r25, r24
    18ec:	05 c0       	rjmp	.+10     	; 0x18f8 <vTaskSuspend+0x8e>
    18ee:	10 92 71 05 	sts	0x0571, r1	; 0x800571 <pxCurrentTCB+0x1>
    18f2:	10 92 70 05 	sts	0x0570, r1	; 0x800570 <pxCurrentTCB>
    18f6:	02 c0       	rjmp	.+4      	; 0x18fc <vTaskSuspend+0x92>
    18f8:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <vTaskSwitchContext>
    18fc:	df 91       	pop	r29
    18fe:	cf 91       	pop	r28
    1900:	1f 91       	pop	r17
    1902:	0f 91       	pop	r16
    1904:	08 95       	ret

00001906 <vTaskPlaceOnEventList>:
    1906:	cf 93       	push	r28
    1908:	df 93       	push	r29
    190a:	eb 01       	movw	r28, r22
    190c:	60 91 70 05 	lds	r22, 0x0570	; 0x800570 <pxCurrentTCB>
    1910:	70 91 71 05 	lds	r23, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1914:	64 5f       	subi	r22, 0xF4	; 244
    1916:	7f 4f       	sbci	r23, 0xFF	; 255
    1918:	0e 94 16 04 	call	0x82c	; 0x82c <vListInsert>
    191c:	61 e0       	ldi	r22, 0x01	; 1
    191e:	ce 01       	movw	r24, r28
    1920:	0e 94 92 09 	call	0x1324	; 0x1324 <prvAddCurrentTaskToDelayedList>
    1924:	df 91       	pop	r29
    1926:	cf 91       	pop	r28
    1928:	08 95       	ret

0000192a <xTaskRemoveFromEventList>:
    192a:	0f 93       	push	r16
    192c:	1f 93       	push	r17
    192e:	cf 93       	push	r28
    1930:	df 93       	push	r29
    1932:	dc 01       	movw	r26, r24
    1934:	15 96       	adiw	r26, 0x05	; 5
    1936:	ed 91       	ld	r30, X+
    1938:	fc 91       	ld	r31, X
    193a:	16 97       	sbiw	r26, 0x06	; 6
    193c:	c6 81       	ldd	r28, Z+6	; 0x06
    193e:	d7 81       	ldd	r29, Z+7	; 0x07
    1940:	8e 01       	movw	r16, r28
    1942:	04 5f       	subi	r16, 0xF4	; 244
    1944:	1f 4f       	sbci	r17, 0xFF	; 255
    1946:	c8 01       	movw	r24, r16
    1948:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    194c:	80 91 f1 04 	lds	r24, 0x04F1	; 0x8004f1 <uxSchedulerSuspended>
    1950:	81 11       	cpse	r24, r1
    1952:	1c c0       	rjmp	.+56     	; 0x198c <xTaskRemoveFromEventList+0x62>
    1954:	0a 50       	subi	r16, 0x0A	; 10
    1956:	11 09       	sbc	r17, r1
    1958:	c8 01       	movw	r24, r16
    195a:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    195e:	8e 89       	ldd	r24, Y+22	; 0x16
    1960:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    1964:	98 17       	cp	r25, r24
    1966:	10 f4       	brcc	.+4      	; 0x196c <xTaskRemoveFromEventList+0x42>
    1968:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <uxTopReadyPriority>
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	9c 01       	movw	r18, r24
    1970:	22 0f       	add	r18, r18
    1972:	33 1f       	adc	r19, r19
    1974:	22 0f       	add	r18, r18
    1976:	33 1f       	adc	r19, r19
    1978:	22 0f       	add	r18, r18
    197a:	33 1f       	adc	r19, r19
    197c:	82 0f       	add	r24, r18
    197e:	93 1f       	adc	r25, r19
    1980:	b8 01       	movw	r22, r16
    1982:	8f 5c       	subi	r24, 0xCF	; 207
    1984:	9a 4f       	sbci	r25, 0xFA	; 250
    1986:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    198a:	05 c0       	rjmp	.+10     	; 0x1996 <xTaskRemoveFromEventList+0x6c>
    198c:	b8 01       	movw	r22, r16
    198e:	82 e1       	ldi	r24, 0x12	; 18
    1990:	95 e0       	ldi	r25, 0x05	; 5
    1992:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    1996:	9e 89       	ldd	r25, Y+22	; 0x16
    1998:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    199c:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    19a0:	86 89       	ldd	r24, Z+22	; 0x16
    19a2:	89 17       	cp	r24, r25
    19a4:	20 f4       	brcc	.+8      	; 0x19ae <xTaskRemoveFromEventList+0x84>
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <xYieldPending>
    19ac:	01 c0       	rjmp	.+2      	; 0x19b0 <xTaskRemoveFromEventList+0x86>
    19ae:	80 e0       	ldi	r24, 0x00	; 0
    19b0:	df 91       	pop	r29
    19b2:	cf 91       	pop	r28
    19b4:	1f 91       	pop	r17
    19b6:	0f 91       	pop	r16
    19b8:	08 95       	ret

000019ba <vTaskSetTimeOutState>:
    19ba:	20 91 f7 04 	lds	r18, 0x04F7	; 0x8004f7 <xNumOfOverflows>
    19be:	fc 01       	movw	r30, r24
    19c0:	20 83       	st	Z, r18
    19c2:	20 91 fc 04 	lds	r18, 0x04FC	; 0x8004fc <xTickCount>
    19c6:	30 91 fd 04 	lds	r19, 0x04FD	; 0x8004fd <xTickCount+0x1>
    19ca:	32 83       	std	Z+2, r19	; 0x02
    19cc:	21 83       	std	Z+1, r18	; 0x01
    19ce:	08 95       	ret

000019d0 <xTaskCheckForTimeOut>:
    19d0:	0f b6       	in	r0, 0x3f	; 63
    19d2:	f8 94       	cli
    19d4:	0f 92       	push	r0
    19d6:	40 91 fc 04 	lds	r20, 0x04FC	; 0x8004fc <xTickCount>
    19da:	50 91 fd 04 	lds	r21, 0x04FD	; 0x8004fd <xTickCount+0x1>
    19de:	db 01       	movw	r26, r22
    19e0:	2d 91       	ld	r18, X+
    19e2:	3c 91       	ld	r19, X
    19e4:	2f 3f       	cpi	r18, 0xFF	; 255
    19e6:	bf ef       	ldi	r27, 0xFF	; 255
    19e8:	3b 07       	cpc	r19, r27
    19ea:	19 f1       	breq	.+70     	; 0x1a32 <xTaskCheckForTimeOut+0x62>
    19ec:	dc 01       	movw	r26, r24
    19ee:	fc 91       	ld	r31, X
    19f0:	e0 91 f7 04 	lds	r30, 0x04F7	; 0x8004f7 <xNumOfOverflows>
    19f4:	fe 17       	cp	r31, r30
    19f6:	39 f0       	breq	.+14     	; 0x1a06 <xTaskCheckForTimeOut+0x36>
    19f8:	11 96       	adiw	r26, 0x01	; 1
    19fa:	ed 91       	ld	r30, X+
    19fc:	fc 91       	ld	r31, X
    19fe:	12 97       	sbiw	r26, 0x02	; 2
    1a00:	4e 17       	cp	r20, r30
    1a02:	5f 07       	cpc	r21, r31
    1a04:	c0 f4       	brcc	.+48     	; 0x1a36 <xTaskCheckForTimeOut+0x66>
    1a06:	dc 01       	movw	r26, r24
    1a08:	11 96       	adiw	r26, 0x01	; 1
    1a0a:	ed 91       	ld	r30, X+
    1a0c:	fc 91       	ld	r31, X
    1a0e:	12 97       	sbiw	r26, 0x02	; 2
    1a10:	da 01       	movw	r26, r20
    1a12:	ae 1b       	sub	r26, r30
    1a14:	bf 0b       	sbc	r27, r31
    1a16:	a2 17       	cp	r26, r18
    1a18:	b3 07       	cpc	r27, r19
    1a1a:	78 f4       	brcc	.+30     	; 0x1a3a <xTaskCheckForTimeOut+0x6a>
    1a1c:	db 01       	movw	r26, r22
    1a1e:	e4 1b       	sub	r30, r20
    1a20:	f5 0b       	sbc	r31, r21
    1a22:	2e 0f       	add	r18, r30
    1a24:	3f 1f       	adc	r19, r31
    1a26:	2d 93       	st	X+, r18
    1a28:	3c 93       	st	X, r19
    1a2a:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <vTaskSetTimeOutState>
    1a2e:	80 e0       	ldi	r24, 0x00	; 0
    1a30:	05 c0       	rjmp	.+10     	; 0x1a3c <xTaskCheckForTimeOut+0x6c>
    1a32:	80 e0       	ldi	r24, 0x00	; 0
    1a34:	03 c0       	rjmp	.+6      	; 0x1a3c <xTaskCheckForTimeOut+0x6c>
    1a36:	81 e0       	ldi	r24, 0x01	; 1
    1a38:	01 c0       	rjmp	.+2      	; 0x1a3c <xTaskCheckForTimeOut+0x6c>
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	0f 90       	pop	r0
    1a3e:	0f be       	out	0x3f, r0	; 63
    1a40:	08 95       	ret

00001a42 <vTaskMissedYield>:
    1a42:	81 e0       	ldi	r24, 0x01	; 1
    1a44:	80 93 f8 04 	sts	0x04F8, r24	; 0x8004f8 <xYieldPending>
    1a48:	08 95       	ret

00001a4a <vTaskPriorityInherit>:
    1a4a:	0f 93       	push	r16
    1a4c:	1f 93       	push	r17
    1a4e:	cf 93       	push	r28
    1a50:	df 93       	push	r29
    1a52:	fc 01       	movw	r30, r24
    1a54:	89 2b       	or	r24, r25
    1a56:	09 f4       	brne	.+2      	; 0x1a5a <vTaskPriorityInherit+0x10>
    1a58:	55 c0       	rjmp	.+170    	; 0x1b04 <vTaskPriorityInherit+0xba>
    1a5a:	26 89       	ldd	r18, Z+22	; 0x16
    1a5c:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
    1a60:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1a64:	56 96       	adiw	r26, 0x16	; 22
    1a66:	8c 91       	ld	r24, X
    1a68:	28 17       	cp	r18, r24
    1a6a:	08 f0       	brcs	.+2      	; 0x1a6e <vTaskPriorityInherit+0x24>
    1a6c:	4b c0       	rjmp	.+150    	; 0x1b04 <vTaskPriorityInherit+0xba>
    1a6e:	84 85       	ldd	r24, Z+12	; 0x0c
    1a70:	95 85       	ldd	r25, Z+13	; 0x0d
    1a72:	99 23       	and	r25, r25
    1a74:	64 f0       	brlt	.+24     	; 0x1a8e <vTaskPriorityInherit+0x44>
    1a76:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
    1a7a:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1a7e:	56 96       	adiw	r26, 0x16	; 22
    1a80:	3c 91       	ld	r19, X
    1a82:	87 e0       	ldi	r24, 0x07	; 7
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	83 1b       	sub	r24, r19
    1a88:	91 09       	sbc	r25, r1
    1a8a:	95 87       	std	Z+13, r25	; 0x0d
    1a8c:	84 87       	std	Z+12, r24	; 0x0c
    1a8e:	82 85       	ldd	r24, Z+10	; 0x0a
    1a90:	93 85       	ldd	r25, Z+11	; 0x0b
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	a9 01       	movw	r20, r18
    1a96:	44 0f       	add	r20, r20
    1a98:	55 1f       	adc	r21, r21
    1a9a:	44 0f       	add	r20, r20
    1a9c:	55 1f       	adc	r21, r21
    1a9e:	44 0f       	add	r20, r20
    1aa0:	55 1f       	adc	r21, r21
    1aa2:	24 0f       	add	r18, r20
    1aa4:	35 1f       	adc	r19, r21
    1aa6:	2f 5c       	subi	r18, 0xCF	; 207
    1aa8:	3a 4f       	sbci	r19, 0xFA	; 250
    1aaa:	82 17       	cp	r24, r18
    1aac:	93 07       	cpc	r25, r19
    1aae:	19 f5       	brne	.+70     	; 0x1af6 <vTaskPriorityInherit+0xac>
    1ab0:	8f 01       	movw	r16, r30
    1ab2:	ef 01       	movw	r28, r30
    1ab4:	22 96       	adiw	r28, 0x02	; 2
    1ab6:	ce 01       	movw	r24, r28
    1ab8:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    1abc:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    1ac0:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1ac4:	86 89       	ldd	r24, Z+22	; 0x16
    1ac6:	f8 01       	movw	r30, r16
    1ac8:	86 8b       	std	Z+22, r24	; 0x16
    1aca:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    1ace:	98 17       	cp	r25, r24
    1ad0:	10 f4       	brcc	.+4      	; 0x1ad6 <vTaskPriorityInherit+0x8c>
    1ad2:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <uxTopReadyPriority>
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	9c 01       	movw	r18, r24
    1ada:	22 0f       	add	r18, r18
    1adc:	33 1f       	adc	r19, r19
    1ade:	22 0f       	add	r18, r18
    1ae0:	33 1f       	adc	r19, r19
    1ae2:	22 0f       	add	r18, r18
    1ae4:	33 1f       	adc	r19, r19
    1ae6:	82 0f       	add	r24, r18
    1ae8:	93 1f       	adc	r25, r19
    1aea:	be 01       	movw	r22, r28
    1aec:	8f 5c       	subi	r24, 0xCF	; 207
    1aee:	9a 4f       	sbci	r25, 0xFA	; 250
    1af0:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    1af4:	07 c0       	rjmp	.+14     	; 0x1b04 <vTaskPriorityInherit+0xba>
    1af6:	a0 91 70 05 	lds	r26, 0x0570	; 0x800570 <pxCurrentTCB>
    1afa:	b0 91 71 05 	lds	r27, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1afe:	56 96       	adiw	r26, 0x16	; 22
    1b00:	8c 91       	ld	r24, X
    1b02:	86 8b       	std	Z+22, r24	; 0x16
    1b04:	df 91       	pop	r29
    1b06:	cf 91       	pop	r28
    1b08:	1f 91       	pop	r17
    1b0a:	0f 91       	pop	r16
    1b0c:	08 95       	ret

00001b0e <xTaskPriorityDisinherit>:
    1b0e:	0f 93       	push	r16
    1b10:	1f 93       	push	r17
    1b12:	cf 93       	push	r28
    1b14:	df 93       	push	r29
    1b16:	fc 01       	movw	r30, r24
    1b18:	89 2b       	or	r24, r25
    1b1a:	79 f1       	breq	.+94     	; 0x1b7a <xTaskPriorityDisinherit+0x6c>
    1b1c:	82 a1       	ldd	r24, Z+34	; 0x22
    1b1e:	81 50       	subi	r24, 0x01	; 1
    1b20:	82 a3       	std	Z+34, r24	; 0x22
    1b22:	26 89       	ldd	r18, Z+22	; 0x16
    1b24:	91 a1       	ldd	r25, Z+33	; 0x21
    1b26:	29 17       	cp	r18, r25
    1b28:	51 f1       	breq	.+84     	; 0x1b7e <xTaskPriorityDisinherit+0x70>
    1b2a:	81 11       	cpse	r24, r1
    1b2c:	2a c0       	rjmp	.+84     	; 0x1b82 <xTaskPriorityDisinherit+0x74>
    1b2e:	ef 01       	movw	r28, r30
    1b30:	8f 01       	movw	r16, r30
    1b32:	0e 5f       	subi	r16, 0xFE	; 254
    1b34:	1f 4f       	sbci	r17, 0xFF	; 255
    1b36:	c8 01       	movw	r24, r16
    1b38:	0e 94 47 04 	call	0x88e	; 0x88e <uxListRemove>
    1b3c:	89 a1       	ldd	r24, Y+33	; 0x21
    1b3e:	8e 8b       	std	Y+22, r24	; 0x16
    1b40:	27 e0       	ldi	r18, 0x07	; 7
    1b42:	30 e0       	ldi	r19, 0x00	; 0
    1b44:	28 1b       	sub	r18, r24
    1b46:	31 09       	sbc	r19, r1
    1b48:	3d 87       	std	Y+13, r19	; 0x0d
    1b4a:	2c 87       	std	Y+12, r18	; 0x0c
    1b4c:	90 91 fb 04 	lds	r25, 0x04FB	; 0x8004fb <uxTopReadyPriority>
    1b50:	98 17       	cp	r25, r24
    1b52:	10 f4       	brcc	.+4      	; 0x1b58 <xTaskPriorityDisinherit+0x4a>
    1b54:	80 93 fb 04 	sts	0x04FB, r24	; 0x8004fb <uxTopReadyPriority>
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	9c 01       	movw	r18, r24
    1b5c:	22 0f       	add	r18, r18
    1b5e:	33 1f       	adc	r19, r19
    1b60:	22 0f       	add	r18, r18
    1b62:	33 1f       	adc	r19, r19
    1b64:	22 0f       	add	r18, r18
    1b66:	33 1f       	adc	r19, r19
    1b68:	82 0f       	add	r24, r18
    1b6a:	93 1f       	adc	r25, r19
    1b6c:	b8 01       	movw	r22, r16
    1b6e:	8f 5c       	subi	r24, 0xCF	; 207
    1b70:	9a 4f       	sbci	r25, 0xFA	; 250
    1b72:	0e 94 f5 03 	call	0x7ea	; 0x7ea <vListInsertEnd>
    1b76:	81 e0       	ldi	r24, 0x01	; 1
    1b78:	05 c0       	rjmp	.+10     	; 0x1b84 <xTaskPriorityDisinherit+0x76>
    1b7a:	80 e0       	ldi	r24, 0x00	; 0
    1b7c:	03 c0       	rjmp	.+6      	; 0x1b84 <xTaskPriorityDisinherit+0x76>
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	01 c0       	rjmp	.+2      	; 0x1b84 <xTaskPriorityDisinherit+0x76>
    1b82:	80 e0       	ldi	r24, 0x00	; 0
    1b84:	df 91       	pop	r29
    1b86:	cf 91       	pop	r28
    1b88:	1f 91       	pop	r17
    1b8a:	0f 91       	pop	r16
    1b8c:	08 95       	ret

00001b8e <pvTaskIncrementMutexHeldCount>:
    1b8e:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <pxCurrentTCB>
    1b92:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1b96:	89 2b       	or	r24, r25
    1b98:	39 f0       	breq	.+14     	; 0x1ba8 <pvTaskIncrementMutexHeldCount+0x1a>
    1b9a:	e0 91 70 05 	lds	r30, 0x0570	; 0x800570 <pxCurrentTCB>
    1b9e:	f0 91 71 05 	lds	r31, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1ba2:	82 a1       	ldd	r24, Z+34	; 0x22
    1ba4:	8f 5f       	subi	r24, 0xFF	; 255
    1ba6:	82 a3       	std	Z+34, r24	; 0x22
    1ba8:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <pxCurrentTCB>
    1bac:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <pxCurrentTCB+0x1>
    1bb0:	08 95       	ret

00001bb2 <LCD_voidSHD>:
    1bb2:	0f 93       	push	r16
    1bb4:	1f 93       	push	r17
    1bb6:	cf 93       	push	r28
    1bb8:	df 93       	push	r29
    1bba:	00 d0       	rcall	.+0      	; 0x1bbc <LCD_voidSHD+0xa>
    1bbc:	00 d0       	rcall	.+0      	; 0x1bbe <LCD_voidSHD+0xc>
    1bbe:	cd b7       	in	r28, 0x3d	; 61
    1bc0:	de b7       	in	r29, 0x3e	; 62
    1bc2:	08 2f       	mov	r16, r24
    1bc4:	84 e0       	ldi	r24, 0x04	; 4
    1bc6:	89 83       	std	Y+1, r24	; 0x01
    1bc8:	85 e0       	ldi	r24, 0x05	; 5
    1bca:	8a 83       	std	Y+2, r24	; 0x02
    1bcc:	86 e0       	ldi	r24, 0x06	; 6
    1bce:	8b 83       	std	Y+3, r24	; 0x03
    1bd0:	87 e0       	ldi	r24, 0x07	; 7
    1bd2:	8c 83       	std	Y+4, r24	; 0x04
    1bd4:	10 e0       	ldi	r17, 0x00	; 0
    1bd6:	14 c0       	rjmp	.+40     	; 0x1c00 <LCD_voidSHD+0x4e>
    1bd8:	40 2f       	mov	r20, r16
    1bda:	50 e0       	ldi	r21, 0x00	; 0
    1bdc:	01 2e       	mov	r0, r17
    1bde:	02 c0       	rjmp	.+4      	; 0x1be4 <LCD_voidSHD+0x32>
    1be0:	55 95       	asr	r21
    1be2:	47 95       	ror	r20
    1be4:	0a 94       	dec	r0
    1be6:	e2 f7       	brpl	.-8      	; 0x1be0 <LCD_voidSHD+0x2e>
    1be8:	41 70       	andi	r20, 0x01	; 1
    1bea:	e1 e0       	ldi	r30, 0x01	; 1
    1bec:	f0 e0       	ldi	r31, 0x00	; 0
    1bee:	ec 0f       	add	r30, r28
    1bf0:	fd 1f       	adc	r31, r29
    1bf2:	e1 0f       	add	r30, r17
    1bf4:	f1 1d       	adc	r31, r1
    1bf6:	60 81       	ld	r22, Z
    1bf8:	80 e0       	ldi	r24, 0x00	; 0
    1bfa:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1bfe:	1f 5f       	subi	r17, 0xFF	; 255
    1c00:	14 30       	cpi	r17, 0x04	; 4
    1c02:	50 f3       	brcs	.-44     	; 0x1bd8 <LCD_voidSHD+0x26>
    1c04:	0f 90       	pop	r0
    1c06:	0f 90       	pop	r0
    1c08:	0f 90       	pop	r0
    1c0a:	0f 90       	pop	r0
    1c0c:	df 91       	pop	r29
    1c0e:	cf 91       	pop	r28
    1c10:	1f 91       	pop	r17
    1c12:	0f 91       	pop	r16
    1c14:	08 95       	ret

00001c16 <LCD_voidSendEnable>:
    1c16:	41 e0       	ldi	r20, 0x01	; 1
    1c18:	62 e0       	ldi	r22, 0x02	; 2
    1c1a:	81 e0       	ldi	r24, 0x01	; 1
    1c1c:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1c20:	8f e3       	ldi	r24, 0x3F	; 63
    1c22:	9f e1       	ldi	r25, 0x1F	; 31
    1c24:	01 97       	sbiw	r24, 0x01	; 1
    1c26:	f1 f7       	brne	.-4      	; 0x1c24 <LCD_voidSendEnable+0xe>
    1c28:	00 c0       	rjmp	.+0      	; 0x1c2a <LCD_voidSendEnable+0x14>
    1c2a:	00 00       	nop
    1c2c:	40 e0       	ldi	r20, 0x00	; 0
    1c2e:	62 e0       	ldi	r22, 0x02	; 2
    1c30:	81 e0       	ldi	r24, 0x01	; 1
    1c32:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1c36:	08 95       	ret

00001c38 <LCD_voidSendData>:
    1c38:	cf 93       	push	r28
    1c3a:	c8 2f       	mov	r28, r24
    1c3c:	41 e0       	ldi	r20, 0x01	; 1
    1c3e:	60 e0       	ldi	r22, 0x00	; 0
    1c40:	81 e0       	ldi	r24, 0x01	; 1
    1c42:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1c46:	40 e0       	ldi	r20, 0x00	; 0
    1c48:	61 e0       	ldi	r22, 0x01	; 1
    1c4a:	81 e0       	ldi	r24, 0x01	; 1
    1c4c:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1c50:	8c 2f       	mov	r24, r28
    1c52:	82 95       	swap	r24
    1c54:	8f 70       	andi	r24, 0x0F	; 15
    1c56:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1c5a:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1c5e:	8c 2f       	mov	r24, r28
    1c60:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1c64:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1c68:	cf 91       	pop	r28
    1c6a:	08 95       	ret

00001c6c <LCD_voidSendCommand>:
    1c6c:	cf 93       	push	r28
    1c6e:	c8 2f       	mov	r28, r24
    1c70:	40 e0       	ldi	r20, 0x00	; 0
    1c72:	60 e0       	ldi	r22, 0x00	; 0
    1c74:	81 e0       	ldi	r24, 0x01	; 1
    1c76:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1c7a:	40 e0       	ldi	r20, 0x00	; 0
    1c7c:	61 e0       	ldi	r22, 0x01	; 1
    1c7e:	81 e0       	ldi	r24, 0x01	; 1
    1c80:	0e 94 f5 0e 	call	0x1dea	; 0x1dea <DIO_voidSetPinVal>
    1c84:	8c 2f       	mov	r24, r28
    1c86:	82 95       	swap	r24
    1c88:	8f 70       	andi	r24, 0x0F	; 15
    1c8a:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1c8e:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1c92:	8c 2f       	mov	r24, r28
    1c94:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1c98:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1c9c:	cf 91       	pop	r28
    1c9e:	08 95       	ret

00001ca0 <LCD_voidInit>:
    1ca0:	2f ef       	ldi	r18, 0xFF	; 255
    1ca2:	83 ef       	ldi	r24, 0xF3	; 243
    1ca4:	91 e0       	ldi	r25, 0x01	; 1
    1ca6:	21 50       	subi	r18, 0x01	; 1
    1ca8:	80 40       	sbci	r24, 0x00	; 0
    1caa:	90 40       	sbci	r25, 0x00	; 0
    1cac:	e1 f7       	brne	.-8      	; 0x1ca6 <LCD_voidInit+0x6>
    1cae:	00 c0       	rjmp	.+0      	; 0x1cb0 <LCD_voidInit+0x10>
    1cb0:	00 00       	nop
    1cb2:	82 e0       	ldi	r24, 0x02	; 2
    1cb4:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1cb8:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1cbc:	82 e0       	ldi	r24, 0x02	; 2
    1cbe:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1cc2:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1cc6:	88 e0       	ldi	r24, 0x08	; 8
    1cc8:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <LCD_voidSHD>
    1ccc:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <LCD_voidSendEnable>
    1cd0:	8c e0       	ldi	r24, 0x0C	; 12
    1cd2:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <LCD_voidSendCommand>
    1cd6:	81 e0       	ldi	r24, 0x01	; 1
    1cd8:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <LCD_voidSendCommand>
    1cdc:	08 95       	ret

00001cde <LCD_voidSendString>:
    1cde:	0f 93       	push	r16
    1ce0:	1f 93       	push	r17
    1ce2:	cf 93       	push	r28
    1ce4:	8c 01       	movw	r16, r24
    1ce6:	c0 e0       	ldi	r28, 0x00	; 0
    1ce8:	03 c0       	rjmp	.+6      	; 0x1cf0 <LCD_voidSendString+0x12>
    1cea:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <LCD_voidSendData>
    1cee:	cf 5f       	subi	r28, 0xFF	; 255
    1cf0:	f8 01       	movw	r30, r16
    1cf2:	ec 0f       	add	r30, r28
    1cf4:	f1 1d       	adc	r31, r1
    1cf6:	80 81       	ld	r24, Z
    1cf8:	81 11       	cpse	r24, r1
    1cfa:	f7 cf       	rjmp	.-18     	; 0x1cea <LCD_voidSendString+0xc>
    1cfc:	cf 91       	pop	r28
    1cfe:	1f 91       	pop	r17
    1d00:	0f 91       	pop	r16
    1d02:	08 95       	ret

00001d04 <LCD_voidGotoxy>:
    1d04:	90 e4       	ldi	r25, 0x40	; 64
    1d06:	69 9f       	mul	r22, r25
    1d08:	80 0d       	add	r24, r0
    1d0a:	11 24       	eor	r1, r1
    1d0c:	80 68       	ori	r24, 0x80	; 128
    1d0e:	0e 94 36 0e 	call	0x1c6c	; 0x1c6c <LCD_voidSendCommand>
    1d12:	08 95       	ret

00001d14 <LCD_voidSendNumber>:
    1d14:	1f 93       	push	r17
    1d16:	cf 93       	push	r28
    1d18:	df 93       	push	r29
    1d1a:	cd b7       	in	r28, 0x3d	; 61
    1d1c:	de b7       	in	r29, 0x3e	; 62
    1d1e:	2a 97       	sbiw	r28, 0x0a	; 10
    1d20:	0f b6       	in	r0, 0x3f	; 63
    1d22:	f8 94       	cli
    1d24:	de bf       	out	0x3e, r29	; 62
    1d26:	0f be       	out	0x3f, r0	; 63
    1d28:	cd bf       	out	0x3d, r28	; 61
    1d2a:	61 15       	cp	r22, r1
    1d2c:	71 05       	cpc	r23, r1
    1d2e:	81 05       	cpc	r24, r1
    1d30:	91 05       	cpc	r25, r1
    1d32:	d1 f4       	brne	.+52     	; 0x1d68 <LCD_voidSendNumber+0x54>
    1d34:	80 e3       	ldi	r24, 0x30	; 48
    1d36:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <LCD_voidSendData>
    1d3a:	2c c0       	rjmp	.+88     	; 0x1d94 <LCD_voidSendNumber+0x80>
    1d3c:	2a e0       	ldi	r18, 0x0A	; 10
    1d3e:	30 e0       	ldi	r19, 0x00	; 0
    1d40:	40 e0       	ldi	r20, 0x00	; 0
    1d42:	50 e0       	ldi	r21, 0x00	; 0
    1d44:	0e 94 5e 11 	call	0x22bc	; 0x22bc <__udivmodsi4>
    1d48:	e1 e0       	ldi	r30, 0x01	; 1
    1d4a:	f0 e0       	ldi	r31, 0x00	; 0
    1d4c:	ec 0f       	add	r30, r28
    1d4e:	fd 1f       	adc	r31, r29
    1d50:	e1 0f       	add	r30, r17
    1d52:	f1 1d       	adc	r31, r1
    1d54:	17 fd       	sbrc	r17, 7
    1d56:	fa 95       	dec	r31
    1d58:	60 5d       	subi	r22, 0xD0	; 208
    1d5a:	60 83       	st	Z, r22
    1d5c:	62 2f       	mov	r22, r18
    1d5e:	73 2f       	mov	r23, r19
    1d60:	84 2f       	mov	r24, r20
    1d62:	95 2f       	mov	r25, r21
    1d64:	1f 5f       	subi	r17, 0xFF	; 255
    1d66:	01 c0       	rjmp	.+2      	; 0x1d6a <LCD_voidSendNumber+0x56>
    1d68:	10 e0       	ldi	r17, 0x00	; 0
    1d6a:	61 15       	cp	r22, r1
    1d6c:	71 05       	cpc	r23, r1
    1d6e:	81 05       	cpc	r24, r1
    1d70:	91 05       	cpc	r25, r1
    1d72:	21 f7       	brne	.-56     	; 0x1d3c <LCD_voidSendNumber+0x28>
    1d74:	11 50       	subi	r17, 0x01	; 1
    1d76:	0c c0       	rjmp	.+24     	; 0x1d90 <LCD_voidSendNumber+0x7c>
    1d78:	e1 e0       	ldi	r30, 0x01	; 1
    1d7a:	f0 e0       	ldi	r31, 0x00	; 0
    1d7c:	ec 0f       	add	r30, r28
    1d7e:	fd 1f       	adc	r31, r29
    1d80:	e1 0f       	add	r30, r17
    1d82:	f1 1d       	adc	r31, r1
    1d84:	17 fd       	sbrc	r17, 7
    1d86:	fa 95       	dec	r31
    1d88:	80 81       	ld	r24, Z
    1d8a:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <LCD_voidSendData>
    1d8e:	11 50       	subi	r17, 0x01	; 1
    1d90:	11 23       	and	r17, r17
    1d92:	94 f7       	brge	.-28     	; 0x1d78 <LCD_voidSendNumber+0x64>
    1d94:	2a 96       	adiw	r28, 0x0a	; 10
    1d96:	0f b6       	in	r0, 0x3f	; 63
    1d98:	f8 94       	cli
    1d9a:	de bf       	out	0x3e, r29	; 62
    1d9c:	0f be       	out	0x3f, r0	; 63
    1d9e:	cd bf       	out	0x3d, r28	; 61
    1da0:	df 91       	pop	r29
    1da2:	cf 91       	pop	r28
    1da4:	1f 91       	pop	r17
    1da6:	08 95       	ret

00001da8 <ADC_voidInit>:
    1da8:	87 b1       	in	r24, 0x07	; 7
    1daa:	8f 77       	andi	r24, 0x7F	; 127
    1dac:	87 b9       	out	0x07, r24	; 7
    1dae:	87 b1       	in	r24, 0x07	; 7
    1db0:	80 64       	ori	r24, 0x40	; 64
    1db2:	87 b9       	out	0x07, r24	; 7
    1db4:	86 b1       	in	r24, 0x06	; 6
    1db6:	88 7f       	andi	r24, 0xF8	; 248
    1db8:	86 b9       	out	0x06, r24	; 6
    1dba:	86 b1       	in	r24, 0x06	; 6
    1dbc:	87 60       	ori	r24, 0x07	; 7
    1dbe:	86 b9       	out	0x06, r24	; 6
    1dc0:	86 b1       	in	r24, 0x06	; 6
    1dc2:	80 68       	ori	r24, 0x80	; 128
    1dc4:	86 b9       	out	0x06, r24	; 6
    1dc6:	08 95       	ret

00001dc8 <ADC_u16ReadChannel>:
    1dc8:	97 b1       	in	r25, 0x07	; 7
    1dca:	90 7e       	andi	r25, 0xE0	; 224
    1dcc:	97 b9       	out	0x07, r25	; 7
    1dce:	97 b1       	in	r25, 0x07	; 7
    1dd0:	89 2b       	or	r24, r25
    1dd2:	87 b9       	out	0x07, r24	; 7
    1dd4:	86 b1       	in	r24, 0x06	; 6
    1dd6:	80 64       	ori	r24, 0x40	; 64
    1dd8:	86 b9       	out	0x06, r24	; 6
    1dda:	34 9b       	sbis	0x06, 4	; 6
    1ddc:	fe cf       	rjmp	.-4      	; 0x1dda <ADC_u16ReadChannel+0x12>
    1dde:	86 b1       	in	r24, 0x06	; 6
    1de0:	80 61       	ori	r24, 0x10	; 16
    1de2:	86 b9       	out	0x06, r24	; 6
    1de4:	84 b1       	in	r24, 0x04	; 4
    1de6:	95 b1       	in	r25, 0x05	; 5
    1de8:	08 95       	ret

00001dea <DIO_voidSetPinVal>:
    1dea:	42 30       	cpi	r20, 0x02	; 2
    1dec:	08 f0       	brcs	.+2      	; 0x1df0 <DIO_voidSetPinVal+0x6>
    1dee:	6f c0       	rjmp	.+222    	; 0x1ece <DIO_voidSetPinVal+0xe4>
    1df0:	41 30       	cpi	r20, 0x01	; 1
    1df2:	a1 f5       	brne	.+104    	; 0x1e5c <DIO_voidSetPinVal+0x72>
    1df4:	81 30       	cpi	r24, 0x01	; 1
    1df6:	89 f0       	breq	.+34     	; 0x1e1a <DIO_voidSetPinVal+0x30>
    1df8:	28 f0       	brcs	.+10     	; 0x1e04 <DIO_voidSetPinVal+0x1a>
    1dfa:	82 30       	cpi	r24, 0x02	; 2
    1dfc:	c9 f0       	breq	.+50     	; 0x1e30 <DIO_voidSetPinVal+0x46>
    1dfe:	83 30       	cpi	r24, 0x03	; 3
    1e00:	11 f1       	breq	.+68     	; 0x1e46 <DIO_voidSetPinVal+0x5c>
    1e02:	08 95       	ret
    1e04:	2b b3       	in	r18, 0x1b	; 27
    1e06:	81 e0       	ldi	r24, 0x01	; 1
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	02 c0       	rjmp	.+4      	; 0x1e10 <DIO_voidSetPinVal+0x26>
    1e0c:	88 0f       	add	r24, r24
    1e0e:	99 1f       	adc	r25, r25
    1e10:	6a 95       	dec	r22
    1e12:	e2 f7       	brpl	.-8      	; 0x1e0c <DIO_voidSetPinVal+0x22>
    1e14:	82 2b       	or	r24, r18
    1e16:	8b bb       	out	0x1b, r24	; 27
    1e18:	08 95       	ret
    1e1a:	28 b3       	in	r18, 0x18	; 24
    1e1c:	81 e0       	ldi	r24, 0x01	; 1
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	02 c0       	rjmp	.+4      	; 0x1e26 <DIO_voidSetPinVal+0x3c>
    1e22:	88 0f       	add	r24, r24
    1e24:	99 1f       	adc	r25, r25
    1e26:	6a 95       	dec	r22
    1e28:	e2 f7       	brpl	.-8      	; 0x1e22 <DIO_voidSetPinVal+0x38>
    1e2a:	82 2b       	or	r24, r18
    1e2c:	88 bb       	out	0x18, r24	; 24
    1e2e:	08 95       	ret
    1e30:	25 b3       	in	r18, 0x15	; 21
    1e32:	81 e0       	ldi	r24, 0x01	; 1
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	02 c0       	rjmp	.+4      	; 0x1e3c <DIO_voidSetPinVal+0x52>
    1e38:	88 0f       	add	r24, r24
    1e3a:	99 1f       	adc	r25, r25
    1e3c:	6a 95       	dec	r22
    1e3e:	e2 f7       	brpl	.-8      	; 0x1e38 <DIO_voidSetPinVal+0x4e>
    1e40:	82 2b       	or	r24, r18
    1e42:	85 bb       	out	0x15, r24	; 21
    1e44:	08 95       	ret
    1e46:	22 b3       	in	r18, 0x12	; 18
    1e48:	81 e0       	ldi	r24, 0x01	; 1
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	02 c0       	rjmp	.+4      	; 0x1e52 <DIO_voidSetPinVal+0x68>
    1e4e:	88 0f       	add	r24, r24
    1e50:	99 1f       	adc	r25, r25
    1e52:	6a 95       	dec	r22
    1e54:	e2 f7       	brpl	.-8      	; 0x1e4e <DIO_voidSetPinVal+0x64>
    1e56:	82 2b       	or	r24, r18
    1e58:	82 bb       	out	0x12, r24	; 18
    1e5a:	08 95       	ret
    1e5c:	41 11       	cpse	r20, r1
    1e5e:	37 c0       	rjmp	.+110    	; 0x1ece <DIO_voidSetPinVal+0xe4>
    1e60:	81 30       	cpi	r24, 0x01	; 1
    1e62:	91 f0       	breq	.+36     	; 0x1e88 <DIO_voidSetPinVal+0x9e>
    1e64:	28 f0       	brcs	.+10     	; 0x1e70 <DIO_voidSetPinVal+0x86>
    1e66:	82 30       	cpi	r24, 0x02	; 2
    1e68:	d9 f0       	breq	.+54     	; 0x1ea0 <DIO_voidSetPinVal+0xb6>
    1e6a:	83 30       	cpi	r24, 0x03	; 3
    1e6c:	29 f1       	breq	.+74     	; 0x1eb8 <DIO_voidSetPinVal+0xce>
    1e6e:	08 95       	ret
    1e70:	2b b3       	in	r18, 0x1b	; 27
    1e72:	81 e0       	ldi	r24, 0x01	; 1
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	02 c0       	rjmp	.+4      	; 0x1e7c <DIO_voidSetPinVal+0x92>
    1e78:	88 0f       	add	r24, r24
    1e7a:	99 1f       	adc	r25, r25
    1e7c:	6a 95       	dec	r22
    1e7e:	e2 f7       	brpl	.-8      	; 0x1e78 <DIO_voidSetPinVal+0x8e>
    1e80:	80 95       	com	r24
    1e82:	82 23       	and	r24, r18
    1e84:	8b bb       	out	0x1b, r24	; 27
    1e86:	08 95       	ret
    1e88:	28 b3       	in	r18, 0x18	; 24
    1e8a:	81 e0       	ldi	r24, 0x01	; 1
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	02 c0       	rjmp	.+4      	; 0x1e94 <DIO_voidSetPinVal+0xaa>
    1e90:	88 0f       	add	r24, r24
    1e92:	99 1f       	adc	r25, r25
    1e94:	6a 95       	dec	r22
    1e96:	e2 f7       	brpl	.-8      	; 0x1e90 <DIO_voidSetPinVal+0xa6>
    1e98:	80 95       	com	r24
    1e9a:	82 23       	and	r24, r18
    1e9c:	88 bb       	out	0x18, r24	; 24
    1e9e:	08 95       	ret
    1ea0:	25 b3       	in	r18, 0x15	; 21
    1ea2:	81 e0       	ldi	r24, 0x01	; 1
    1ea4:	90 e0       	ldi	r25, 0x00	; 0
    1ea6:	02 c0       	rjmp	.+4      	; 0x1eac <DIO_voidSetPinVal+0xc2>
    1ea8:	88 0f       	add	r24, r24
    1eaa:	99 1f       	adc	r25, r25
    1eac:	6a 95       	dec	r22
    1eae:	e2 f7       	brpl	.-8      	; 0x1ea8 <DIO_voidSetPinVal+0xbe>
    1eb0:	80 95       	com	r24
    1eb2:	82 23       	and	r24, r18
    1eb4:	85 bb       	out	0x15, r24	; 21
    1eb6:	08 95       	ret
    1eb8:	22 b3       	in	r18, 0x12	; 18
    1eba:	81 e0       	ldi	r24, 0x01	; 1
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	02 c0       	rjmp	.+4      	; 0x1ec4 <DIO_voidSetPinVal+0xda>
    1ec0:	88 0f       	add	r24, r24
    1ec2:	99 1f       	adc	r25, r25
    1ec4:	6a 95       	dec	r22
    1ec6:	e2 f7       	brpl	.-8      	; 0x1ec0 <DIO_voidSetPinVal+0xd6>
    1ec8:	80 95       	com	r24
    1eca:	82 23       	and	r24, r18
    1ecc:	82 bb       	out	0x12, r24	; 18
    1ece:	08 95       	ret

00001ed0 <DIO_voidSetPortDir>:
    1ed0:	81 30       	cpi	r24, 0x01	; 1
    1ed2:	41 f0       	breq	.+16     	; 0x1ee4 <DIO_voidSetPortDir+0x14>
    1ed4:	28 f0       	brcs	.+10     	; 0x1ee0 <DIO_voidSetPortDir+0x10>
    1ed6:	82 30       	cpi	r24, 0x02	; 2
    1ed8:	39 f0       	breq	.+14     	; 0x1ee8 <DIO_voidSetPortDir+0x18>
    1eda:	83 30       	cpi	r24, 0x03	; 3
    1edc:	39 f0       	breq	.+14     	; 0x1eec <DIO_voidSetPortDir+0x1c>
    1ede:	08 95       	ret
    1ee0:	6a bb       	out	0x1a, r22	; 26
    1ee2:	08 95       	ret
    1ee4:	67 bb       	out	0x17, r22	; 23
    1ee6:	08 95       	ret
    1ee8:	64 bb       	out	0x14, r22	; 20
    1eea:	08 95       	ret
    1eec:	61 bb       	out	0x11, r22	; 17
    1eee:	08 95       	ret

00001ef0 <TIMER0_voidFastPWM>:
    1ef0:	93 b7       	in	r25, 0x33	; 51
    1ef2:	98 60       	ori	r25, 0x08	; 8
    1ef4:	93 bf       	out	0x33, r25	; 51
    1ef6:	93 b7       	in	r25, 0x33	; 51
    1ef8:	90 64       	ori	r25, 0x40	; 64
    1efa:	93 bf       	out	0x33, r25	; 51
    1efc:	93 b7       	in	r25, 0x33	; 51
    1efe:	90 62       	ori	r25, 0x20	; 32
    1f00:	93 bf       	out	0x33, r25	; 51
    1f02:	93 b7       	in	r25, 0x33	; 51
    1f04:	9f 7e       	andi	r25, 0xEF	; 239
    1f06:	93 bf       	out	0x33, r25	; 51
    1f08:	93 b7       	in	r25, 0x33	; 51
    1f0a:	98 7f       	andi	r25, 0xF8	; 248
    1f0c:	93 bf       	out	0x33, r25	; 51
    1f0e:	93 b7       	in	r25, 0x33	; 51
    1f10:	93 60       	ori	r25, 0x03	; 3
    1f12:	93 bf       	out	0x33, r25	; 51
    1f14:	68 2f       	mov	r22, r24
    1f16:	70 e0       	ldi	r23, 0x00	; 0
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	0e 94 28 10 	call	0x2050	; 0x2050 <__floatsisf>
    1f20:	23 e3       	ldi	r18, 0x33	; 51
    1f22:	33 e3       	ldi	r19, 0x33	; 51
    1f24:	43 e2       	ldi	r20, 0x23	; 35
    1f26:	50 e4       	ldi	r21, 0x40	; 64
    1f28:	0e 94 91 10 	call	0x2122	; 0x2122 <__mulsf3>
    1f2c:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <__fixunssfsi>
    1f30:	6c bf       	out	0x3c, r22	; 60
    1f32:	08 95       	ret

00001f34 <__vector_11>:
    1f34:	1f 92       	push	r1
    1f36:	0f 92       	push	r0
    1f38:	0f b6       	in	r0, 0x3f	; 63
    1f3a:	0f 92       	push	r0
    1f3c:	11 24       	eor	r1, r1
    1f3e:	2f 93       	push	r18
    1f40:	3f 93       	push	r19
    1f42:	4f 93       	push	r20
    1f44:	5f 93       	push	r21
    1f46:	6f 93       	push	r22
    1f48:	7f 93       	push	r23
    1f4a:	8f 93       	push	r24
    1f4c:	9f 93       	push	r25
    1f4e:	af 93       	push	r26
    1f50:	bf 93       	push	r27
    1f52:	ef 93       	push	r30
    1f54:	ff 93       	push	r31
    1f56:	e0 91 72 05 	lds	r30, 0x0572	; 0x800572 <TIM0_PTR>
    1f5a:	f0 91 73 05 	lds	r31, 0x0573	; 0x800573 <TIM0_PTR+0x1>
    1f5e:	09 95       	icall
    1f60:	ff 91       	pop	r31
    1f62:	ef 91       	pop	r30
    1f64:	bf 91       	pop	r27
    1f66:	af 91       	pop	r26
    1f68:	9f 91       	pop	r25
    1f6a:	8f 91       	pop	r24
    1f6c:	7f 91       	pop	r23
    1f6e:	6f 91       	pop	r22
    1f70:	5f 91       	pop	r21
    1f72:	4f 91       	pop	r20
    1f74:	3f 91       	pop	r19
    1f76:	2f 91       	pop	r18
    1f78:	0f 90       	pop	r0
    1f7a:	0f be       	out	0x3f, r0	; 63
    1f7c:	0f 90       	pop	r0
    1f7e:	1f 90       	pop	r1
    1f80:	18 95       	reti

00001f82 <__vector_10>:
    1f82:	1f 92       	push	r1
    1f84:	0f 92       	push	r0
    1f86:	0f b6       	in	r0, 0x3f	; 63
    1f88:	0f 92       	push	r0
    1f8a:	11 24       	eor	r1, r1
    1f8c:	2f 93       	push	r18
    1f8e:	3f 93       	push	r19
    1f90:	4f 93       	push	r20
    1f92:	5f 93       	push	r21
    1f94:	6f 93       	push	r22
    1f96:	7f 93       	push	r23
    1f98:	8f 93       	push	r24
    1f9a:	9f 93       	push	r25
    1f9c:	af 93       	push	r26
    1f9e:	bf 93       	push	r27
    1fa0:	ef 93       	push	r30
    1fa2:	ff 93       	push	r31
    1fa4:	e0 91 74 05 	lds	r30, 0x0574	; 0x800574 <TIM0_PTR+0x2>
    1fa8:	f0 91 75 05 	lds	r31, 0x0575	; 0x800575 <TIM0_PTR+0x3>
    1fac:	09 95       	icall
    1fae:	ff 91       	pop	r31
    1fb0:	ef 91       	pop	r30
    1fb2:	bf 91       	pop	r27
    1fb4:	af 91       	pop	r26
    1fb6:	9f 91       	pop	r25
    1fb8:	8f 91       	pop	r24
    1fba:	7f 91       	pop	r23
    1fbc:	6f 91       	pop	r22
    1fbe:	5f 91       	pop	r21
    1fc0:	4f 91       	pop	r20
    1fc2:	3f 91       	pop	r19
    1fc4:	2f 91       	pop	r18
    1fc6:	0f 90       	pop	r0
    1fc8:	0f be       	out	0x3f, r0	; 63
    1fca:	0f 90       	pop	r0
    1fcc:	1f 90       	pop	r1
    1fce:	18 95       	reti

00001fd0 <UART_voidInit>:
    1fd0:	86 e8       	ldi	r24, 0x86	; 134
    1fd2:	80 bd       	out	0x20, r24	; 32
    1fd4:	87 e6       	ldi	r24, 0x67	; 103
    1fd6:	89 b9       	out	0x09, r24	; 9
    1fd8:	8a b1       	in	r24, 0x0a	; 10
    1fda:	88 60       	ori	r24, 0x08	; 8
    1fdc:	8a b9       	out	0x0a, r24	; 10
    1fde:	8a b1       	in	r24, 0x0a	; 10
    1fe0:	80 61       	ori	r24, 0x10	; 16
    1fe2:	8a b9       	out	0x0a, r24	; 10
    1fe4:	08 95       	ret

00001fe6 <UART_u8RX>:
    1fe6:	5f 9b       	sbis	0x0b, 7	; 11
    1fe8:	fe cf       	rjmp	.-4      	; 0x1fe6 <UART_u8RX>
    1fea:	8c b1       	in	r24, 0x0c	; 12
    1fec:	08 95       	ret

00001fee <__fixunssfsi>:
    1fee:	0e 94 6b 10 	call	0x20d6	; 0x20d6 <__fp_splitA>
    1ff2:	88 f0       	brcs	.+34     	; 0x2016 <__fixunssfsi+0x28>
    1ff4:	9f 57       	subi	r25, 0x7F	; 127
    1ff6:	98 f0       	brcs	.+38     	; 0x201e <__fixunssfsi+0x30>
    1ff8:	b9 2f       	mov	r27, r25
    1ffa:	99 27       	eor	r25, r25
    1ffc:	b7 51       	subi	r27, 0x17	; 23
    1ffe:	b0 f0       	brcs	.+44     	; 0x202c <__fixunssfsi+0x3e>
    2000:	e1 f0       	breq	.+56     	; 0x203a <__fixunssfsi+0x4c>
    2002:	66 0f       	add	r22, r22
    2004:	77 1f       	adc	r23, r23
    2006:	88 1f       	adc	r24, r24
    2008:	99 1f       	adc	r25, r25
    200a:	1a f0       	brmi	.+6      	; 0x2012 <__fixunssfsi+0x24>
    200c:	ba 95       	dec	r27
    200e:	c9 f7       	brne	.-14     	; 0x2002 <__fixunssfsi+0x14>
    2010:	14 c0       	rjmp	.+40     	; 0x203a <__fixunssfsi+0x4c>
    2012:	b1 30       	cpi	r27, 0x01	; 1
    2014:	91 f0       	breq	.+36     	; 0x203a <__fixunssfsi+0x4c>
    2016:	0e 94 85 10 	call	0x210a	; 0x210a <__fp_zero>
    201a:	b1 e0       	ldi	r27, 0x01	; 1
    201c:	08 95       	ret
    201e:	0c 94 85 10 	jmp	0x210a	; 0x210a <__fp_zero>
    2022:	67 2f       	mov	r22, r23
    2024:	78 2f       	mov	r23, r24
    2026:	88 27       	eor	r24, r24
    2028:	b8 5f       	subi	r27, 0xF8	; 248
    202a:	39 f0       	breq	.+14     	; 0x203a <__fixunssfsi+0x4c>
    202c:	b9 3f       	cpi	r27, 0xF9	; 249
    202e:	cc f3       	brlt	.-14     	; 0x2022 <__fixunssfsi+0x34>
    2030:	86 95       	lsr	r24
    2032:	77 95       	ror	r23
    2034:	67 95       	ror	r22
    2036:	b3 95       	inc	r27
    2038:	d9 f7       	brne	.-10     	; 0x2030 <__fixunssfsi+0x42>
    203a:	3e f4       	brtc	.+14     	; 0x204a <__fixunssfsi+0x5c>
    203c:	90 95       	com	r25
    203e:	80 95       	com	r24
    2040:	70 95       	com	r23
    2042:	61 95       	neg	r22
    2044:	7f 4f       	sbci	r23, 0xFF	; 255
    2046:	8f 4f       	sbci	r24, 0xFF	; 255
    2048:	9f 4f       	sbci	r25, 0xFF	; 255
    204a:	08 95       	ret

0000204c <__floatunsisf>:
    204c:	e8 94       	clt
    204e:	09 c0       	rjmp	.+18     	; 0x2062 <__floatsisf+0x12>

00002050 <__floatsisf>:
    2050:	97 fb       	bst	r25, 7
    2052:	3e f4       	brtc	.+14     	; 0x2062 <__floatsisf+0x12>
    2054:	90 95       	com	r25
    2056:	80 95       	com	r24
    2058:	70 95       	com	r23
    205a:	61 95       	neg	r22
    205c:	7f 4f       	sbci	r23, 0xFF	; 255
    205e:	8f 4f       	sbci	r24, 0xFF	; 255
    2060:	9f 4f       	sbci	r25, 0xFF	; 255
    2062:	99 23       	and	r25, r25
    2064:	a9 f0       	breq	.+42     	; 0x2090 <__floatsisf+0x40>
    2066:	f9 2f       	mov	r31, r25
    2068:	96 e9       	ldi	r25, 0x96	; 150
    206a:	bb 27       	eor	r27, r27
    206c:	93 95       	inc	r25
    206e:	f6 95       	lsr	r31
    2070:	87 95       	ror	r24
    2072:	77 95       	ror	r23
    2074:	67 95       	ror	r22
    2076:	b7 95       	ror	r27
    2078:	f1 11       	cpse	r31, r1
    207a:	f8 cf       	rjmp	.-16     	; 0x206c <__floatsisf+0x1c>
    207c:	fa f4       	brpl	.+62     	; 0x20bc <__floatsisf+0x6c>
    207e:	bb 0f       	add	r27, r27
    2080:	11 f4       	brne	.+4      	; 0x2086 <__floatsisf+0x36>
    2082:	60 ff       	sbrs	r22, 0
    2084:	1b c0       	rjmp	.+54     	; 0x20bc <__floatsisf+0x6c>
    2086:	6f 5f       	subi	r22, 0xFF	; 255
    2088:	7f 4f       	sbci	r23, 0xFF	; 255
    208a:	8f 4f       	sbci	r24, 0xFF	; 255
    208c:	9f 4f       	sbci	r25, 0xFF	; 255
    208e:	16 c0       	rjmp	.+44     	; 0x20bc <__floatsisf+0x6c>
    2090:	88 23       	and	r24, r24
    2092:	11 f0       	breq	.+4      	; 0x2098 <__floatsisf+0x48>
    2094:	96 e9       	ldi	r25, 0x96	; 150
    2096:	11 c0       	rjmp	.+34     	; 0x20ba <__floatsisf+0x6a>
    2098:	77 23       	and	r23, r23
    209a:	21 f0       	breq	.+8      	; 0x20a4 <__floatsisf+0x54>
    209c:	9e e8       	ldi	r25, 0x8E	; 142
    209e:	87 2f       	mov	r24, r23
    20a0:	76 2f       	mov	r23, r22
    20a2:	05 c0       	rjmp	.+10     	; 0x20ae <__floatsisf+0x5e>
    20a4:	66 23       	and	r22, r22
    20a6:	71 f0       	breq	.+28     	; 0x20c4 <__floatsisf+0x74>
    20a8:	96 e8       	ldi	r25, 0x86	; 134
    20aa:	86 2f       	mov	r24, r22
    20ac:	70 e0       	ldi	r23, 0x00	; 0
    20ae:	60 e0       	ldi	r22, 0x00	; 0
    20b0:	2a f0       	brmi	.+10     	; 0x20bc <__floatsisf+0x6c>
    20b2:	9a 95       	dec	r25
    20b4:	66 0f       	add	r22, r22
    20b6:	77 1f       	adc	r23, r23
    20b8:	88 1f       	adc	r24, r24
    20ba:	da f7       	brpl	.-10     	; 0x20b2 <__floatsisf+0x62>
    20bc:	88 0f       	add	r24, r24
    20be:	96 95       	lsr	r25
    20c0:	87 95       	ror	r24
    20c2:	97 f9       	bld	r25, 7
    20c4:	08 95       	ret

000020c6 <__fp_split3>:
    20c6:	57 fd       	sbrc	r21, 7
    20c8:	90 58       	subi	r25, 0x80	; 128
    20ca:	44 0f       	add	r20, r20
    20cc:	55 1f       	adc	r21, r21
    20ce:	59 f0       	breq	.+22     	; 0x20e6 <__fp_splitA+0x10>
    20d0:	5f 3f       	cpi	r21, 0xFF	; 255
    20d2:	71 f0       	breq	.+28     	; 0x20f0 <__fp_splitA+0x1a>
    20d4:	47 95       	ror	r20

000020d6 <__fp_splitA>:
    20d6:	88 0f       	add	r24, r24
    20d8:	97 fb       	bst	r25, 7
    20da:	99 1f       	adc	r25, r25
    20dc:	61 f0       	breq	.+24     	; 0x20f6 <__fp_splitA+0x20>
    20de:	9f 3f       	cpi	r25, 0xFF	; 255
    20e0:	79 f0       	breq	.+30     	; 0x2100 <__fp_splitA+0x2a>
    20e2:	87 95       	ror	r24
    20e4:	08 95       	ret
    20e6:	12 16       	cp	r1, r18
    20e8:	13 06       	cpc	r1, r19
    20ea:	14 06       	cpc	r1, r20
    20ec:	55 1f       	adc	r21, r21
    20ee:	f2 cf       	rjmp	.-28     	; 0x20d4 <__fp_split3+0xe>
    20f0:	46 95       	lsr	r20
    20f2:	f1 df       	rcall	.-30     	; 0x20d6 <__fp_splitA>
    20f4:	08 c0       	rjmp	.+16     	; 0x2106 <__fp_splitA+0x30>
    20f6:	16 16       	cp	r1, r22
    20f8:	17 06       	cpc	r1, r23
    20fa:	18 06       	cpc	r1, r24
    20fc:	99 1f       	adc	r25, r25
    20fe:	f1 cf       	rjmp	.-30     	; 0x20e2 <__fp_splitA+0xc>
    2100:	86 95       	lsr	r24
    2102:	71 05       	cpc	r23, r1
    2104:	61 05       	cpc	r22, r1
    2106:	08 94       	sec
    2108:	08 95       	ret

0000210a <__fp_zero>:
    210a:	e8 94       	clt

0000210c <__fp_szero>:
    210c:	bb 27       	eor	r27, r27
    210e:	66 27       	eor	r22, r22
    2110:	77 27       	eor	r23, r23
    2112:	cb 01       	movw	r24, r22
    2114:	97 f9       	bld	r25, 7
    2116:	08 95       	ret

00002118 <__gesf2>:
    2118:	0e 94 fe 10 	call	0x21fc	; 0x21fc <__fp_cmp>
    211c:	08 f4       	brcc	.+2      	; 0x2120 <__gesf2+0x8>
    211e:	8f ef       	ldi	r24, 0xFF	; 255
    2120:	08 95       	ret

00002122 <__mulsf3>:
    2122:	0e 94 a4 10 	call	0x2148	; 0x2148 <__mulsf3x>
    2126:	0c 94 39 11 	jmp	0x2272	; 0x2272 <__fp_round>
    212a:	0e 94 2b 11 	call	0x2256	; 0x2256 <__fp_pscA>
    212e:	38 f0       	brcs	.+14     	; 0x213e <__mulsf3+0x1c>
    2130:	0e 94 32 11 	call	0x2264	; 0x2264 <__fp_pscB>
    2134:	20 f0       	brcs	.+8      	; 0x213e <__mulsf3+0x1c>
    2136:	95 23       	and	r25, r21
    2138:	11 f0       	breq	.+4      	; 0x213e <__mulsf3+0x1c>
    213a:	0c 94 22 11 	jmp	0x2244	; 0x2244 <__fp_inf>
    213e:	0c 94 28 11 	jmp	0x2250	; 0x2250 <__fp_nan>
    2142:	11 24       	eor	r1, r1
    2144:	0c 94 86 10 	jmp	0x210c	; 0x210c <__fp_szero>

00002148 <__mulsf3x>:
    2148:	0e 94 63 10 	call	0x20c6	; 0x20c6 <__fp_split3>
    214c:	70 f3       	brcs	.-36     	; 0x212a <__mulsf3+0x8>

0000214e <__mulsf3_pse>:
    214e:	95 9f       	mul	r25, r21
    2150:	c1 f3       	breq	.-16     	; 0x2142 <__mulsf3+0x20>
    2152:	95 0f       	add	r25, r21
    2154:	50 e0       	ldi	r21, 0x00	; 0
    2156:	55 1f       	adc	r21, r21
    2158:	62 9f       	mul	r22, r18
    215a:	f0 01       	movw	r30, r0
    215c:	72 9f       	mul	r23, r18
    215e:	bb 27       	eor	r27, r27
    2160:	f0 0d       	add	r31, r0
    2162:	b1 1d       	adc	r27, r1
    2164:	63 9f       	mul	r22, r19
    2166:	aa 27       	eor	r26, r26
    2168:	f0 0d       	add	r31, r0
    216a:	b1 1d       	adc	r27, r1
    216c:	aa 1f       	adc	r26, r26
    216e:	64 9f       	mul	r22, r20
    2170:	66 27       	eor	r22, r22
    2172:	b0 0d       	add	r27, r0
    2174:	a1 1d       	adc	r26, r1
    2176:	66 1f       	adc	r22, r22
    2178:	82 9f       	mul	r24, r18
    217a:	22 27       	eor	r18, r18
    217c:	b0 0d       	add	r27, r0
    217e:	a1 1d       	adc	r26, r1
    2180:	62 1f       	adc	r22, r18
    2182:	73 9f       	mul	r23, r19
    2184:	b0 0d       	add	r27, r0
    2186:	a1 1d       	adc	r26, r1
    2188:	62 1f       	adc	r22, r18
    218a:	83 9f       	mul	r24, r19
    218c:	a0 0d       	add	r26, r0
    218e:	61 1d       	adc	r22, r1
    2190:	22 1f       	adc	r18, r18
    2192:	74 9f       	mul	r23, r20
    2194:	33 27       	eor	r19, r19
    2196:	a0 0d       	add	r26, r0
    2198:	61 1d       	adc	r22, r1
    219a:	23 1f       	adc	r18, r19
    219c:	84 9f       	mul	r24, r20
    219e:	60 0d       	add	r22, r0
    21a0:	21 1d       	adc	r18, r1
    21a2:	82 2f       	mov	r24, r18
    21a4:	76 2f       	mov	r23, r22
    21a6:	6a 2f       	mov	r22, r26
    21a8:	11 24       	eor	r1, r1
    21aa:	9f 57       	subi	r25, 0x7F	; 127
    21ac:	50 40       	sbci	r21, 0x00	; 0
    21ae:	9a f0       	brmi	.+38     	; 0x21d6 <__mulsf3_pse+0x88>
    21b0:	f1 f0       	breq	.+60     	; 0x21ee <__mulsf3_pse+0xa0>
    21b2:	88 23       	and	r24, r24
    21b4:	4a f0       	brmi	.+18     	; 0x21c8 <__mulsf3_pse+0x7a>
    21b6:	ee 0f       	add	r30, r30
    21b8:	ff 1f       	adc	r31, r31
    21ba:	bb 1f       	adc	r27, r27
    21bc:	66 1f       	adc	r22, r22
    21be:	77 1f       	adc	r23, r23
    21c0:	88 1f       	adc	r24, r24
    21c2:	91 50       	subi	r25, 0x01	; 1
    21c4:	50 40       	sbci	r21, 0x00	; 0
    21c6:	a9 f7       	brne	.-22     	; 0x21b2 <__mulsf3_pse+0x64>
    21c8:	9e 3f       	cpi	r25, 0xFE	; 254
    21ca:	51 05       	cpc	r21, r1
    21cc:	80 f0       	brcs	.+32     	; 0x21ee <__mulsf3_pse+0xa0>
    21ce:	0c 94 22 11 	jmp	0x2244	; 0x2244 <__fp_inf>
    21d2:	0c 94 86 10 	jmp	0x210c	; 0x210c <__fp_szero>
    21d6:	5f 3f       	cpi	r21, 0xFF	; 255
    21d8:	e4 f3       	brlt	.-8      	; 0x21d2 <__mulsf3_pse+0x84>
    21da:	98 3e       	cpi	r25, 0xE8	; 232
    21dc:	d4 f3       	brlt	.-12     	; 0x21d2 <__mulsf3_pse+0x84>
    21de:	86 95       	lsr	r24
    21e0:	77 95       	ror	r23
    21e2:	67 95       	ror	r22
    21e4:	b7 95       	ror	r27
    21e6:	f7 95       	ror	r31
    21e8:	e7 95       	ror	r30
    21ea:	9f 5f       	subi	r25, 0xFF	; 255
    21ec:	c1 f7       	brne	.-16     	; 0x21de <__mulsf3_pse+0x90>
    21ee:	fe 2b       	or	r31, r30
    21f0:	88 0f       	add	r24, r24
    21f2:	91 1d       	adc	r25, r1
    21f4:	96 95       	lsr	r25
    21f6:	87 95       	ror	r24
    21f8:	97 f9       	bld	r25, 7
    21fa:	08 95       	ret

000021fc <__fp_cmp>:
    21fc:	99 0f       	add	r25, r25
    21fe:	00 08       	sbc	r0, r0
    2200:	55 0f       	add	r21, r21
    2202:	aa 0b       	sbc	r26, r26
    2204:	e0 e8       	ldi	r30, 0x80	; 128
    2206:	fe ef       	ldi	r31, 0xFE	; 254
    2208:	16 16       	cp	r1, r22
    220a:	17 06       	cpc	r1, r23
    220c:	e8 07       	cpc	r30, r24
    220e:	f9 07       	cpc	r31, r25
    2210:	c0 f0       	brcs	.+48     	; 0x2242 <__fp_cmp+0x46>
    2212:	12 16       	cp	r1, r18
    2214:	13 06       	cpc	r1, r19
    2216:	e4 07       	cpc	r30, r20
    2218:	f5 07       	cpc	r31, r21
    221a:	98 f0       	brcs	.+38     	; 0x2242 <__fp_cmp+0x46>
    221c:	62 1b       	sub	r22, r18
    221e:	73 0b       	sbc	r23, r19
    2220:	84 0b       	sbc	r24, r20
    2222:	95 0b       	sbc	r25, r21
    2224:	39 f4       	brne	.+14     	; 0x2234 <__fp_cmp+0x38>
    2226:	0a 26       	eor	r0, r26
    2228:	61 f0       	breq	.+24     	; 0x2242 <__fp_cmp+0x46>
    222a:	23 2b       	or	r18, r19
    222c:	24 2b       	or	r18, r20
    222e:	25 2b       	or	r18, r21
    2230:	21 f4       	brne	.+8      	; 0x223a <__fp_cmp+0x3e>
    2232:	08 95       	ret
    2234:	0a 26       	eor	r0, r26
    2236:	09 f4       	brne	.+2      	; 0x223a <__fp_cmp+0x3e>
    2238:	a1 40       	sbci	r26, 0x01	; 1
    223a:	a6 95       	lsr	r26
    223c:	8f ef       	ldi	r24, 0xFF	; 255
    223e:	81 1d       	adc	r24, r1
    2240:	81 1d       	adc	r24, r1
    2242:	08 95       	ret

00002244 <__fp_inf>:
    2244:	97 f9       	bld	r25, 7
    2246:	9f 67       	ori	r25, 0x7F	; 127
    2248:	80 e8       	ldi	r24, 0x80	; 128
    224a:	70 e0       	ldi	r23, 0x00	; 0
    224c:	60 e0       	ldi	r22, 0x00	; 0
    224e:	08 95       	ret

00002250 <__fp_nan>:
    2250:	9f ef       	ldi	r25, 0xFF	; 255
    2252:	80 ec       	ldi	r24, 0xC0	; 192
    2254:	08 95       	ret

00002256 <__fp_pscA>:
    2256:	00 24       	eor	r0, r0
    2258:	0a 94       	dec	r0
    225a:	16 16       	cp	r1, r22
    225c:	17 06       	cpc	r1, r23
    225e:	18 06       	cpc	r1, r24
    2260:	09 06       	cpc	r0, r25
    2262:	08 95       	ret

00002264 <__fp_pscB>:
    2264:	00 24       	eor	r0, r0
    2266:	0a 94       	dec	r0
    2268:	12 16       	cp	r1, r18
    226a:	13 06       	cpc	r1, r19
    226c:	14 06       	cpc	r1, r20
    226e:	05 06       	cpc	r0, r21
    2270:	08 95       	ret

00002272 <__fp_round>:
    2272:	09 2e       	mov	r0, r25
    2274:	03 94       	inc	r0
    2276:	00 0c       	add	r0, r0
    2278:	11 f4       	brne	.+4      	; 0x227e <__fp_round+0xc>
    227a:	88 23       	and	r24, r24
    227c:	52 f0       	brmi	.+20     	; 0x2292 <__fp_round+0x20>
    227e:	bb 0f       	add	r27, r27
    2280:	40 f4       	brcc	.+16     	; 0x2292 <__fp_round+0x20>
    2282:	bf 2b       	or	r27, r31
    2284:	11 f4       	brne	.+4      	; 0x228a <__fp_round+0x18>
    2286:	60 ff       	sbrs	r22, 0
    2288:	04 c0       	rjmp	.+8      	; 0x2292 <__fp_round+0x20>
    228a:	6f 5f       	subi	r22, 0xFF	; 255
    228c:	7f 4f       	sbci	r23, 0xFF	; 255
    228e:	8f 4f       	sbci	r24, 0xFF	; 255
    2290:	9f 4f       	sbci	r25, 0xFF	; 255
    2292:	08 95       	ret

00002294 <__udivmodhi4>:
    2294:	aa 1b       	sub	r26, r26
    2296:	bb 1b       	sub	r27, r27
    2298:	51 e1       	ldi	r21, 0x11	; 17
    229a:	07 c0       	rjmp	.+14     	; 0x22aa <__udivmodhi4_ep>

0000229c <__udivmodhi4_loop>:
    229c:	aa 1f       	adc	r26, r26
    229e:	bb 1f       	adc	r27, r27
    22a0:	a6 17       	cp	r26, r22
    22a2:	b7 07       	cpc	r27, r23
    22a4:	10 f0       	brcs	.+4      	; 0x22aa <__udivmodhi4_ep>
    22a6:	a6 1b       	sub	r26, r22
    22a8:	b7 0b       	sbc	r27, r23

000022aa <__udivmodhi4_ep>:
    22aa:	88 1f       	adc	r24, r24
    22ac:	99 1f       	adc	r25, r25
    22ae:	5a 95       	dec	r21
    22b0:	a9 f7       	brne	.-22     	; 0x229c <__udivmodhi4_loop>
    22b2:	80 95       	com	r24
    22b4:	90 95       	com	r25
    22b6:	bc 01       	movw	r22, r24
    22b8:	cd 01       	movw	r24, r26
    22ba:	08 95       	ret

000022bc <__udivmodsi4>:
    22bc:	a1 e2       	ldi	r26, 0x21	; 33
    22be:	1a 2e       	mov	r1, r26
    22c0:	aa 1b       	sub	r26, r26
    22c2:	bb 1b       	sub	r27, r27
    22c4:	fd 01       	movw	r30, r26
    22c6:	0d c0       	rjmp	.+26     	; 0x22e2 <__udivmodsi4_ep>

000022c8 <__udivmodsi4_loop>:
    22c8:	aa 1f       	adc	r26, r26
    22ca:	bb 1f       	adc	r27, r27
    22cc:	ee 1f       	adc	r30, r30
    22ce:	ff 1f       	adc	r31, r31
    22d0:	a2 17       	cp	r26, r18
    22d2:	b3 07       	cpc	r27, r19
    22d4:	e4 07       	cpc	r30, r20
    22d6:	f5 07       	cpc	r31, r21
    22d8:	20 f0       	brcs	.+8      	; 0x22e2 <__udivmodsi4_ep>
    22da:	a2 1b       	sub	r26, r18
    22dc:	b3 0b       	sbc	r27, r19
    22de:	e4 0b       	sbc	r30, r20
    22e0:	f5 0b       	sbc	r31, r21

000022e2 <__udivmodsi4_ep>:
    22e2:	66 1f       	adc	r22, r22
    22e4:	77 1f       	adc	r23, r23
    22e6:	88 1f       	adc	r24, r24
    22e8:	99 1f       	adc	r25, r25
    22ea:	1a 94       	dec	r1
    22ec:	69 f7       	brne	.-38     	; 0x22c8 <__udivmodsi4_loop>
    22ee:	60 95       	com	r22
    22f0:	70 95       	com	r23
    22f2:	80 95       	com	r24
    22f4:	90 95       	com	r25
    22f6:	9b 01       	movw	r18, r22
    22f8:	ac 01       	movw	r20, r24
    22fa:	bd 01       	movw	r22, r26
    22fc:	cf 01       	movw	r24, r30
    22fe:	08 95       	ret

00002300 <memcmp>:
    2300:	fb 01       	movw	r30, r22
    2302:	dc 01       	movw	r26, r24
    2304:	04 c0       	rjmp	.+8      	; 0x230e <memcmp+0xe>
    2306:	8d 91       	ld	r24, X+
    2308:	01 90       	ld	r0, Z+
    230a:	80 19       	sub	r24, r0
    230c:	21 f4       	brne	.+8      	; 0x2316 <memcmp+0x16>
    230e:	41 50       	subi	r20, 0x01	; 1
    2310:	50 40       	sbci	r21, 0x00	; 0
    2312:	c8 f7       	brcc	.-14     	; 0x2306 <memcmp+0x6>
    2314:	88 1b       	sub	r24, r24
    2316:	99 0b       	sbc	r25, r25
    2318:	08 95       	ret

0000231a <memcpy>:
    231a:	fb 01       	movw	r30, r22
    231c:	dc 01       	movw	r26, r24
    231e:	02 c0       	rjmp	.+4      	; 0x2324 <memcpy+0xa>
    2320:	01 90       	ld	r0, Z+
    2322:	0d 92       	st	X+, r0
    2324:	41 50       	subi	r20, 0x01	; 1
    2326:	50 40       	sbci	r21, 0x00	; 0
    2328:	d8 f7       	brcc	.-10     	; 0x2320 <memcpy+0x6>
    232a:	08 95       	ret

0000232c <_exit>:
    232c:	f8 94       	cli

0000232e <__stop_program>:
    232e:	ff cf       	rjmp	.-2      	; 0x232e <__stop_program>
